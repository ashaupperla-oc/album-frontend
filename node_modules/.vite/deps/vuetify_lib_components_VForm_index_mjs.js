import {
  createForm,
  makeFormProps
} from "./chunk-E3AIYI6K.js";
import {
  useForwardRef
} from "./chunk-TFFEYWYZ.js";
import "./chunk-XAL2DXS4.js";
import {
  defineComponent,
  useRender
} from "./chunk-5FFDOG6D.js";
import {
  createVNode,
  ref
} from "./chunk-K4N6GQWC.js";
import {
  __spreadValues,
  init_define_process_env
} from "./chunk-YCZKCQV3.js";

// dep:vuetify_lib_components_VForm_index_mjs
init_define_process_env();

// node_modules/vuetify/lib/components/VForm/index.mjs
init_define_process_env();

// node_modules/vuetify/lib/components/VForm/VForm.mjs
init_define_process_env();
var VForm = defineComponent({
  name: "VForm",
  props: __spreadValues({}, makeFormProps()),
  emits: {
    "update:modelValue": (val) => true,
    submit: (e) => true
  },
  setup(props, _ref) {
    let {
      slots,
      emit
    } = _ref;
    const form = createForm(props);
    const formRef = ref();
    function onReset(e) {
      e.preventDefault();
      form.reset();
    }
    function onSubmit(_e) {
      const e = _e;
      const ready = form.validate();
      e.then = ready.then.bind(ready);
      e.catch = ready.catch.bind(ready);
      e.finally = ready.finally.bind(ready);
      emit("submit", e);
      if (!e.defaultPrevented) {
        ready.then((_ref2) => {
          let {
            valid
          } = _ref2;
          if (valid) {
            var _formRef$value;
            (_formRef$value = formRef.value) == null ? void 0 : _formRef$value.submit();
          }
        });
      }
      e.preventDefault();
    }
    useRender(() => {
      var _slots$default;
      return createVNode("form", {
        "ref": formRef,
        "class": "v-form",
        "novalidate": true,
        "onReset": onReset,
        "onSubmit": onSubmit
      }, [(_slots$default = slots.default) == null ? void 0 : _slots$default.call(slots, form)]);
    });
    return useForwardRef(form, formRef);
  }
});
export {
  VForm
};
//# sourceMappingURL=vuetify_lib_components_VForm_index_mjs.js.map
