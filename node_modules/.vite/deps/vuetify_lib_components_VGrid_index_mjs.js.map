{
  "version": 3,
  "sources": ["dep:vuetify_lib_components_VGrid_index_mjs", "../../vuetify/src/components/VGrid/VContainer.tsx", "../../vuetify/src/components/VGrid/VCol.ts", "../../vuetify/src/components/VGrid/VRow.ts", "../../vuetify/src/components/VGrid/VSpacer.ts"],
  "sourcesContent": ["\nexport * from \"./node_modules/vuetify/lib/components/VGrid/index.mjs\"", "// Styles\nimport './VGrid.sass'\n\n// Composables\nimport { makeTagProps } from '@/composables/tag'\n\n// Utilities\nimport { defineComponent } from '@/util'\n\nexport const VContainer = defineComponent({\n  name: 'VContainer',\n\n  props: {\n    fluid: {\n      type: Boolean,\n      default: false,\n    },\n    ...makeTagProps(),\n  },\n\n  setup (props, { slots }) {\n    return () => (\n      <props.tag\n        class={[\n          'v-container',\n          { 'v-container--fluid': props.fluid },\n        ]}\n        v-slots={ slots }\n      />\n    )\n  },\n})\n", "// Styles\nimport './VGrid.sass'\n\n// Composables\nimport { makeTagProps } from '@/composables/tag'\n\n// Utilities\nimport { capitalize, computed, h } from 'vue'\nimport { defineComponent } from '@/util'\n\n// Types\nimport type { Prop } from 'vue'\n\nconst breakpoints = ['sm', 'md', 'lg', 'xl', 'xxl'] as const // no xs\n\nconst breakpointProps = (() => {\n  return breakpoints.reduce((props, val) => {\n    props[val] = {\n      type: [Boolean, String, Number],\n      default: false,\n    }\n    return props\n  }, {} as Record<string, Prop<boolean | string | number, false>>)\n})()\n\nconst offsetProps = (() => {\n  return breakpoints.reduce((props, val) => {\n    props['offset' + capitalize(val)] = {\n      type: [String, Number],\n      default: null,\n    }\n    return props\n  }, {} as Record<string, Prop<string | number, null>>)\n})()\n\nconst orderProps = (() => {\n  return breakpoints.reduce((props, val) => {\n    props['order' + capitalize(val)] = {\n      type: [String, Number],\n      default: null,\n    }\n    return props\n  }, {} as Record<string, Prop<string | number, null>>)\n})()\n\nconst propMap = {\n  col: Object.keys(breakpointProps),\n  offset: Object.keys(offsetProps),\n  order: Object.keys(orderProps),\n}\n\nfunction breakpointClass (type: keyof typeof propMap, prop: string, val: boolean | string | number) {\n  let className: string = type\n  if (val == null || val === false) {\n    return undefined\n  }\n  if (prop) {\n    const breakpoint = prop.replace(type, '')\n    className += `-${breakpoint}`\n  }\n  if (type === 'col') {\n    className = 'v-' + className\n  }\n  // Handling the boolean style prop when accepting [Boolean, String, Number]\n  // means Vue will not convert <v-col sm></v-col> to sm: true for us.\n  // Since the default is false, an empty string indicates the prop's presence.\n  if (type === 'col' && (val === '' || val === true)) {\n    // .v-col-md\n    return className.toLowerCase()\n  }\n  // .order-md-6\n  className += `-${val}`\n  return className.toLowerCase()\n}\n\nexport const VCol = defineComponent({\n  name: 'VCol',\n\n  props: {\n    cols: {\n      type: [Boolean, String, Number],\n      default: false,\n    },\n    ...breakpointProps,\n    offset: {\n      type: [String, Number],\n      default: null,\n    },\n    ...offsetProps,\n    order: {\n      type: [String, Number],\n      default: null,\n    },\n    ...orderProps,\n    alignSelf: {\n      type: String,\n      default: null,\n      validator: (str: any) => ['auto', 'start', 'end', 'center', 'baseline', 'stretch'].includes(str),\n    },\n    ...makeTagProps(),\n  },\n\n  setup (props, { slots }) {\n    const classes = computed(() => {\n      const classList: any[] = []\n\n      // Loop through `col`, `offset`, `order` breakpoint props\n      let type: keyof typeof propMap\n      for (type in propMap) {\n        propMap[type].forEach(prop => {\n          const value: string | number | boolean = (props as any)[prop]\n          const className = breakpointClass(type, prop, value)\n          if (className) classList!.push(className)\n        })\n      }\n\n      const hasColClasses = classList.some(className => className.startsWith('v-col-'))\n\n      classList.push({\n        // Default to .v-col if no other col-{bp}-* classes generated nor `cols` specified.\n        'v-col': !hasColClasses || !props.cols,\n        [`v-col-${props.cols}`]: props.cols,\n        [`offset-${props.offset}`]: props.offset,\n        [`order-${props.order}`]: props.order,\n        [`align-self-${props.alignSelf}`]: props.alignSelf,\n      })\n\n      return classList\n    })\n\n    return () => h(props.tag, {\n      class: classes.value,\n    }, slots.default?.())\n  },\n})\n", "// Styles\nimport './VGrid.sass'\n\n// Composables\nimport { makeTagProps } from '@/composables/tag'\n\n// Utilities\nimport { capitalize, computed, h } from 'vue'\nimport { defineComponent } from '@/util'\n\n// Types\nimport type { Prop } from 'vue'\n\nconst breakpoints = ['sm', 'md', 'lg', 'xl', 'xxl'] as const // no xs\n\nconst ALIGNMENT = ['start', 'end', 'center'] as const\n\nfunction makeRowProps (prefix: string, def: () => Prop<string, null>) {\n  return breakpoints.reduce((props, val) => {\n    props[prefix + capitalize(val)] = def()\n    return props\n  }, {} as Record<string, Prop<string, null>>)\n}\n\nconst alignValidator = (str: any) => [...ALIGNMENT, 'baseline', 'stretch'].includes(str)\nconst alignProps = makeRowProps('align', () => ({\n  type: String,\n  default: null,\n  validator: alignValidator,\n}))\n\nconst justifyValidator = (str: any) => [...ALIGNMENT, 'space-between', 'space-around'].includes(str)\nconst justifyProps = makeRowProps('justify', () => ({\n  type: String,\n  default: null,\n  validator: justifyValidator,\n}))\n\nconst alignContentValidator = (str: any) => [...ALIGNMENT, 'space-between', 'space-around', 'stretch'].includes(str)\nconst alignContentProps = makeRowProps('alignContent', () => ({\n  type: String,\n  default: null,\n  validator: alignContentValidator,\n}))\n\nconst propMap = {\n  align: Object.keys(alignProps),\n  justify: Object.keys(justifyProps),\n  alignContent: Object.keys(alignContentProps),\n}\n\nconst classMap = {\n  align: 'align',\n  justify: 'justify',\n  alignContent: 'align-content',\n}\n\nfunction breakpointClass (type: keyof typeof propMap, prop: string, val: string) {\n  let className = classMap[type]\n  if (val == null) {\n    return undefined\n  }\n  if (prop) {\n    // alignSm -> Sm\n    const breakpoint = prop.replace(type, '')\n    className += `-${breakpoint}`\n  }\n  // .align-items-sm-center\n  className += `-${val}`\n  return className.toLowerCase()\n}\n\nexport const VRow = defineComponent({\n  name: 'VRow',\n\n  props: {\n    dense: Boolean,\n    noGutters: Boolean,\n    align: {\n      type: String,\n      default: null,\n      validator: alignValidator,\n    },\n    ...alignProps,\n    justify: {\n      type: String,\n      default: null,\n      validator: justifyValidator,\n    },\n    ...justifyProps,\n    alignContent: {\n      type: String,\n      default: null,\n      validator: alignContentValidator,\n    },\n    ...alignContentProps,\n    ...makeTagProps(),\n  },\n\n  setup (props, { slots }) {\n    const classes = computed(() => {\n      const classList: any[] = []\n\n      // Loop through `align`, `justify`, `alignContent` breakpoint props\n      let type: keyof typeof propMap\n      for (type in propMap) {\n        propMap[type].forEach(prop => {\n          const value: string = (props as any)[prop]\n          const className = breakpointClass(type, prop, value)\n          if (className) classList!.push(className)\n        })\n      }\n\n      classList.push({\n        'v-row--no-gutters': props.noGutters,\n        'v-row--dense': props.dense,\n        [`align-${props.align}`]: props.align,\n        [`justify-${props.justify}`]: props.justify,\n        [`align-content-${props.alignContent}`]: props.alignContent,\n      })\n\n      return classList\n    })\n\n    return () => h(props.tag, {\n      class: ['v-row', classes.value],\n    }, slots.default?.())\n  },\n})\n", "import { createSimpleFunctional } from '@/util'\n\nexport const VSpacer = createSimpleFunctional('flex-grow-1', 'div', 'VSpacer')\n"],
  "mappings": "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",
  "names": []
}
