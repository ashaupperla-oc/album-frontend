{
  "version": 3,
  "sources": ["../../vuetify/src/util/helpers.ts", "../../vuetify/src/util/colorUtils.ts", "../../vuetify/src/util/console.ts", "../../vuetify/src/util/color/transformSRGB.ts", "../../vuetify/src/util/color/transformCIELAB.ts", "../../vuetify/src/composables/defaults.ts", "../../vuetify/src/util/defineComponent.tsx", "../../vuetify/src/util/createSimpleFunctional.ts", "../../vuetify/src/util/getCurrentInstance.ts", "../../vuetify/src/util/globals.ts", "../../vuetify/src/util/propsFactory.ts", "../../vuetify/src/util/useRender.ts", "../../vuetify/lib/util/index.mjs", "../../vuetify/src/util/box.ts", "../../vuetify/src/util/animation.ts", "../../vuetify/src/util/dom.ts", "../../vuetify/src/util/easing.ts", "../../vuetify/src/util/getScrollParent.ts", "../../vuetify/src/util/isFixedPosition.ts"],
  "sourcesContent": ["// Utilities\nimport { camelize, Fragment } from 'vue'\n\n// Types\nimport type { ComponentInternalInstance, ComponentPublicInstance, InjectionKey, Ref, Slots, VNode, VNodeChild } from 'vue'\n\nexport function getNestedValue (obj: any, path: (string | number)[], fallback?: any): any {\n  const last = path.length - 1\n\n  if (last < 0) return obj === undefined ? fallback : obj\n\n  for (let i = 0; i < last; i++) {\n    if (obj == null) {\n      return fallback\n    }\n    obj = obj[path[i]]\n  }\n\n  if (obj == null) return fallback\n\n  return obj[path[last]] === undefined ? fallback : obj[path[last]]\n}\n\nexport function deepEqual (a: any, b: any): boolean {\n  if (a === b) return true\n\n  if (\n    a instanceof Date &&\n    b instanceof Date &&\n    a.getTime() !== b.getTime()\n  ) {\n    // If the values are Date, compare them as timestamps\n    return false\n  }\n\n  if (a !== Object(a) || b !== Object(b)) {\n    // If the values aren't objects, they were already checked for equality\n    return false\n  }\n\n  const props = Object.keys(a)\n\n  if (props.length !== Object.keys(b).length) {\n    // Different number of props, don't bother to check\n    return false\n  }\n\n  return props.every(p => deepEqual(a[p], b[p]))\n}\n\nexport function getObjectValueByPath (obj: any, path: string, fallback?: any): any {\n  // credit: http://stackoverflow.com/questions/6491463/accessing-nested-javascript-objects-with-string-key#comment55278413_6491621\n  if (obj == null || !path || typeof path !== 'string') return fallback\n  if (obj[path] !== undefined) return obj[path]\n  path = path.replace(/\\[(\\w+)\\]/g, '.$1') // convert indexes to properties\n  path = path.replace(/^\\./, '') // strip a leading dot\n  return getNestedValue(obj, path.split('.'), fallback)\n}\n\nexport type SelectItemKey = string | (string | number)[] | ((item: Record<string, any>, fallback?: any) => any)\n\nexport function getPropertyFromItem (\n  item: any,\n  property: SelectItemKey,\n  fallback?: any\n): any {\n  if (property == null) return item === undefined ? fallback : item\n\n  if (item !== Object(item)) return fallback === undefined ? item : fallback\n\n  if (typeof property === 'string') return getObjectValueByPath(item, property, fallback)\n\n  if (Array.isArray(property)) return getNestedValue(item, property, fallback)\n\n  if (typeof property !== 'function') return fallback\n\n  const value = property(item, fallback)\n\n  return typeof value === 'undefined' ? fallback : value\n}\n\nexport function createRange (length: number, start = 0): number[] {\n  return Array.from({ length }, (v, k) => start + k)\n}\n\nexport function getZIndex (el?: Element | null): number {\n  if (!el || el.nodeType !== Node.ELEMENT_NODE) return 0\n\n  const index = +window.getComputedStyle(el).getPropertyValue('z-index')\n\n  if (!index) return getZIndex(el.parentNode as Element)\n  return index\n}\n\nconst tagsToReplace: Record<string, string> = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n}\n\nexport function escapeHTML (str: string): string {\n  return str.replace(/[&<>]/g, tag => tagsToReplace[tag] || tag)\n}\n\nexport function filterObjectOnKeys<T, K extends keyof T> (obj: T, keys: K[]): { [N in K]: T[N] } {\n  const filtered = {} as { [N in K]: T[N] }\n\n  for (let i = 0; i < keys.length; i++) {\n    const key = keys[i]\n    if (typeof obj[key] !== 'undefined') {\n      filtered[key] = obj[key]\n    }\n  }\n\n  return filtered\n}\n\nexport function convertToUnit (str: number, unit?: string): string\nexport function convertToUnit (str: string | number | null | undefined, unit?: string): string | undefined\nexport function convertToUnit (str: string | number | null | undefined, unit = 'px'): string | undefined {\n  if (str == null || str === '') {\n    return undefined\n  } else if (isNaN(+str!)) {\n    return String(str)\n  } else if (!isFinite(+str!)) {\n    return undefined\n  } else {\n    return `${Number(str)}${unit}`\n  }\n}\n\nexport function isObject (obj: any): obj is object {\n  return obj !== null && typeof obj === 'object' && !Array.isArray(obj)\n}\n\nexport function isComponentInstance (obj: any): obj is ComponentPublicInstance {\n  return obj?.$el\n}\n\n// KeyboardEvent.keyCode aliases\nexport const keyCodes = Object.freeze({\n  enter: 13,\n  tab: 9,\n  delete: 46,\n  esc: 27,\n  space: 32,\n  up: 38,\n  down: 40,\n  left: 37,\n  right: 39,\n  end: 35,\n  home: 36,\n  del: 46,\n  backspace: 8,\n  insert: 45,\n  pageup: 33,\n  pagedown: 34,\n  shift: 16,\n})\n\nexport const keyValues = Object.freeze({\n  enter: 'Enter',\n  tab: 'Tab',\n  delete: 'Delete',\n  esc: 'Escape',\n  space: 'Space',\n  up: 'ArrowUp',\n  down: 'ArrowDown',\n  left: 'ArrowLeft',\n  right: 'ArrowRight',\n  end: 'End',\n  home: 'Home',\n  del: 'Delete',\n  backspace: 'Backspace',\n  insert: 'Insert',\n  pageup: 'PageUp',\n  pagedown: 'PageDown',\n  shift: 'Shift',\n})\n\nexport function keys<O> (o: O) {\n  return Object.keys(o) as (keyof O)[]\n}\n\ntype MaybePick<\n  T extends object,\n  U extends Extract<keyof T, string>\n> = Record<string, unknown> extends T ? Partial<Pick<T, U>> : Pick<T, U>\n\nexport function pick<\n  T extends object,\n  U extends Extract<keyof T, string>\n> (obj: T, paths: U[]): [yes: MaybePick<T, U>, no: Omit<T, U>]\nexport function pick<\n  T extends object,\n  U extends Extract<keyof T, string>\n> (obj: T, paths: (U | RegExp)[]): [yes: Partial<T>, no: Partial<T>]\nexport function pick<\n  T extends object,\n  U extends Extract<keyof T, string>\n> (obj: T, paths: (U | RegExp)[]): [yes: Partial<T>, no: Partial<T>] {\n  const found = Object.create(null)\n  const rest = Object.create(null)\n\n  for (const key in obj) {\n    if (\n      paths.some(path => path instanceof RegExp\n        ? path.test(key)\n        : path === key\n      )\n    ) {\n      found[key] = obj[key]\n    } else {\n      rest[key] = obj[key]\n    }\n  }\n\n  return [found, rest]\n}\n\n/**\n * Filter attributes that should be applied to\n * the root element of a an input component. Remaining\n * attributes should be passed to the <input> element inside.\n */\nexport function filterInputAttrs (attrs: Record<string, unknown>) {\n  return pick(attrs, ['class', 'style', 'id', /^data-/])\n}\n\n/**\n * Returns the set difference of B and A, i.e. the set of elements in B but not in A\n */\nexport function arrayDiff (a: any[], b: any[]): any[] {\n  const diff: any[] = []\n  for (let i = 0; i < b.length; i++) {\n    if (!a.includes(b[i])) diff.push(b[i])\n  }\n  return diff\n}\n\ninterface ItemGroup<T> {\n  name: string\n  items: T[]\n}\n\nexport function groupItems<T extends any = any> (\n  items: T[],\n  groupBy: string[],\n  groupDesc: boolean[]\n): ItemGroup<T>[] {\n  const key = groupBy[0]\n  const groups: ItemGroup<T>[] = []\n  let current\n  for (let i = 0; i < items.length; i++) {\n    const item = items[i]\n    const val = getObjectValueByPath(item, key, null)\n    if (current !== val) {\n      current = val\n      groups.push({\n        name: val ?? '',\n        items: [],\n      })\n    }\n    groups[groups.length - 1].items.push(item)\n  }\n  return groups\n}\n\nexport function wrapInArray<T> (v: T | T[] | null | undefined): T[] {\n  return v == null\n    ? []\n    : Array.isArray(v)\n      ? v : [v]\n}\n\ntype DataTableCompareFunction<T = any> = (a: T, b: T) => number\nexport function sortItems<T extends any, K extends keyof T> (\n  items: T[],\n  sortBy: string[],\n  sortDesc: boolean[],\n  locale: string,\n  customSorters?: Record<K, DataTableCompareFunction<T[K]>>\n): T[] {\n  if (sortBy === null || !sortBy.length) return items\n  const stringCollator = new Intl.Collator(locale, { sensitivity: 'accent', usage: 'sort' })\n\n  return items.sort((a, b) => {\n    for (let i = 0; i < sortBy.length; i++) {\n      const sortKey = sortBy[i]\n\n      let sortA = getObjectValueByPath(a, sortKey)\n      let sortB = getObjectValueByPath(b, sortKey)\n\n      if (sortDesc[i]) {\n        [sortA, sortB] = [sortB, sortA]\n      }\n\n      if (customSorters?.[sortKey as K]) {\n        const customResult = customSorters[sortKey as K](sortA, sortB)\n\n        if (!customResult) continue\n\n        return customResult\n      }\n\n      // Check if both cannot be evaluated\n      if (sortA === null && sortB === null) {\n        continue\n      }\n\n      // Dates should be compared numerically\n      if (sortA instanceof Date && sortB instanceof Date) {\n        return sortA.getTime() - sortB.getTime()\n      }\n\n      [sortA, sortB] = [sortA, sortB].map(s => (s || '').toString().toLocaleLowerCase())\n\n      if (sortA !== sortB) {\n        if (!isNaN(sortA) && !isNaN(sortB)) return Number(sortA) - Number(sortB)\n        return stringCollator.compare(sortA, sortB)\n      }\n    }\n\n    return 0\n  })\n}\n\nexport function defaultFilter (value: any, search: string | null, item: any) {\n  return value != null &&\n    search != null &&\n    typeof value !== 'boolean' &&\n    value.toString().toLocaleLowerCase().indexOf(search.toLocaleLowerCase()) !== -1\n}\n\nexport function searchItems<T extends any = any> (items: T[], search: string): T[] {\n  if (!search) return items\n  search = search.toString().toLowerCase()\n  if (search.trim() === '') return items\n\n  return items.filter((item: any) => Object.keys(item).some(key => defaultFilter(getObjectValueByPath(item, key), search, item)))\n}\n\nexport function debounce (fn: Function, delay: number) {\n  let timeoutId = 0 as any\n  return (...args: any[]) => {\n    clearTimeout(timeoutId)\n    timeoutId = setTimeout(() => fn(...args), delay)\n  }\n}\n\nexport function throttle<T extends (...args: any[]) => any> (fn: T, limit: number) {\n  let throttling = false\n  return (...args: Parameters<T>): void | ReturnType<T> => {\n    if (!throttling) {\n      throttling = true\n      setTimeout(() => throttling = false, limit)\n      return fn(...args)\n    }\n  }\n}\n\ntype Writable<T> = {\n  -readonly [P in keyof T]: T[P]\n}\n\n/**\n * Filters slots to only those starting with `prefix`, removing the prefix\n */\nexport function getPrefixedSlots (prefix: string, slots: Slots): Slots {\n  return Object.keys(slots)\n    .filter(k => k.startsWith(prefix))\n    .reduce<Writable<Slots>>((obj, k) => {\n      obj[k.replace(prefix, '')] = slots[k]\n      return obj\n    }, {})\n}\n\nexport function clamp (value: number, min = 0, max = 1) {\n  return Math.max(min, Math.min(max, value))\n}\n\nexport function padEnd (str: string, length: number, char = '0') {\n  return str + char.repeat(Math.max(0, length - str.length))\n}\n\nexport function chunk (str: string, size = 1) {\n  const chunked: string[] = []\n  let index = 0\n  while (index < str.length) {\n    chunked.push(str.substr(index, size))\n    index += size\n  }\n  return chunked\n}\n\nexport function humanReadableFileSize (bytes: number, base: 1000 | 1024 = 1000): string {\n  if (bytes < base) {\n    return `${bytes} B`\n  }\n\n  const prefix = base === 1024 ? ['Ki', 'Mi', 'Gi'] : ['k', 'M', 'G']\n  let unit = -1\n  while (Math.abs(bytes) >= base && unit < prefix.length - 1) {\n    bytes /= base\n    ++unit\n  }\n  return `${bytes.toFixed(1)} ${prefix[unit]}B`\n}\n\nexport function camelizeObjectKeys (obj: Record<string, any> | null | undefined) {\n  if (!obj) return {}\n\n  return Object.keys(obj).reduce((o: any, key: string) => {\n    o[camelize(key)] = obj[key]\n    return o\n  }, {})\n}\n\nexport function mergeDeep (\n  source: Record<string, any> = {},\n  target: Record<string, any> = {},\n  arrayFn?: (a: unknown[], b: unknown[]) => unknown[],\n) {\n  const out: Record<string, any> = {}\n\n  for (const key in source) {\n    out[key] = source[key]\n  }\n\n  for (const key in target) {\n    const sourceProperty = source[key]\n    const targetProperty = target[key]\n\n    // Only continue deep merging if\n    // both properties are objects\n    if (\n      isObject(sourceProperty) &&\n      isObject(targetProperty)\n    ) {\n      out[key] = mergeDeep(sourceProperty, targetProperty, arrayFn)\n\n      continue\n    }\n\n    if (Array.isArray(sourceProperty) && Array.isArray(targetProperty) && arrayFn) {\n      out[key] = arrayFn(sourceProperty, targetProperty)\n\n      continue\n    }\n\n    out[key] = targetProperty\n  }\n\n  return out\n}\n\nexport function fillArray<T> (length: number, obj: T) {\n  return Array(length).fill(obj)\n}\n\nexport function getUid () {\n  return getUid._uid++\n}\ngetUid._uid = 0\n\nexport function flattenFragments (nodes: VNode[]): VNode[] {\n  return nodes.map(node => {\n    if (node.type === Fragment) {\n      return flattenFragments(node.children as VNode[])\n    } else {\n      return node\n    }\n  }).flat()\n}\n\nexport const randomHexColor = () => {\n  const n = (Math.random() * 0xfffff * 1000000).toString(16)\n  return '#' + n.slice(0, 6)\n}\n\nexport function toKebabCase (str = '') {\n  return str\n    .replace(/[^a-z]/gi, '-')\n    .replace(/\\B([A-Z])/g, '-$1')\n    .toLowerCase()\n}\n\nexport type MaybeRef<T> = T | Ref<T>\n\nexport function findChildren (vnode?: VNodeChild): ComponentInternalInstance[] {\n  if (!vnode || typeof vnode !== 'object') {\n    return []\n  }\n\n  if (Array.isArray(vnode)) {\n    return vnode\n      .map(child => findChildren(child))\n      .filter(v => v)\n      .flat(1)\n  } else if (Array.isArray(vnode.children)) {\n    return vnode.children\n      .map(child => findChildren(child))\n      .filter(v => v)\n      .flat(1)\n  } else if (vnode.component) {\n    return [vnode.component, ...findChildren(vnode.component?.subTree)]\n      .filter(v => v)\n      .flat(1)\n  }\n\n  return []\n}\n\nexport function findChildrenWithProvide (\n  key: InjectionKey<any> | symbol,\n  vnode?: VNodeChild,\n): ComponentInternalInstance[] {\n  if (!vnode || typeof vnode !== 'object') return []\n\n  if (Array.isArray(vnode)) {\n    return vnode.map(child => findChildrenWithProvide(key, child)).flat(1)\n  } else if (Array.isArray(vnode.children)) {\n    return vnode.children.map(child => findChildrenWithProvide(key, child)).flat(1)\n  } else if (vnode.component) {\n    if (Object.getOwnPropertySymbols(vnode.component.provides).includes(key as symbol)) {\n      return [vnode.component]\n    } else if (vnode.component.subTree) {\n      return findChildrenWithProvide(key, vnode.component.subTree).flat(1)\n    }\n  }\n\n  return []\n}\n\nexport class CircularBuffer<T = never> {\n  readonly #arr: Array<T> = []\n  #pointer = 0\n\n  constructor (public readonly size: number) {}\n\n  push (val: T) {\n    this.#arr[this.#pointer] = val\n    this.#pointer = (this.#pointer + 1) % this.size\n  }\n\n  values (): T[] {\n    return this.#arr.slice(this.#pointer).concat(this.#arr.slice(0, this.#pointer))\n  }\n}\n\nexport type UnionToIntersection<U> =\n  (U extends any ? (k: U) => void : never) extends ((k: infer I) => void) ? I : never\n\nexport function getEventCoordinates (e: MouseEvent | TouchEvent) {\n  if ('touches' in e) {\n    return { clientX: e.touches[0].clientX, clientY: e.touches[0].clientY }\n  }\n\n  return { clientX: e.clientX, clientY: e.clientY }\n}\n", "// Utilities\nimport { consoleWarn } from './console'\nimport { chunk, padEnd } from './helpers'\nimport * as sRGB from '@/util/color/transformSRGB'\nimport * as CIELAB from '@/util/color/transformCIELAB'\n\n// Types\nimport type { Colors } from '@/composables/theme'\n\nexport type ColorInt = number\nexport type XYZ = [number, number, number]\nexport type LAB = [number, number, number]\nexport type HSV = { h: number, s: number, v: number }\nexport type HSVA = HSV & { a: number }\nexport type RGB = { r: number, g: number, b: number }\nexport type RGBA = RGB & { a: number }\nexport type HSL = { h: number, s: number, l: number }\nexport type HSLA = HSL & { a: number }\nexport type Hex = string\nexport type Hexa = string\nexport type Color = string | number | {}\n\nexport function isCssColor (color?: string | null | false): boolean {\n  return !!color && /^(#|var\\(--|(rgb|hsl)a?\\()/.test(color)\n}\n\nexport function colorToInt (color: Color): ColorInt {\n  let rgb\n\n  if (typeof color === 'number') {\n    rgb = color\n  } else if (typeof color === 'string') {\n    let c = color.startsWith('#') ? color.substring(1) : color\n    if (c.length === 3) {\n      c = c.split('').map(char => char + char).join('')\n    }\n    if (c.length !== 6) {\n      consoleWarn(`'${color}' is not a valid rgb color`)\n    }\n    rgb = parseInt(c, 16)\n  } else {\n    throw new TypeError(`Colors can only be numbers or strings, recieved ${color == null ? color : color.constructor.name} instead`)\n  }\n\n  if (rgb < 0) {\n    consoleWarn(`Colors cannot be negative: '${color}'`)\n    rgb = 0\n  } else if (rgb > 0xffffff || isNaN(rgb)) {\n    consoleWarn(`'${color}' is not a valid rgb color`)\n    rgb = 0xffffff\n  }\n\n  return rgb\n}\n\nexport function classToHex (\n  color: string,\n  colors: Record<string, Record<string, string>>,\n  currentTheme: Partial<Colors>,\n): string {\n  const [colorName, colorModifier] = color\n    .toString().trim().replace('-', '').split(' ', 2) as (string | undefined)[]\n\n  let hexColor = ''\n  if (colorName && colorName in colors) {\n    if (colorModifier && colorModifier in colors[colorName]) {\n      hexColor = colors[colorName][colorModifier]\n    } else if ('base' in colors[colorName]) {\n      hexColor = colors[colorName].base\n    }\n  } else if (colorName && colorName in currentTheme) {\n    hexColor = currentTheme[colorName] as string\n  }\n\n  return hexColor\n}\n\nexport function intToHex (color: ColorInt): string {\n  let hexColor: string = color.toString(16)\n\n  if (hexColor.length < 6) hexColor = '0'.repeat(6 - hexColor.length) + hexColor\n\n  return '#' + hexColor\n}\n\nexport function colorToHex (color: Color): string {\n  return intToHex(colorToInt(color))\n}\n\n/**\n * Converts HSVA to RGBA. Based on formula from https://en.wikipedia.org/wiki/HSL_and_HSV\n *\n * @param color HSVA color as an array [0-360, 0-1, 0-1, 0-1]\n */\nexport function HSVAtoRGBA (hsva: HSVA): RGBA {\n  const { h, s, v, a } = hsva\n  const f = (n: number) => {\n    const k = (n + (h / 60)) % 6\n    return v - v * s * Math.max(Math.min(k, 4 - k, 1), 0)\n  }\n\n  const rgb = [f(5), f(3), f(1)].map(v => Math.round(v * 255))\n\n  return { r: rgb[0], g: rgb[1], b: rgb[2], a }\n}\n\n/**\n * Converts RGBA to HSVA. Based on formula from https://en.wikipedia.org/wiki/HSL_and_HSV\n *\n * @param color RGBA color as an array [0-255, 0-255, 0-255, 0-1]\n */\nexport function RGBAtoHSVA (rgba: RGBA): HSVA {\n  if (!rgba) return { h: 0, s: 1, v: 1, a: 1 }\n\n  const r = rgba.r / 255\n  const g = rgba.g / 255\n  const b = rgba.b / 255\n  const max = Math.max(r, g, b)\n  const min = Math.min(r, g, b)\n\n  let h = 0\n\n  if (max !== min) {\n    if (max === r) {\n      h = 60 * (0 + ((g - b) / (max - min)))\n    } else if (max === g) {\n      h = 60 * (2 + ((b - r) / (max - min)))\n    } else if (max === b) {\n      h = 60 * (4 + ((r - g) / (max - min)))\n    }\n  }\n\n  if (h < 0) h = h + 360\n\n  const s = max === 0 ? 0 : (max - min) / max\n  const hsv = [h, s, max]\n\n  return { h: hsv[0], s: hsv[1], v: hsv[2], a: rgba.a }\n}\n\nexport function HSVAtoHSLA (hsva: HSVA): HSLA {\n  const { h, s, v, a } = hsva\n\n  const l = v - (v * s / 2)\n\n  const sprime = l === 1 || l === 0 ? 0 : (v - l) / Math.min(l, 1 - l)\n\n  return { h, s: sprime, l, a }\n}\n\nexport function HSLAtoHSVA (hsl: HSLA): HSVA {\n  const { h, s, l, a } = hsl\n\n  const v = l + s * Math.min(l, 1 - l)\n\n  const sprime = v === 0 ? 0 : 2 - (2 * l / v)\n\n  return { h, s: sprime, v, a }\n}\n\nexport function RGBAtoCSS (rgba: RGBA): string {\n  return `rgba(${rgba.r}, ${rgba.g}, ${rgba.b}, ${rgba.a})`\n}\n\nexport function HSVAtoCSS (hsva: HSVA): string {\n  return RGBAtoCSS(HSVAtoRGBA(hsva))\n}\n\nexport function RGBtoCSS (rgba: RGBA): string {\n  return RGBAtoCSS({ ...rgba, a: 1 })\n}\n\nexport function RGBAtoHex (rgba: RGBA): Hex {\n  const toHex = (v: number) => {\n    const h = Math.round(v).toString(16)\n    return ('00'.substr(0, 2 - h.length) + h).toUpperCase()\n  }\n\n  return `#${[\n    toHex(rgba.r),\n    toHex(rgba.g),\n    toHex(rgba.b),\n    toHex(Math.round(rgba.a * 255)),\n  ].join('')}`\n}\n\nexport function HexToRGBA (hex: Hex): RGBA {\n  const rgba = chunk(hex.slice(1), 2).map((c: string) => parseInt(c, 16))\n\n  return {\n    r: rgba[0],\n    g: rgba[1],\n    b: rgba[2],\n    a: Math.round((rgba[3] / 255) * 100) / 100,\n  }\n}\n\nexport function HexToHSVA (hex: Hex): HSVA {\n  const rgb = HexToRGBA(hex)\n  return RGBAtoHSVA(rgb)\n}\n\nexport function HSVAtoHex (hsva: HSVA): Hex {\n  return RGBAtoHex(HSVAtoRGBA(hsva))\n}\n\nexport function parseHex (hex: string): Hex {\n  if (hex.startsWith('#')) {\n    hex = hex.slice(1)\n  }\n\n  hex = hex.replace(/([^0-9a-f])/gi, 'F')\n\n  if (hex.length === 3 || hex.length === 4) {\n    hex = hex.split('').map(x => x + x).join('')\n  }\n\n  if (hex.length === 6) {\n    hex = padEnd(hex, 8, 'F')\n  } else {\n    hex = padEnd(padEnd(hex, 6), 8, 'F')\n  }\n\n  return `#${hex}`.toUpperCase().substr(0, 9)\n}\n\nexport function parseGradient (\n  gradient: string,\n  colors: Record<string, Record<string, string>>,\n  currentTheme: Partial<Colors>,\n) {\n  return gradient.replace(/([a-z]+(\\s[a-z]+-[1-5])?)(?=$|,)/gi, x => {\n    return classToHex(x, colors, currentTheme) || x\n  }).replace(/(rgba\\()#[0-9a-f]+(?=,)/gi, x => {\n    return 'rgba(' + Object.values(HexToRGBA(parseHex(x.replace(/rgba\\(/, '')))).slice(0, 3).join(',')\n  })\n}\n\nexport function RGBtoInt (rgba: RGBA): ColorInt {\n  return (rgba.r << 16) + (rgba.g << 8) + rgba.b\n}\n\nexport function colorToRGB (color: string) {\n  const int = colorToInt(color)\n\n  return {\n    r: (int & 0xFF0000) >> 16,\n    g: (int & 0xFF00) >> 8,\n    b: (int & 0xFF),\n  }\n}\n\nexport function lighten (value: ColorInt, amount: number): ColorInt {\n  const lab = CIELAB.fromXYZ(sRGB.toXYZ(value))\n  // TODO: why this false positive?\n  // eslint-disable-next-line @typescript-eslint/restrict-plus-operands\n  lab[0] = lab[0] + amount * 10\n\n  return sRGB.fromXYZ(CIELAB.toXYZ(lab))\n}\n\nexport function darken (value: ColorInt, amount: number): ColorInt {\n  const lab = CIELAB.fromXYZ(sRGB.toXYZ(value))\n  lab[0] = lab[0] - amount * 10\n\n  return sRGB.fromXYZ(CIELAB.toXYZ(lab))\n}\n\n/**\n * Calculate the relative luminance of a given color\n * @see https://www.w3.org/TR/WCAG20/#relativeluminancedef\n */\nexport function getLuma (color: Color) {\n  const rgb = colorToInt(color)\n\n  return sRGB.toXYZ(rgb)[1]\n}\n\n/**\n * Returns the contrast ratio (1-21) between two colors.\n * @see https://www.w3.org/TR/WCAG20/#contrast-ratiodef\n */\nexport function getContrast (first: Color, second: Color) {\n  const l1 = getLuma(first)\n  const l2 = getLuma(second)\n\n  const light = Math.max(l1, l2)\n  const dark = Math.min(l1, l2)\n\n  return (light + 0.05) / (dark + 0.05)\n}\n", "/* eslint-disable no-console */\n// import Vuetify from '../framework'\n\nfunction createMessage (message: string, vm?: any, parent?: any): string | void {\n  // if (Vuetify.config.silent) return\n\n  if (parent) {\n    vm = {\n      _isVue: true,\n      $parent: parent,\n      $options: vm,\n    }\n  }\n\n  if (vm) {\n    // Only show each message once per instance\n    vm.$_alreadyWarned = vm.$_alreadyWarned || []\n    if (vm.$_alreadyWarned.includes(message)) return\n    vm.$_alreadyWarned.push(message)\n  }\n\n  return `[Vuetify] ${message}` + (\n    vm ? generateComponentTrace(vm) : ''\n  )\n}\n\nexport function consoleInfo (message: string, vm?: any, parent?: any): void {\n  const newMessage = createMessage(message, vm, parent)\n  newMessage != null && console.info(newMessage)\n}\n\nexport function consoleWarn (message: string, vm?: any, parent?: any): void {\n  const newMessage = createMessage(message, vm, parent)\n  newMessage != null && console.warn(newMessage)\n}\n\nexport function consoleError (message: string, vm?: any, parent?: any): void {\n  const newMessage = createMessage(message, vm, parent)\n  newMessage != null && console.error(newMessage)\n}\n\nexport function deprecate (original: string, replacement: string, vm?: any, parent?: any) {\n  consoleWarn(`[UPGRADE] '${original}' is deprecated, use '${replacement}' instead.`, vm, parent)\n}\nexport function breaking (original: string, replacement: string, vm?: any, parent?: any) {\n  consoleError(`[BREAKING] '${original}' has been removed, use '${replacement}' instead. For more information, see the upgrade guide https://github.com/vuetifyjs/vuetify/releases/tag/v2.0.0#user-content-upgrade-guide`, vm, parent)\n}\nexport function removed (original: string, vm?: any, parent?: any) {\n  consoleWarn(`[REMOVED] '${original}' has been removed. You can safely omit it.`, vm, parent)\n}\n\n/**\n * Shamelessly stolen from vuejs/vue/blob/dev/src/core/util/debug.js\n */\n\nconst classifyRE = /(?:^|[-_])(\\w)/g\nconst classify = (str: string) => str\n  .replace(classifyRE, c => c.toUpperCase())\n  .replace(/[-_]/g, '')\n\nfunction formatComponentName (vm: any, includeFile?: boolean): string {\n  if (vm.$root === vm) {\n    return '<Root>'\n  }\n  const options = typeof vm === 'function' && vm.cid != null\n    ? vm.options\n    : vm._isVue\n      ? vm.$options || vm.constructor.options\n      : vm || {}\n  let name = options.name || options._componentTag\n  const file = options.__file\n  if (!name && file) {\n    const match = file.match(/([^/\\\\]+)\\.vue$/)\n    name = match?.[1]\n  }\n\n  return (\n    (name ? `<${classify(name)}>` : `<Anonymous>`) +\n    (file && includeFile !== false ? ` at ${file}` : '')\n  )\n}\n\nfunction generateComponentTrace (vm: any): string {\n  if (vm._isVue && vm.$parent) {\n    const tree: any[] = []\n    let currentRecursiveSequence = 0\n    while (vm) {\n      if (tree.length > 0) {\n        const last: any = tree[tree.length - 1]\n        if (last.constructor === vm.constructor) {\n          currentRecursiveSequence++\n          vm = vm.$parent\n          continue\n        } else if (currentRecursiveSequence > 0) {\n          tree[tree.length - 1] = [last, currentRecursiveSequence]\n          currentRecursiveSequence = 0\n        }\n      }\n      tree.push(vm)\n      vm = vm.$parent\n    }\n    return '\\n\\nfound in\\n\\n' + tree\n      .map((vm, i) => `${\n        i === 0 ? '---> ' : ' '.repeat(5 + i * 2)\n      }${\n        Array.isArray(vm)\n          // eslint-disable-next-line sonarjs/no-nested-template-literals\n          ? `${formatComponentName(vm[0])}... (${vm[1]} recursive calls)`\n          : formatComponentName(vm)\n      }`)\n      .join('\\n')\n  } else {\n    return `\\n\\n(found in ${formatComponentName(vm)})`\n  }\n}\n", "import type { ColorInt, XYZ } from '../colorUtils'\nimport { clamp } from '../../util/helpers'\n\n// For converting XYZ to sRGB\nconst srgbForwardMatrix = [\n  [3.2406, -1.5372, -0.4986],\n  [-0.9689, 1.8758, 0.0415],\n  [0.0557, -0.2040, 1.0570],\n]\n\n// Forward gamma adjust\nconst srgbForwardTransform = (C: number): number => (\n  C <= 0.0031308\n    ? C * 12.92\n    : 1.055 * C ** (1 / 2.4) - 0.055\n)\n\n// For converting sRGB to XYZ\nconst srgbReverseMatrix = [\n  [0.4124, 0.3576, 0.1805],\n  [0.2126, 0.7152, 0.0722],\n  [0.0193, 0.1192, 0.9505],\n]\n\n// Reverse gamma adjust\nconst srgbReverseTransform = (C: number): number => (\n  C <= 0.04045\n    ? C / 12.92\n    : ((C + 0.055) / 1.055) ** 2.4\n)\n\nexport function fromXYZ (xyz: XYZ): ColorInt {\n  const rgb = Array(3)\n  const transform = srgbForwardTransform\n  const matrix = srgbForwardMatrix\n\n  // Matrix transform, then gamma adjustment\n  for (let i = 0; i < 3; ++i) {\n    rgb[i] = Math.round(clamp(transform(\n      matrix[i][0] * xyz[0] +\n      matrix[i][1] * xyz[1] +\n      matrix[i][2] * xyz[2]\n    )) * 255)\n  }\n\n  // Rescale back to [0, 255]\n  return (rgb[0] << 16) + (rgb[1] << 8) + (rgb[2] << 0)\n}\n\nexport function toXYZ (rgb: ColorInt): XYZ {\n  const xyz: XYZ = [0, 0, 0]\n  const transform = srgbReverseTransform\n  const matrix = srgbReverseMatrix\n\n  // Rescale from [0, 255] to [0, 1] then adjust sRGB gamma to linear RGB\n  const r = transform((rgb >> 16 & 0xff) / 255)\n  const g = transform((rgb >> 8 & 0xff) / 255)\n  const b = transform((rgb >> 0 & 0xff) / 255)\n\n  // Matrix color space transform\n  for (let i = 0; i < 3; ++i) {\n    xyz[i] = matrix[i][0] * r + matrix[i][1] * g + matrix[i][2] * b\n  }\n\n  return xyz\n}\n", "import type { LAB, XYZ } from '../colorUtils'\n\nconst delta = 0.20689655172413793 // 6\u00F729\n\nconst cielabForwardTransform = (t: number): number => (\n  t > delta ** 3\n    ? Math.cbrt(t)\n    : (t / (3 * delta ** 2)) + 4 / 29\n)\n\nconst cielabReverseTransform = (t: number): number => (\n  t > delta\n    ? t ** 3\n    : (3 * delta ** 2) * (t - 4 / 29)\n)\n\nexport function fromXYZ (xyz: XYZ): LAB {\n  const transform = cielabForwardTransform\n  const transformedY = transform(xyz[1])\n\n  return [\n    116 * transformedY - 16,\n    500 * (transform(xyz[0] / 0.95047) - transformedY),\n    200 * (transformedY - transform(xyz[2] / 1.08883)),\n  ]\n}\n\nexport function toXYZ (lab: LAB): XYZ {\n  const transform = cielabReverseTransform\n  const Ln = (lab[0] + 16) / 116\n  return [\n    transform(Ln + lab[1] / 500) * 0.95047,\n    transform(Ln),\n    transform(Ln - lab[2] / 200) * 1.08883,\n  ]\n}\n", "// Utilities\nimport { computed, inject, provide, ref, unref } from 'vue'\nimport { mergeDeep } from '@/util/helpers'\n\n// Types\nimport type { ComputedRef, InjectionKey, Ref } from 'vue'\nimport type { MaybeRef } from '@/util'\n\nexport interface DefaultsInstance {\n  [key: string]: undefined | Record<string, unknown>\n  global?: Record<string, unknown>\n}\n\nexport type DefaultsOptions = Partial<DefaultsInstance>\n\nexport const DefaultsSymbol: InjectionKey<Ref<DefaultsInstance>> = Symbol.for('vuetify:defaults')\n\nexport function createDefaults (options?: DefaultsInstance): Ref<DefaultsInstance> {\n  return ref(options ?? {})\n}\n\nexport function useDefaults () {\n  const defaults = inject(DefaultsSymbol)\n\n  if (!defaults) throw new Error('[Vuetify] Could not find defaults instance')\n\n  return defaults\n}\n\nexport function provideDefaults (\n  defaults?: MaybeRef<DefaultsInstance | undefined>,\n  options?: {\n    reset?: MaybeRef<number | string | undefined>\n    root?: MaybeRef<boolean | undefined>\n    scoped?: MaybeRef<boolean | undefined>\n  }\n) {\n  const injectedDefaults = useDefaults()\n  const providedDefaults = ref(defaults)\n\n  const newDefaults = computed(() => {\n    const scoped = unref(options?.scoped)\n    const reset = unref(options?.reset)\n    const root = unref(options?.root)\n\n    let properties = mergeDeep(providedDefaults.value, { prev: injectedDefaults.value })\n\n    if (scoped) return properties\n\n    if (reset || root) {\n      const len = Number(reset || Infinity)\n\n      for (let i = 0; i <= len; i++) {\n        if (!properties.prev) break\n\n        properties = properties.prev\n      }\n\n      return properties\n    }\n\n    return mergeDeep(properties.prev, properties)\n  }) as ComputedRef<DefaultsInstance>\n\n  provide(DefaultsSymbol, newDefaults)\n\n  return newDefaults\n}\n", "// Utils\nimport {\n  defineComponent as _defineComponent,\n  effectScope,\n  getCurrentInstance,\n  shallowReactive,\n  shallowRef,\n  toRaw,\n  watch,\n  watchEffect,\n} from 'vue'\nimport { consoleWarn } from '@/util/console'\nimport { toKebabCase } from '@/util/helpers'\nimport { provideDefaults, useDefaults } from '@/composables/defaults'\n\n// Types\nimport type {\n  ComponentOptions,\n  ComponentOptionsMixin,\n  ComponentOptionsWithObjectProps,\n  ComponentPropsOptions,\n  ComputedOptions,\n  DefineComponent,\n  EffectScope,\n  EmitsOptions,\n  MethodOptions,\n  VNode,\n  VNodeChild,\n} from 'vue'\n\nfunction propIsDefined (vnode: VNode, prop: string) {\n  return vnode.props?.hasOwnProperty(prop) ||\n  vnode.props?.hasOwnProperty(toKebabCase(prop))\n}\n\nexport const defineComponent = (function defineComponent (options: ComponentOptions) {\n  options._setup = options._setup ?? options.setup\n\n  if (!options.name) {\n    consoleWarn('The component is missing an explicit name, unable to generate default prop value')\n\n    return options\n  }\n\n  if (options._setup) {\n    options.props = options.props ?? {}\n    options.props._as = String\n    options.setup = function setup (props: Record<string, any>, ctx) {\n      const vm = getCurrentInstance()!\n      const defaults = useDefaults()\n\n      const _subcomponentDefaults = shallowRef()\n      const _props = shallowReactive({ ...toRaw(props) })\n      watchEffect(() => {\n        const globalDefaults = defaults.value.global\n        const componentDefaults = defaults.value[props._as ?? options.name!]\n\n        if (componentDefaults) {\n          const subComponents = Object.entries(componentDefaults).filter(([key]) => key.startsWith('V'))\n          if (subComponents.length) _subcomponentDefaults.value = Object.fromEntries(subComponents)\n        }\n\n        for (const prop of Object.keys(props)) {\n          let newVal\n          if (propIsDefined(vm.vnode, prop)) {\n            newVal = props[prop]\n          } else {\n            newVal = componentDefaults?.[prop] ?? globalDefaults?.[prop] ?? props[prop]\n          }\n          if (_props[prop] !== newVal) {\n            _props[prop] = newVal\n          }\n        }\n      })\n\n      const setupBindings = options._setup(_props, ctx)\n\n      let scope: EffectScope\n      watch(_subcomponentDefaults, (val, oldVal) => {\n        if (!val && scope) scope.stop()\n        else if (val && !oldVal) {\n          scope = effectScope()\n          scope.run(() => {\n            provideDefaults(val)\n          })\n        }\n      }, { immediate: true })\n\n      return setupBindings\n    }\n  }\n\n  return options\n}) as unknown as typeof _defineComponent\n\ntype ToListeners<T extends string | number | symbol> = { [K in T]: K extends `on${infer U}` ? Uncapitalize<U> : K }[T]\nexport type SlotsToProps<T extends Record<string, Slot>> = {\n  $children: () => (T['default'] | VNodeChild | { [K in keyof T]?: T[K] })\n  'v-slots': new () => { [K in keyof T]?: T[K] | false }\n}/* & { // TODO: individual slots are never converted from the constructor type\n  [K in keyof T as `v-slot:${K & string}`]?: new () => (T[K] | false)\n} */\n\ntype Slot<T extends any[] = any[]> = (...args: T) => VNodeChild\nexport type MakeSlots<T extends Record<string, any[]>> = {\n  [K in keyof T]?: Slot<T[K]>\n}\n\nexport function genericComponent<T extends (new () => {\n  $slots?: Record<string, Slot>\n})> (exposeDefaults = true): <\n  PropsOptions extends Readonly<ComponentPropsOptions>,\n  RawBindings,\n  D,\n  C extends ComputedOptions = {},\n  M extends MethodOptions = {},\n  Mixin extends ComponentOptionsMixin = ComponentOptionsMixin,\n  Extends extends ComponentOptionsMixin = ComponentOptionsMixin,\n  E extends EmitsOptions = Record<string, any>,\n  EE extends string = string,\n  I = InstanceType<T>,\n  Base = DefineComponent<\n    (I extends Record<'$props', any> ? Omit<PropsOptions, keyof I['$props']> : PropsOptions) & (\n      I extends Record<'$slots', any>\n        ? SlotsToProps<I['$slots']>\n        : {}\n    ),\n    RawBindings,\n    D,\n    C,\n    M,\n    Mixin,\n    Extends,\n    E extends any[] ? E : I extends Record<'$props', any> ? Omit<E, ToListeners<keyof I['$props']>> : E,\n    EE\n  >\n>(options: ComponentOptionsWithObjectProps<PropsOptions, RawBindings, D, C, M, Mixin, Extends, E, EE>) => Base & T {\n  return options => (exposeDefaults ? defineComponent : _defineComponent)(options) as any\n}\n", "import { camelize, capitalize, h } from 'vue'\nimport { defineComponent } from './defineComponent'\n\nexport function createSimpleFunctional (\n  klass: string,\n  tag = 'div',\n  name?: string\n) {\n  return defineComponent({\n    name: name ?? capitalize(camelize(klass.replace(/__/g, '-'))),\n\n    props: {\n      tag: {\n        type: String,\n        default: tag,\n      },\n    },\n\n    setup (props, { slots }) {\n      return () => h(props.tag, {\n        class: klass,\n      }, slots.default?.())\n    },\n  })\n}\n", "// Utilities\nimport { getCurrentInstance as _getCurrentInstance } from 'vue'\nimport { toKebabCase } from '@/util/helpers'\n\nexport function getCurrentInstance (name: string, message?: string) {\n  const vm = _getCurrentInstance()\n\n  if (!vm) {\n    throw new Error(`[Vuetify] ${name} ${message || 'must be called from inside a setup function'}`)\n  }\n\n  return vm\n}\n\nexport function getCurrentInstanceName (name = 'composables') {\n  return toKebabCase(getCurrentInstance(name).type?.name)\n}\n", "export const IS_NODE = typeof process !== 'undefined'\nexport const IN_BROWSER = typeof window !== 'undefined'\nexport const IS_DEBUG = IS_NODE && process.env.DEBUG === 'true'\nexport const IS_PROD = IS_NODE && process.env.NODE_ENV === 'production'\nexport const SUPPORTS_INTERSECTION = IN_BROWSER && 'IntersectionObserver' in window\nexport const SUPPORTS_TOUCH = IN_BROWSER && ('ontouchstart' in window || window.navigator.maxTouchPoints > 0)\nexport const SUPPORTS_FOCUS_VISIBLE = IN_BROWSER && CSS.supports('selector(:focus-visible)')\n", "import type { ComponentObjectPropsOptions, Prop, PropType } from 'vue'\n\n/**\n * Creates a factory function for props definitions.\n * This is used to define props in a composable then override\n * default values in an implementing component.\n *\n * @example Simplified signature\n * (props: Props) => (defaults?: Record<keyof props, any>) => Props\n *\n * @example Usage\n * const makeProps = propsFactory({\n *   foo: String,\n * })\n *\n * defineComponent({\n *   props: {\n *     ...makeProps({\n *       foo: 'a',\n *     }),\n *   },\n *   setup (props) {\n *     // would be \"string | undefined\", now \"string\" because a default has been provided\n *     props.foo\n *   },\n * }\n */\n\nexport function propsFactory<\n  PropsOptions extends ComponentObjectPropsOptions\n> (props: PropsOptions, source?: string) {\n  return <Defaults extends PartialKeys<PropsOptions> = {}>(\n    defaults?: Defaults\n  ): AppendDefault<PropsOptions, Defaults> => {\n    return Object.keys(props).reduce<any>((obj, prop) => {\n      const isObjectDefinition = typeof props[prop] === 'object' && props[prop] != null && !Array.isArray(props[prop])\n      const definition = isObjectDefinition ? props[prop] : { type: props[prop] }\n\n      if (defaults && prop in defaults) {\n        obj[prop] = {\n          ...definition,\n          default: defaults[prop],\n        }\n      } else {\n        obj[prop] = definition\n      }\n\n      if (source) {\n        obj[prop].source = source\n      }\n\n      return obj\n    }, {})\n  }\n}\n\ntype AppendDefault<T extends ComponentObjectPropsOptions, D extends PartialKeys<T>> = {\n  [P in keyof T]-?: unknown extends D[P]\n    ? T[P]\n    : T[P] extends Record<string, unknown>\n      ? Omit<T[P], 'type' | 'default'> & {\n        type: PropType<MergeDefault<T[P], D[P]>>\n        default: MergeDefault<T[P], D[P]>\n      }\n      : {\n        type: PropType<MergeDefault<T[P], D[P]>>\n        default: MergeDefault<T[P], D[P]>\n      }\n}\n\ntype MergeDefault<T, D> = unknown extends D ? InferPropType<T> : (NonNullable<InferPropType<T>> | D)\n\n/**\n * Like `Partial<T>` but doesn't care what the value is\n */\ntype PartialKeys<T> = { [P in keyof T]?: unknown }\n\n// Copied from Vue\ntype InferPropType<T> = T extends null\n  ? any // null & true would fail to infer\n  : T extends { type: null | true }\n    ? any // As TS issue https://github.com/Microsoft/TypeScript/issues/14829 // somehow `ObjectConstructor` when inferred from { (): T } becomes `any` // `BooleanConstructor` when inferred from PropConstructor(with PropMethod) becomes `Boolean`\n    : T extends ObjectConstructor | { type: ObjectConstructor }\n      ? Record<string, any>\n      : T extends BooleanConstructor | { type: BooleanConstructor }\n        ? boolean\n        : T extends Prop<infer V, infer D> ? (unknown extends V ? D : V) : T\n", "// Utilities\nimport { getCurrentInstance } from './getCurrentInstance'\n\n// Types\nimport type { VNode } from 'vue'\n\nexport function useRender (render: () => VNode): void {\n  const vm = getCurrentInstance('useRender') as any\n  vm.render = render\n}\n", "export * from \"./animation.mjs\";\nexport * from \"./colorUtils.mjs\";\nexport * from \"./console.mjs\";\nexport * from \"./createSimpleFunctional.mjs\";\nexport * from \"./defineComponent.mjs\";\nexport * from \"./dom.mjs\";\nexport * from \"./easing.mjs\";\nexport * from \"./getCurrentInstance.mjs\";\nexport * from \"./getScrollParent.mjs\";\nexport * from \"./globals.mjs\";\nexport * from \"./helpers.mjs\";\nexport * from \"./isFixedPosition.mjs\";\nexport * from \"./propsFactory.mjs\";\nexport * from \"./useRender.mjs\";\n//# sourceMappingURL=index.mjs.map", "export class Box {\n  x: number\n  y: number\n  width: number\n  height: number\n\n  constructor ({ x, y, width, height }: {\n    x: number\n    y: number\n    width: number\n    height: number\n  }) {\n    this.x = x\n    this.y = y\n    this.width = width\n    this.height = height\n  }\n\n  get top () { return this.y }\n  get bottom () { return this.y + this.height }\n  get left () { return this.x }\n  get right () { return this.x + this.width }\n}\n", "import { Box } from '@/util/box'\n\n/** @see https://stackoverflow.com/a/57876601/2074736 */\nexport function nullifyTransforms (el: HTMLElement): Box {\n  const rect = el.getBoundingClientRect()\n  const style = getComputedStyle(el)\n  const tx = style.transform\n\n  if (tx) {\n    let ta, sx, sy, dx, dy\n    if (tx.startsWith('matrix3d(')) {\n      ta = tx.slice(9, -1).split(/, /)\n      sx = +ta[0]\n      sy = +ta[5]\n      dx = +ta[12]\n      dy = +ta[13]\n    } else if (tx.startsWith('matrix(')) {\n      ta = tx.slice(7, -1).split(/, /)\n      sx = +ta[0]\n      sy = +ta[3]\n      dx = +ta[4]\n      dy = +ta[5]\n    } else {\n      return new Box(rect)\n    }\n\n    const to = style.transformOrigin\n    const x = rect.x - dx - (1 - sx) * parseFloat(to)\n    const y = rect.y - dy - (1 - sy) * parseFloat(to.slice(to.indexOf(' ') + 1))\n    const w = sx ? rect.width / sx : el.offsetWidth\n    const h = sy ? rect.height / sy : el.offsetHeight\n\n    return new Box({ x, y, width: w, height: h })\n  } else {\n    return new Box(rect)\n  }\n}\n", "/**\n * Returns:\n *  - 'null' if the node is not attached to the DOM\n *  - the root node (HTMLDocument | ShadowRoot) otherwise\n */\nexport function attachedRoot (node: Node): null | HTMLDocument | ShadowRoot {\n  /* istanbul ignore next */\n  if (typeof node.getRootNode !== 'function') {\n    // Shadow DOM not supported (IE11), lets find the root of this node\n    while (node.parentNode) node = node.parentNode\n\n    // The root parent is the document if the node is attached to the DOM\n    if (node !== document) return null\n\n    return document\n  }\n\n  const root = node.getRootNode()\n\n  // The composed root node is the document if the node is attached to the DOM\n  if (root !== document && root.getRootNode({ composed: true }) !== document) return null\n\n  return root as HTMLDocument | ShadowRoot\n}\n", "export const standardEasing = 'cubic-bezier(0.4, 0, 0.2, 1)'\nexport const deceleratedEasing = 'cubic-bezier(0.0, 0, 0.2, 1)' // Entering\nexport const acceleratedEasing = 'cubic-bezier(0.4, 0, 1, 1)' // Leaving\n", "export function getScrollParent (el?: HTMLElement) {\n  while (el) {\n    if (hasScrollbar(el)) return el\n    el = el.parentElement!\n  }\n\n  return document.scrollingElement as HTMLElement\n}\n\nexport function getScrollParents (el?: HTMLElement) {\n  const elements: HTMLElement[] = []\n  while (el) {\n    if (hasScrollbar(el)) elements.push(el)\n    el = el.parentElement!\n  }\n\n  return elements\n}\n\nexport function hasScrollbar (el?: Element | null) {\n  if (!el || el.nodeType !== Node.ELEMENT_NODE) return false\n\n  const style = window.getComputedStyle(el)\n  return style.overflowY === 'scroll' || (style.overflowY === 'auto' && el.scrollHeight > el.clientHeight)\n}\n", "export function isFixedPosition (el?: HTMLElement) {\n  while (el) {\n    if (window.getComputedStyle(el).position === 'fixed') {\n      return true\n    }\n    el = el.offsetParent as HTMLElement\n  }\n  return false\n}\n"],
  "mappings": "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",
  "names": []
}
