import {
  useTextColor
} from "./chunk-6H3YEJQF.js";
import {
  makeTagProps
} from "./chunk-A5ZFPP7W.js";
import {
  useIcon
} from "./chunk-ACNP3I6U.js";
import {
  makeThemeProps,
  provideTheme
} from "./chunk-I4XXNQXP.js";
import {
  convertToUnit,
  defineComponent,
  flattenFragments,
  getCurrentInstanceName,
  propsFactory
} from "./chunk-5FFDOG6D.js";
import {
  computed,
  createVNode,
  toRef
} from "./chunk-K4N6GQWC.js";
import {
  __spreadValues,
  init_define_process_env
} from "./chunk-YCZKCQV3.js";

// node_modules/vuetify/lib/composables/density.mjs
init_define_process_env();
var allowedDensities = [null, "default", "comfortable", "compact"];
var makeDensityProps = propsFactory({
  density: {
    type: String,
    default: "default",
    validator: (v) => allowedDensities.includes(v)
  }
}, "density");
function useDensity(props) {
  let name = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : getCurrentInstanceName();
  const densityClasses = computed(() => {
    return `${name}--density-${props.density}`;
  });
  return {
    densityClasses
  };
}

// node_modules/vuetify/lib/composables/size.mjs
init_define_process_env();
var predefinedSizes = ["x-small", "small", "default", "large", "x-large"];
var makeSizeProps = propsFactory({
  size: {
    type: [String, Number],
    default: "default"
  }
}, "size");
function useSize(props) {
  let name = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : getCurrentInstanceName();
  const sizeClasses = computed(() => {
    return predefinedSizes.includes(props.size) ? `${name}--size-${props.size}` : null;
  });
  const sizeStyles = computed(() => {
    return !predefinedSizes.includes(props.size) && props.size ? {
      width: convertToUnit(props.size),
      height: convertToUnit(props.size)
    } : null;
  });
  return {
    sizeClasses,
    sizeStyles
  };
}

// node_modules/vuetify/lib/components/VIcon/VIcon.mjs
init_define_process_env();
import "/Applications/XAMPP/xamppfiles/htdocs/seprojects/submit/album-frontend/node_modules/vuetify/lib/components/VIcon/VIcon.css";
var makeVIconProps = propsFactory(__spreadValues(__spreadValues(__spreadValues({
  color: String,
  start: Boolean,
  end: Boolean,
  icon: {
    type: [String, Object]
  }
}, makeSizeProps()), makeTagProps({
  tag: "i"
})), makeThemeProps()), "v-icon");
var VIcon = defineComponent({
  name: "VIcon",
  props: makeVIconProps(),
  setup(props, _ref) {
    let {
      attrs,
      slots
    } = _ref;
    let slotIcon;
    if (slots.default) {
      slotIcon = computed(() => {
        var _slots$default, _flattenFragments$fil;
        const slot = (_slots$default = slots.default) == null ? void 0 : _slots$default.call(slots);
        if (!slot)
          return;
        return (_flattenFragments$fil = flattenFragments(slot).filter((node) => node.children && typeof node.children === "string")[0]) == null ? void 0 : _flattenFragments$fil.children;
      });
    }
    const {
      themeClasses
    } = provideTheme(props);
    const {
      iconData
    } = useIcon(slotIcon || props);
    const {
      sizeClasses
    } = useSize(props);
    const {
      textColorClasses,
      textColorStyles
    } = useTextColor(toRef(props, "color"));
    return () => {
      return createVNode(iconData.value.component, {
        "tag": props.tag,
        "icon": iconData.value.icon,
        "class": ["v-icon", "notranslate", sizeClasses.value, textColorClasses.value, themeClasses.value, {
          "v-icon--clickable": !!attrs.onClick,
          "v-icon--start": props.start,
          "v-icon--end": props.end
        }],
        "style": [!sizeClasses.value ? {
          fontSize: convertToUnit(props.size),
          width: convertToUnit(props.size),
          height: convertToUnit(props.size)
        } : void 0, textColorStyles.value],
        "aria-hidden": "true"
      }, null);
    };
  }
});

// node_modules/vuetify/lib/components/VIcon/index.mjs
init_define_process_env();

export {
  makeDensityProps,
  useDensity,
  makeSizeProps,
  useSize,
  VIcon
};
//# sourceMappingURL=chunk-7EHBJWZ4.js.map
