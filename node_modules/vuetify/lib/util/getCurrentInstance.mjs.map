{"version":3,"sources":["../../src/util/getCurrentInstance.ts"],"names":["getCurrentInstance","_getCurrentInstance","toKebabCase","name","message","vm","Error","getCurrentInstanceName","type"],"mappings":"AAAA;AACA,SAASA,kBAAkB,IAAIC,mBAA/B,QAA0D,KAA1D;SACSC,W;AAET,OAAO,SAASF,kBAAT,CAA6BG,IAA7B,EAA2CC,OAA3C,EAA6D;AAClE,QAAMC,EAAE,GAAGJ,mBAAmB,EAA9B;;AAEA,MAAI,CAACI,EAAL,EAAS;AACP,UAAM,IAAIC,KAAJ,CAAW,aAAYH,IAAK,IAAGC,OAAO,IAAI,6CAA8C,EAAxF,CAAN;AACD;;AAED,SAAOC,EAAP;AACD;AAED,OAAO,SAASE,sBAAT,GAAuD;AAAA;;AAAA,MAAtBJ,IAAsB,uEAAf,aAAe;AAC5D,SAAOD,WAAW,0BAACF,kBAAkB,CAACG,IAAD,CAAlB,CAAyBK,IAA1B,qBAAC,sBAA+BL,IAAhC,CAAlB;AACD","sourcesContent":["// Utilities\nimport { getCurrentInstance as _getCurrentInstance } from 'vue'\nimport { toKebabCase } from '@/util/helpers'\n\nexport function getCurrentInstance (name: string, message?: string) {\n  const vm = _getCurrentInstance()\n\n  if (!vm) {\n    throw new Error(`[Vuetify] ${name} ${message || 'must be called from inside a setup function'}`)\n  }\n\n  return vm\n}\n\nexport function getCurrentInstanceName (name = 'composables') {\n  return toKebabCase(getCurrentInstance(name).type?.name)\n}\n"],"file":"getCurrentInstance.mjs"}