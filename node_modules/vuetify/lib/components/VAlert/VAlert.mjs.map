{"version":3,"sources":["../../../src/components/VAlert/VAlert.tsx"],"names":["VAlertTitle","VDefaultsProvider","VIcon","genOverlays","makeVariantProps","useVariant","makeDensityProps","useDensity","makeDimensionProps","useDimension","makeElevationProps","useElevation","makePositionProps","usePosition","makeRoundedProps","useRounded","makeTagProps","makeThemeProps","provideTheme","useProxiedModel","useTextColor","computed","toRef","defineComponent","allowedTypes","VAlert","name","props","border","type","Boolean","String","validator","val","includes","borderColor","closable","closeIcon","default","closeLabel","icon","modelValue","prominent","title","text","variant","emits","value","setup","slots","isActive","undefined","variantProps","color","themeClasses","colorClasses","colorStyles","variantClasses","densityClasses","dimensionStyles","elevationClasses","positionClasses","positionStyles","roundedClasses","textColorClasses","textColorStyles","onCloseClick","e","hasPrepend","prepend","hasTitle","hasText","hasClose","close","density","size","append"],"mappings":";AAAA;AACA,sB,CAEA;;SACSA,W;SACAC,iB;SACAC,K,8BAET;;SACSC,W,EAAaC,gB,EAAkBC,U;SAC/BC,gB,EAAkBC,U;SAClBC,kB,EAAoBC,Y;SACpBC,kB,EAAoBC,Y;SACpBC,iB,EAAmBC,W;SACnBC,gB,EAAkBC,U;SAClBC,Y;SACAC,c,EAAgBC,Y;SAChBC,e;SACAC,Y,uCAET;;AACA,SAASC,QAAT,EAAmBC,KAAnB,QAAgC,KAAhC;SACSC,e,gCAET;;AAGA,MAAMC,YAAY,GAAG,CAAC,SAAD,EAAY,MAAZ,EAAoB,SAApB,EAA+B,OAA/B,CAArB;AAIA,OAAO,MAAMC,MAAM,GAAGF,eAAe,CAAC;AACpCG,EAAAA,IAAI,EAAE,QAD8B;AAGpCC,EAAAA,KAAK,EAAE;AACLC,IAAAA,MAAM,EAAE;AACNC,MAAAA,IAAI,EAAE,CAACC,OAAD,EAAUC,MAAV,CADA;AAENC,MAAAA,SAAS,EAAGC,GAAD,IAA2B;AACpC,eAAO,OAAOA,GAAP,KAAe,SAAf,IAA4B,CACjC,KADiC,EAEjC,KAFiC,EAGjC,QAHiC,EAIjC,OAJiC,EAKjCC,QALiC,CAKxBD,GALwB,CAAnC;AAMD;AATK,KADH;AAYLE,IAAAA,WAAW,EAAEJ,MAZR;AAaLK,IAAAA,QAAQ,EAAEN,OAbL;AAcLO,IAAAA,SAAS,EAAE;AACTR,MAAAA,IAAI,EAAEE,MADG;AAETO,MAAAA,OAAO,EAAE;AAFA,KAdN;AAkBLC,IAAAA,UAAU,EAAE;AACVV,MAAAA,IAAI,EAAEE,MADI;AAEVO,MAAAA,OAAO,EAAE;AAFC,KAlBP;AAsBLE,IAAAA,IAAI,EAAE;AACJX,MAAAA,IAAI,EAAE,CAACC,OAAD,EAAUC,MAAV,CADF;AAEJO,MAAAA,OAAO,EAAE;AAFL,KAtBD;AA0BLG,IAAAA,UAAU,EAAE;AACVZ,MAAAA,IAAI,EAAEC,OADI;AAEVQ,MAAAA,OAAO,EAAE;AAFC,KA1BP;AA8BLI,IAAAA,SAAS,EAAEZ,OA9BN;AA+BLa,IAAAA,KAAK,EAAEZ,MA/BF;AAgCLa,IAAAA,IAAI,EAAEb,MAhCD;AAiCLF,IAAAA,IAAI,EAAE;AACJA,MAAAA,IAAI,EAAEE,MADF;AAEJC,MAAAA,SAAS,EAAGC,GAAD,IAAyBT,YAAY,CAACU,QAAb,CAAsBD,GAAtB;AAFhC,KAjCD;AAsCL,OAAG3B,gBAAgB,EAtCd;AAuCL,OAAGE,kBAAkB,EAvChB;AAwCL,OAAGE,kBAAkB,EAxChB;AAyCL,OAAGE,iBAAiB,EAzCf;AA0CL,OAAGE,gBAAgB,EA1Cd;AA2CL,OAAGE,YAAY,EA3CV;AA4CL,OAAGC,cAAc,EA5CZ;AA6CL,OAAGb,gBAAgB,CAAC;AAAEyC,MAAAA,OAAO,EAAE;AAAX,KAAD;AA7Cd,GAH6B;AAmDpCC,EAAAA,KAAK,EAAE;AACL,yBAAsBC,KAAD,IAAoB;AADpC,GAnD6B;;AAuDpCC,EAAAA,KAAK,CAAErB,KAAF,QAAoB;AAAA,QAAX;AAAEsB,MAAAA;AAAF,KAAW;AACvB,UAAMC,QAAQ,GAAG/B,eAAe,CAACQ,KAAD,EAAQ,YAAR,CAAhC;AACA,UAAMa,IAAI,GAAGnB,QAAQ,CAAC,MAAM;AAAA;;AAC1B,UAAIM,KAAK,CAACa,IAAN,KAAe,KAAnB,EAA0B,OAAOW,SAAP;AAC1B,UAAI,CAACxB,KAAK,CAACE,IAAX,EAAiB,OAAOF,KAAK,CAACa,IAAb;AAEjB,4BAAOb,KAAK,CAACa,IAAb,0BAAsB,IAAGb,KAAK,CAACE,IAAK,EAApC;AACD,KALoB,CAArB;AAMA,UAAMuB,YAAY,GAAG/B,QAAQ,CAAC;AAAA;;AAAA,aAAO;AACnCgC,QAAAA,KAAK,kBAAE1B,KAAK,CAAC0B,KAAR,2BAAiB1B,KAAK,CAACE,IADO;AAEnCgB,QAAAA,OAAO,EAAElB,KAAK,CAACkB;AAFoB,OAAP;AAAA,KAAD,CAA7B;AAKA,UAAM;AAAES,MAAAA;AAAF,QAAmBpC,YAAY,CAACS,KAAD,CAArC;AACA,UAAM;AAAE4B,MAAAA,YAAF;AAAgBC,MAAAA,WAAhB;AAA6BC,MAAAA;AAA7B,QAAgDpD,UAAU,CAAC+C,YAAD,CAAhE;AACA,UAAM;AAAEM,MAAAA;AAAF,QAAqBnD,UAAU,CAACoB,KAAD,CAArC;AACA,UAAM;AAAEgC,MAAAA;AAAF,QAAsBlD,YAAY,CAACkB,KAAD,CAAxC;AACA,UAAM;AAAEiC,MAAAA;AAAF,QAAuBjD,YAAY,CAACgB,KAAD,CAAzC;AACA,UAAM;AAAEkC,MAAAA,eAAF;AAAmBC,MAAAA;AAAnB,QAAsCjD,WAAW,CAACc,KAAD,CAAvD;AACA,UAAM;AAAEoC,MAAAA;AAAF,QAAqBhD,UAAU,CAACY,KAAD,CAArC;AACA,UAAM;AAAEqC,MAAAA,gBAAF;AAAoBC,MAAAA;AAApB,QAAwC7C,YAAY,CAACE,KAAK,CAACK,KAAD,EAAQ,aAAR,CAAN,CAA1D;;AAEA,aAASuC,YAAT,CAAuBC,CAAvB,EAAsC;AACpCjB,MAAAA,QAAQ,CAACH,KAAT,GAAiB,KAAjB;AACD;;AAED,WAAO,MAAM;AAAA;;AACX,YAAMqB,UAAU,GAAG,CAAC,EAAEnB,KAAK,CAACoB,OAAN,IAAiB7B,IAAI,CAACO,KAAxB,CAApB;AACA,YAAMuB,QAAQ,GAAG,CAAC,EAAErB,KAAK,CAACN,KAAN,IAAehB,KAAK,CAACgB,KAAvB,CAAlB;AACA,YAAM4B,OAAO,GAAG,CAAC,EAAE5C,KAAK,CAACiB,IAAN,IAAcK,KAAK,CAACL,IAAtB,CAAjB;AACA,YAAM4B,QAAQ,GAAG,CAAC,EAAEvB,KAAK,CAACwB,KAAN,IAAe9C,KAAK,CAACS,QAAvB,CAAlB;AAEA,aAAOc,QAAQ,CAACH,KAAT;AAAA,iBAEI,CACL,SADK,EAELpB,KAAK,CAACC,MAAN,IAAgB;AACd,6BAAmB,CAAC,CAACD,KAAK,CAACC,MADb;AAEd,WAAE,mBAAkBD,KAAK,CAACC,MAAN,KAAiB,IAAjB,GAAwB,OAAxB,GAAkCD,KAAK,CAACC,MAAO,EAAnE,GAAuE;AAFzD,SAFX,EAML;AACE,gCAAsBD,KAAK,CAACe;AAD9B,SANK,EASLY,YAAY,CAACP,KATR,EAULQ,YAAY,CAACR,KAVR,EAWLW,cAAc,CAACX,KAXV,EAYLa,gBAAgB,CAACb,KAZZ,EAaLc,eAAe,CAACd,KAbX,EAcLgB,cAAc,CAAChB,KAdV,EAeLU,cAAc,CAACV,KAfV,CAFJ;AAAA,iBAmBI,CACLS,WAAW,CAACT,KADP,EAELY,eAAe,CAACZ,KAFX,EAGLe,cAAc,CAACf,KAHV,CAnBJ;AAAA,gBAwBE;AAxBF;AAAA,wBA0BD5C,WAAW,CAAC,KAAD,EAAQ,SAAR,CA1BV,EA4BDwB,KAAK,CAACC,MAAN;AAAA,mBAES,CACL,iBADK,EAELoC,gBAAgB,CAACjB,KAFZ,CAFT;AAAA,mBAMUkB,eAAe,CAAClB;AAN1B,gBA5BC,EAsCDqB,UAAU;AAAA,sBAEE;AACRlE,YAAAA,KAAK,EAAE;AACLwE,cAAAA,OAAO,EAAE/C,KAAK,CAAC+C,OADV;AAELlC,cAAAA,IAAI,EAAEA,IAAI,CAACO,KAFN;AAGL4B,cAAAA,IAAI,EAAEhD,KAAK,CAACe,SAAN,GAAkB,EAAlB,GAAuB;AAHxB;AADC;AAFF;AAAA;AAAA,qBAUG;AAVH,cAWJO,KAAK,CAACoB,OAAN,GACEpB,KAAK,CAACoB,OAAN,EADF,GAEE7B,IAAI,CAACO,KAAL,mCAbE;AAAA,UAtCT;AAAA,mBAyDQ;AAzDR,YA0DCuB,QAAQ;AAAA,0BAEJrB,KAAK,CAACN,KAAN,GAAcM,KAAK,CAACN,KAAN,EAAd,GAA8BhB,KAAK,CAACgB,KAFhC;AAAA,UA1DT,EAgEC4B,OAAO,KACPtB,KAAK,CAACL,IAAN,GAAaK,KAAK,CAACL,IAAN,EAAb,GAA4BjB,KAAK,CAACiB,IAD3B,CAhER,oBAoECK,KAAK,CAACX,OApEP,qBAoEC,oBAAAW,KAAK,CApEN,IAuEDA,KAAK,CAAC2B,MAAN;AAAA,mBACW;AADX,YAEI3B,KAAK,CAAC2B,MAAN,EAFJ,EAvEC,EA6EDJ,QAAQ;AAAA,sBAEI;AACRtE,YAAAA,KAAK,EAAE;AACLsC,cAAAA,IAAI,EAAEb,KAAK,CAACU,SADP;AAELsC,cAAAA,IAAI,EAAE;AAFD;AADC;AAFJ;AAAA;AAAA,qBAUE,gBAVF;AAAA,uBAWMT;AAXN,cAaFjB,KAAK,CAACwB,KAAN,GACExB,KAAK,CAACwB,KAAN,EADF,kCAbE;AAAA,UA7EP;AAAA,QAAP;AAmGD,KAzGD;AA0GD;;AA3LmC,CAAD,CAA9B","sourcesContent":["// Styles\nimport './VAlert.sass'\n\n// Components\nimport { VAlertTitle } from './VAlertTitle'\nimport { VDefaultsProvider } from '@/components/VDefaultsProvider'\nimport { VIcon } from '@/components/VIcon'\n\n// Composables\nimport { genOverlays, makeVariantProps, useVariant } from '@/composables/variant'\nimport { makeDensityProps, useDensity } from '@/composables/density'\nimport { makeDimensionProps, useDimension } from '@/composables/dimensions'\nimport { makeElevationProps, useElevation } from '@/composables/elevation'\nimport { makePositionProps, usePosition } from '@/composables/position'\nimport { makeRoundedProps, useRounded } from '@/composables/rounded'\nimport { makeTagProps } from '@/composables/tag'\nimport { makeThemeProps, provideTheme } from '@/composables/theme'\nimport { useProxiedModel } from '@/composables/proxiedModel'\nimport { useTextColor } from '@/composables/color'\n\n// Utilities\nimport { computed, toRef } from 'vue'\nimport { defineComponent } from '@/util'\n\n// Types\nimport type { PropType } from 'vue'\n\nconst allowedTypes = ['success', 'info', 'warning', 'error'] as const\n\ntype ContextualType = typeof allowedTypes[number]\n\nexport const VAlert = defineComponent({\n  name: 'VAlert',\n\n  props: {\n    border: {\n      type: [Boolean, String],\n      validator: (val: boolean | string) => {\n        return typeof val === 'boolean' || [\n          'top',\n          'end',\n          'bottom',\n          'start',\n        ].includes(val)\n      },\n    },\n    borderColor: String,\n    closable: Boolean,\n    closeIcon: {\n      type: String,\n      default: '$close',\n    },\n    closeLabel: {\n      type: String,\n      default: '$vuetify.close',\n    },\n    icon: {\n      type: [Boolean, String] as PropType<false | string>,\n      default: null,\n    },\n    modelValue: {\n      type: Boolean,\n      default: true,\n    },\n    prominent: Boolean,\n    title: String,\n    text: String,\n    type: {\n      type: String as PropType<ContextualType>,\n      validator: (val: ContextualType) => allowedTypes.includes(val),\n    },\n\n    ...makeDensityProps(),\n    ...makeDimensionProps(),\n    ...makeElevationProps(),\n    ...makePositionProps(),\n    ...makeRoundedProps(),\n    ...makeTagProps(),\n    ...makeThemeProps(),\n    ...makeVariantProps({ variant: 'contained-flat' } as const),\n  },\n\n  emits: {\n    'update:modelValue': (value: boolean) => true,\n  },\n\n  setup (props, { slots }) {\n    const isActive = useProxiedModel(props, 'modelValue')\n    const icon = computed(() => {\n      if (props.icon === false) return undefined\n      if (!props.type) return props.icon\n\n      return props.icon ?? `$${props.type}`\n    })\n    const variantProps = computed(() => ({\n      color: props.color ?? props.type,\n      variant: props.variant,\n    }))\n\n    const { themeClasses } = provideTheme(props)\n    const { colorClasses, colorStyles, variantClasses } = useVariant(variantProps)\n    const { densityClasses } = useDensity(props)\n    const { dimensionStyles } = useDimension(props)\n    const { elevationClasses } = useElevation(props)\n    const { positionClasses, positionStyles } = usePosition(props)\n    const { roundedClasses } = useRounded(props)\n    const { textColorClasses, textColorStyles } = useTextColor(toRef(props, 'borderColor'))\n\n    function onCloseClick (e: MouseEvent) {\n      isActive.value = false\n    }\n\n    return () => {\n      const hasPrepend = !!(slots.prepend || icon.value)\n      const hasTitle = !!(slots.title || props.title)\n      const hasText = !!(props.text || slots.text)\n      const hasClose = !!(slots.close || props.closable)\n\n      return isActive.value && (\n        <props.tag\n          class={[\n            'v-alert',\n            props.border && {\n              'v-alert--border': !!props.border,\n              [`v-alert--border-${props.border === true ? 'start' : props.border}`]: true,\n            },\n            {\n              'v-alert--prominent': props.prominent,\n            },\n            themeClasses.value,\n            colorClasses.value,\n            densityClasses.value,\n            elevationClasses.value,\n            positionClasses.value,\n            roundedClasses.value,\n            variantClasses.value,\n          ]}\n          style={[\n            colorStyles.value,\n            dimensionStyles.value,\n            positionStyles.value,\n          ]}\n          role=\"alert\"\n        >\n          { genOverlays(false, 'v-alert') }\n\n          { props.border && (\n            <div\n              class={[\n                'v-alert__border',\n                textColorClasses.value,\n              ]}\n              style={ textColorStyles.value }\n            />\n          ) }\n\n          { hasPrepend && (\n            <VDefaultsProvider\n              defaults={{\n                VIcon: {\n                  density: props.density,\n                  icon: icon.value,\n                  size: props.prominent ? 44 : 'default',\n                },\n              }}\n            >\n              <div class=\"v-alert__prepend\">\n                { slots.prepend\n                  ? slots.prepend()\n                  : icon.value && (<VIcon />)\n                }\n              </div>\n            </VDefaultsProvider>\n          ) }\n\n          <div class=\"v-alert__content\">\n            { hasTitle && (\n              <VAlertTitle>\n                { slots.title ? slots.title() : props.title }\n              </VAlertTitle>\n            ) }\n\n            { hasText && (\n              slots.text ? slots.text() : props.text\n            ) }\n\n            { slots.default?.() }\n          </div>\n\n          { slots.append && (\n            <div class=\"v-alert__append\">\n              { slots.append() }\n            </div>\n          ) }\n\n          { hasClose && (\n            <VDefaultsProvider\n              defaults={{\n                VIcon: {\n                  icon: props.closeIcon,\n                  size: 'small',\n                },\n              }}\n            >\n              <div\n                class=\"v-alert__close\"\n                onClick={ onCloseClick }\n              >\n                { slots.close\n                  ? slots.close()\n                  : (<VIcon />)\n                }\n              </div>\n            </VDefaultsProvider>\n          ) }\n        </props.tag>\n      )\n    }\n  },\n})\n\nexport type VAlert = InstanceType<typeof VAlert>\n"],"file":"VAlert.mjs"}