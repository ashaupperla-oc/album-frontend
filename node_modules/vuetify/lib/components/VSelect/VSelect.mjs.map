{"version":3,"sources":["../../../src/components/VSelect/VSelect.tsx"],"names":["VChip","VDefaultsProvider","VList","VListItem","VMenu","VTextField","makeItemsProps","useItems","makeTransitionProps","useForwardRef","useLocale","useProxiedModel","computed","ref","watch","genericComponent","propsFactory","useRender","wrapInArray","makeSelectProps","chips","Boolean","closableChips","eager","hideNoData","hideSelected","menuIcon","type","String","default","modelValue","Number","Array","multiple","noDataText","openOnClear","VSelect","name","props","transition","emits","val","setup","slots","t","vTextFieldRef","activator","menu","items","model","v","selections","value","filter","item","includes","selected","map","selection","onClear","e","onClickControl","length","onKeydown","key","select","index","findIndex","splice","$el","querySelector","hasChips","chip","join","preventDefault","onChipClose","stopPropagation","slotProps","closable","size","text","title"],"mappings":"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","sourcesContent":["// Styles\nimport './VSelect.sass'\n\n// Components\nimport { VChip } from '@/components/VChip'\nimport { VDefaultsProvider } from '@/components/VDefaultsProvider'\nimport { VList, VListItem } from '@/components/VList'\nimport { VMenu } from '@/components/VMenu'\nimport { VTextField } from '@/components/VTextField'\n\n// Composables\nimport { makeItemsProps, useItems } from '@/composables/items'\nimport { makeTransitionProps } from '@/composables/transition'\nimport { useForwardRef } from '@/composables/forwardRef'\nimport { useLocale } from '@/composables/locale'\nimport { useProxiedModel } from '@/composables/proxiedModel'\n\n// Utility\nimport { computed, ref, watch } from 'vue'\nimport { genericComponent, propsFactory, useRender, wrapInArray } from '@/util'\n\n// Types\nimport type { LinkProps } from '@/composables/router'\nimport type { MakeSlots } from '@/util'\n\nexport interface InternalSelectItem {\n  title: string\n  value: any\n  index: number\n}\n\nexport interface DefaultSelectionSlot {\n  selection: InternalSelectItem\n}\n\nexport interface DefaultChipSlot extends DefaultSelectionSlot {\n  props: {\n    'onClick:close': (e: Event) => void\n    modelValue: any\n  }\n}\n\nexport type SelectItem = string | (string | number)[] | ((item: Record<string, any>, fallback?: any) => any) | (LinkProps & {\n  text: string\n})\n\nexport const makeSelectProps = propsFactory({\n  chips: Boolean,\n  closableChips: Boolean,\n  eager: Boolean,\n  hideNoData: Boolean,\n  hideSelected: Boolean,\n  menuIcon: {\n    type: String,\n    default: '$dropdown',\n  },\n  modelValue: {\n    type: [Number, String, Array],\n    default: () => ([]),\n  },\n  multiple: Boolean,\n  noDataText: {\n    type: String,\n    default: '$vuetify.noDataText',\n  },\n  openOnClear: Boolean,\n\n  ...makeItemsProps(),\n}, 'select')\n\nexport const VSelect = genericComponent<new <T>() => {\n  $slots: MakeSlots<{\n    chip: [DefaultChipSlot]\n    default: []\n    selection: [DefaultSelectionSlot]\n  }>\n}>()({\n  name: 'VSelect',\n\n  props: {\n    ...makeSelectProps(),\n    ...makeTransitionProps({ transition: 'scale-transition' }),\n  },\n\n  emits: {\n    'update:modelValue': (val: any) => true,\n  },\n\n  setup (props, { slots }) {\n    const { t } = useLocale()\n    const vTextFieldRef = ref()\n    const activator = ref()\n    const menu = ref(false)\n    const { items } = useItems(props)\n    const model = useProxiedModel(\n      props,\n      'modelValue',\n      [],\n      v => wrapInArray(v),\n      (v: any) => props.multiple ? v : v[0]\n    )\n    const selections = computed(() => items.value.filter(item => model.value.includes(item.value)))\n    const selected = computed(() => selections.value.map(selection => selection.value))\n\n    function onClear (e: MouseEvent) {\n      model.value = []\n\n      if (props.openOnClear) {\n        menu.value = true\n      }\n    }\n    function onClickControl () {\n      if (props.hideNoData && !items.value.length) return\n\n      menu.value = true\n    }\n    function onKeydown (e: KeyboardEvent) {\n      if (['Enter', 'ArrowDown', ' '].includes(e.key)) {\n        menu.value = true\n      }\n\n      if (['Escape', 'Tab'].includes(e.key)) {\n        menu.value = false\n      }\n    }\n    function select (item: any) {\n      if (props.multiple) {\n        const index = selected.value.findIndex(selection => selection === item.value)\n\n        if (index === -1) {\n          model.value = [...model.value, item.value]\n        } else {\n          const value = [...model.value]\n          value.splice(index, 1)\n          model.value = value\n        }\n      } else {\n        model.value = [item.value]\n        menu.value = false\n      }\n    }\n\n    watch(() => vTextFieldRef.value, val => {\n      activator.value = val.$el.querySelector('.v-input__control')\n    })\n\n    useRender(() => {\n      const hasChips = !!(props.chips || slots.chip)\n\n      return (\n        <VTextField\n          ref={ vTextFieldRef }\n          class={[\n            'v-select',\n            {\n              'v-select--active-menu': menu.value,\n              'v-select--chips': !!props.chips,\n              [`v-select--${props.multiple ? 'multiple' : 'single'}`]: true,\n            },\n          ]}\n          appendInnerIcon={ props.menuIcon }\n          readonly\n          onClick:clear={ onClear }\n          onClick:input={ onClickControl }\n          onClick:control={ onClickControl }\n          onBlur={ () => menu.value = false }\n          modelValue={ model.value.join(', ') }\n          onKeydown={ onKeydown }\n        >\n          {{\n            ...slots,\n            default: () => (\n              <>\n                { activator.value && (\n                  <VMenu\n                    v-model={ menu.value }\n                    activator={ activator.value }\n                    contentClass=\"v-select__content\"\n                    eager={ props.eager }\n                    openOnClick={ false }\n                    transition={ props.transition }\n                  >\n                    <VList\n                      selected={ selected.value }\n                      selectStrategy={ props.multiple ? 'independent' : 'single-independent' }\n                    >\n                      { !items.value.length && !props.hideNoData && (slots['no-data']?.() ?? (\n                        <VListItem title={ t(props.noDataText) } />\n                      )) }\n\n                      { items.value.map(item => (\n                        <VListItem\n                          { ...item }\n                          onMousedown={ (e: MouseEvent) => e.preventDefault() }\n                          onClick={ () => select(item) }\n                        />\n                      )) }\n                    </VList>\n                  </VMenu>\n                ) }\n\n                { selections.value.map((selection, index) => {\n                  function onChipClose (e: Event) {\n                    e.stopPropagation()\n                    e.preventDefault()\n\n                    select(selection)\n                  }\n\n                  const slotProps = {\n                    'onClick:close': onChipClose,\n                    modelValue: true,\n                  }\n\n                  return (\n                    <div class=\"v-select__selection\">\n                      { hasChips && (\n                        <VDefaultsProvider\n                          defaults={{\n                            VChip: {\n                              closable: props.closableChips,\n                              size: 'small',\n                              text: selection.title,\n                            },\n                          }}\n                        >\n                          { slots.chip\n                            ? slots.chip({ props: slotProps, selection })\n                            : (<VChip { ...slotProps } />)\n                          }\n                        </VDefaultsProvider>\n                      ) }\n\n                      { !hasChips && (\n                        slots.selection\n                          ? slots.selection({ selection })\n                          : (\n                            <span class=\"v-select__selection-text\">\n                              { selection.title }\n                              { props.multiple && (index < selections.value.length - 1) && (\n                                <span class=\"v-select__selection-comma\">,</span>\n                              ) }\n                            </span>\n                          )\n                      ) }\n                    </div>\n                  )\n                }) }\n              </>\n            ),\n          }}\n        </VTextField>\n      )\n    })\n\n    return useForwardRef({}, vTextFieldRef)\n  },\n})\n\nexport type VSelect = InstanceType<typeof VSelect>\n"],"file":"VSelect.mjs"}