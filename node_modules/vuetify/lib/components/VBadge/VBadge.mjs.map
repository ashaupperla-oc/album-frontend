{"version":3,"sources":["../../../src/components/VBadge/VBadge.tsx"],"names":["VIcon","makeRoundedProps","useRounded","makeTagProps","makeThemeProps","useTheme","makeTransitionProps","MaybeTransition","useBackgroundColor","useTextColor","useLocale","useRtl","computed","toRef","convertToUnit","defineComponent","pick","VBadge","name","inheritAttrs","props","bordered","Boolean","color","String","content","Number","dot","floating","icon","inline","label","type","default","location","validator","value","vertical","horizontal","split","includes","max","modelValue","offsetX","offsetY","textColor","transition","setup","ctx","backgroundColorClasses","backgroundColorStyles","isRtl","roundedClasses","t","textColorClasses","textColorStyles","themeClasses","position","calculatePosition","offset","parseInt","locationStyles","styles","bottom","left","right","top","isRight","isNaN","badgeAttrs","attrs","slots","undefined","badge"],"mappings":"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","sourcesContent":["// Styles\nimport './VBadge.sass'\n\n// Components\nimport { VIcon } from '@/components/VIcon'\n\n// Composables\nimport { makeRoundedProps, useRounded } from '@/composables/rounded'\nimport { makeTagProps } from '@/composables/tag'\nimport { makeThemeProps, useTheme } from '@/composables/theme'\nimport { makeTransitionProps, MaybeTransition } from '@/composables/transition'\nimport { useBackgroundColor, useTextColor } from '@/composables/color'\nimport { useLocale } from '@/composables/locale'\nimport { useRtl } from '@/composables/rtl'\n\n// Utilities\nimport { computed, toRef } from 'vue'\nimport { convertToUnit, defineComponent, pick } from '@/util'\n\nexport const VBadge = defineComponent({\n  name: 'VBadge',\n\n  inheritAttrs: false,\n\n  props: {\n    bordered: Boolean,\n    color: String,\n    content: [Number, String],\n    dot: Boolean,\n    floating: Boolean,\n    icon: String,\n    inline: Boolean,\n    label: {\n      type: String,\n      default: '$vuetify.badge',\n    },\n    location: {\n      type: String,\n      default: 'top-end',\n      validator: (value: string) => {\n        const [vertical, horizontal] = (value ?? '').split('-')\n\n        return (\n          ['top', 'bottom'].includes(vertical) &&\n          ['start', 'end'].includes(horizontal)\n        )\n      },\n    },\n    max: [Number, String],\n    modelValue: {\n      type: Boolean,\n      default: true,\n    },\n    offsetX: [Number, String],\n    offsetY: [Number, String],\n    textColor: String,\n    ...makeRoundedProps(),\n    ...makeTagProps(),\n    ...makeThemeProps(),\n    ...makeTransitionProps({ transition: 'scale-rotate-transition' }),\n  },\n\n  setup (props, ctx) {\n    const { backgroundColorClasses, backgroundColorStyles } = useBackgroundColor(toRef(props, 'color'))\n    const { isRtl } = useRtl()\n    const { roundedClasses } = useRounded(props)\n    const { t } = useLocale()\n    const { textColorClasses, textColorStyles } = useTextColor(toRef(props, 'textColor'))\n    const { themeClasses } = useTheme()\n\n    const position = computed(() => {\n      return props.floating\n        ? (props.dot ? 2 : 4)\n        : (props.dot ? 8 : 12)\n    })\n\n    function calculatePosition (offset?: number | string) {\n      return `calc(100% - ${convertToUnit(position.value + parseInt(offset ?? 0, 10))})`\n    }\n\n    const locationStyles = computed(() => {\n      const [vertical, horizontal] = (props.location ?? '').split('-')\n\n      const styles = {\n        bottom: 'auto',\n        left: 'auto',\n        right: 'auto',\n        top: 'auto',\n      }\n\n      if (!props.inline) {\n        const isRight = (isRtl.value && horizontal === 'end') || (!isRtl.value && horizontal === 'start')\n\n        styles[isRight ? 'right' : 'left'] = calculatePosition(props.offsetX)\n        styles[vertical === 'top' ? 'bottom' : 'top'] = calculatePosition(props.offsetY)\n      }\n\n      return styles\n    })\n\n    return () => {\n      const value = Number(props.content)\n      const content = (!props.max || isNaN(value)) ? props.content\n        : value <= props.max ? value\n        : `${props.max}+`\n\n      const [badgeAttrs, attrs] = pick(ctx.attrs as Record<string, any>, [\n        'aria-atomic',\n        'aria-label',\n        'aria-live',\n        'role',\n        'title',\n      ])\n\n      return (\n        <props.tag\n          class={[\n            'v-badge',\n            {\n              'v-badge--bordered': props.bordered,\n              'v-badge--dot': props.dot,\n              'v-badge--floating': props.floating,\n              'v-badge--inline': props.inline,\n            },\n          ]}\n          { ...attrs }\n        >\n          <div class=\"v-badge__wrapper\">\n            { ctx.slots.default?.() }\n\n            <MaybeTransition transition={ props.transition }>\n              <span\n                v-show={ props.modelValue }\n                class={[\n                  'v-badge__badge',\n                  backgroundColorClasses.value,\n                  roundedClasses.value,\n                  textColorClasses.value,\n                  themeClasses.value,\n                ]}\n                style={[\n                  backgroundColorStyles.value,\n                  locationStyles.value,\n                  textColorStyles.value,\n                ]}\n                aria-atomic=\"true\"\n                aria-label={ t(props.label, value) }\n                aria-live=\"polite\"\n                role=\"status\"\n                { ...badgeAttrs }\n              >\n                {\n                  props.dot ? undefined\n                  : ctx.slots.badge ? ctx.slots.badge?.()\n                  : props.icon ? <VIcon icon={props.icon} />\n                  : <span class=\"v-badge__content\">{content}</span>\n                }\n              </span>\n            </MaybeTransition>\n          </div>\n        </props.tag>\n      )\n    }\n  },\n})\n\nexport type VBadge = InstanceType<typeof VBadge>\n"],"file":"VBadge.mjs"}