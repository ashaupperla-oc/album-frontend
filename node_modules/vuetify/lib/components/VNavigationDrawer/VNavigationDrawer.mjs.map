{"version":3,"sources":["../../../src/components/VNavigationDrawer/VNavigationDrawer.tsx"],"names":["makeBorderProps","useBorder","makeElevationProps","useElevation","makeLayoutItemProps","useLayoutItem","makeRoundedProps","useRounded","makeTagProps","makeThemeProps","provideTheme","useBackgroundColor","useDisplay","useProxiedModel","useRouter","useTouch","computed","onBeforeMount","ref","toRef","Transition","watch","convertToUnit","defineComponent","VNavigationDrawer","name","props","color","String","disableResizeWatcher","Boolean","disableRouteWatcher","expandOnHover","floating","modelValue","type","default","permanent","rail","railWidth","Number","image","temporary","touchless","width","position","validator","value","includes","tag","emits","val","setup","attrs","slots","themeClasses","borderClasses","backgroundColorClasses","backgroundColorStyles","elevationClasses","mobile","roundedClasses","router","isActive","v","isHovering","isTemporary","currentRoute","rootEl","isDragging","dragProgress","dragStyles","layoutSize","size","layoutItemStyles","layoutRect","layoutItemScrimStyles","id","priority","parseInt","elementSize","active","disableTransitions","absolute","scrimStyles","opacity","transition","undefined","left","right","top","bottom","hasImage","prepend","append"],"mappings":"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","sourcesContent":["// Styles\nimport './VNavigationDrawer.sass'\n\n// Composables\nimport { makeBorderProps, useBorder } from '@/composables/border'\nimport { makeElevationProps, useElevation } from '@/composables/elevation'\nimport { makeLayoutItemProps, useLayoutItem } from '@/composables/layout'\nimport { makeRoundedProps, useRounded } from '@/composables/rounded'\nimport { makeTagProps } from '@/composables/tag'\nimport { makeThemeProps, provideTheme } from '@/composables/theme'\nimport { useBackgroundColor } from '@/composables/color'\nimport { useDisplay } from '@/composables/display'\nimport { useProxiedModel } from '@/composables/proxiedModel'\nimport { useRouter } from '@/composables/router'\nimport { useTouch } from './touch'\n\n// Utilities\nimport { computed, onBeforeMount, ref, toRef, Transition, watch } from 'vue'\nimport { convertToUnit, defineComponent } from '@/util'\n\n// Types\nimport type { PropType } from 'vue'\n\nexport const VNavigationDrawer = defineComponent({\n  name: 'VNavigationDrawer',\n\n  props: {\n    color: String,\n    disableResizeWatcher: Boolean,\n    disableRouteWatcher: Boolean,\n    expandOnHover: Boolean,\n    floating: Boolean,\n    modelValue: {\n      type: Boolean as PropType<boolean | null>,\n      default: null,\n    },\n    permanent: Boolean,\n    rail: Boolean,\n    railWidth: {\n      type: [Number, String],\n      default: 72,\n    },\n    image: String,\n    temporary: Boolean,\n    touchless: Boolean,\n    width: {\n      type: [Number, String],\n      default: 256,\n    },\n    position: {\n      type: String as PropType<'left' | 'right' | 'bottom'>,\n      default: 'left',\n      validator: (value: any) => ['left', 'right', 'bottom'].includes(value),\n    },\n\n    ...makeBorderProps(),\n    ...makeElevationProps(),\n    ...makeLayoutItemProps(),\n    ...makeRoundedProps(),\n    ...makeTagProps({ tag: 'nav' }),\n    ...makeThemeProps(),\n  },\n\n  emits: {\n    'update:modelValue': (val: boolean) => true,\n  },\n\n  setup (props, { attrs, slots }) {\n    const { themeClasses } = provideTheme(props)\n    const { borderClasses } = useBorder(props)\n    const { backgroundColorClasses, backgroundColorStyles } = useBackgroundColor(toRef(props, 'color'))\n    const { elevationClasses } = useElevation(props)\n    const { mobile } = useDisplay()\n    const { roundedClasses } = useRounded(props)\n    const router = useRouter()\n    const isActive = useProxiedModel(props, 'modelValue', null, v => !!v)\n    const isHovering = ref(false)\n    const width = computed(() => {\n      return (props.rail && props.expandOnHover && isHovering.value)\n        ? Number(props.width)\n        : Number(props.rail ? props.railWidth : props.width)\n    })\n    const isTemporary = computed(() => !props.permanent && (mobile.value || props.temporary))\n\n    if (!props.disableResizeWatcher) {\n      watch(isTemporary, val => !props.permanent && (isActive.value = !val))\n    }\n\n    if (!props.disableRouteWatcher && router) {\n      watch(router.currentRoute, () => isTemporary.value && (isActive.value = false))\n    }\n\n    watch(() => props.permanent, val => {\n      if (val) isActive.value = true\n    })\n\n    onBeforeMount(() => {\n      if (props.modelValue != null || isTemporary.value) return\n\n      isActive.value = props.permanent || !mobile.value\n    })\n\n    const rootEl = ref<HTMLElement>()\n\n    const { isDragging, dragProgress, dragStyles } = useTouch({\n      isActive,\n      isTemporary,\n      width,\n      touchless: toRef(props, 'touchless'),\n      position: toRef(props, 'position'),\n    })\n\n    const layoutSize = computed(() => {\n      const size = isTemporary.value ? 0\n        : props.rail && props.expandOnHover ? Number(props.railWidth)\n        : width.value\n\n      return isDragging.value ? size * dragProgress.value : size\n    })\n    const { layoutItemStyles, layoutRect, layoutItemScrimStyles } = useLayoutItem({\n      id: props.name,\n      priority: computed(() => parseInt(props.priority, 10)),\n      position: toRef(props, 'position'),\n      layoutSize,\n      elementSize: width,\n      active: computed(() => isActive.value || isDragging.value),\n      disableTransitions: computed(() => isDragging.value),\n      absolute: toRef(props, 'absolute'),\n    })\n\n    const scrimStyles = computed(() => ({\n      ...isDragging.value ? {\n        opacity: dragProgress.value * 0.2,\n        transition: 'none',\n      } : undefined,\n      ...layoutRect.value ? {\n        left: convertToUnit(layoutRect.value.left),\n        right: convertToUnit(layoutRect.value.right),\n        top: convertToUnit(layoutRect.value.top),\n        bottom: convertToUnit(layoutRect.value.bottom),\n      } : undefined,\n      ...layoutItemScrimStyles.value,\n    }))\n\n    return () => {\n      const hasImage = (slots.image || props.image)\n\n      return (\n        <>\n          <props.tag\n            ref={ rootEl }\n            onMouseenter={ () => (isHovering.value = true) }\n            onMouseleave={ () => (isHovering.value = false) }\n            class={[\n              'v-navigation-drawer',\n              {\n                'v-navigation-drawer--bottom': props.position === 'bottom',\n                'v-navigation-drawer--end': props.position === 'right',\n                'v-navigation-drawer--expand-on-hover': props.expandOnHover,\n                'v-navigation-drawer--floating': props.floating,\n                'v-navigation-drawer--is-hovering': isHovering.value,\n                'v-navigation-drawer--rail': props.rail,\n                'v-navigation-drawer--start': props.position === 'left',\n                'v-navigation-drawer--temporary': isTemporary.value,\n                'v-navigation-drawer--active': isActive.value,\n              },\n              themeClasses.value,\n              backgroundColorClasses.value,\n              borderClasses.value,\n              elevationClasses.value,\n              roundedClasses.value,\n            ]}\n            style={[\n              backgroundColorStyles.value,\n              layoutItemStyles.value,\n              dragStyles.value,\n            ]}\n            { ...attrs }\n          >\n            { hasImage && (\n              <div class=\"v-navigation-drawer__img\">\n                { slots.image\n                  ? slots.image?.({ image: props.image })\n                  : (<img src={ props.image } alt=\"\" />)\n                }\n              </div>\n            )}\n\n            { slots.prepend && (\n              <div class=\"v-navigation-drawer__prepend\">\n                { slots.prepend?.() }\n              </div>\n            )}\n\n            <div class=\"v-navigation-drawer__content\">\n              { slots.default?.() }\n            </div>\n\n            { slots.append && (\n              <div class=\"v-navigation-drawer__append\">\n                { slots.append?.() }\n              </div>\n            )}\n          </props.tag>\n\n          <Transition name=\"fade-transition\">\n            { isTemporary.value && (isDragging.value || isActive.value) && (\n              <div\n                class=\"v-navigation-drawer__scrim\"\n                style={ scrimStyles.value }\n                onClick={ () => isActive.value = false }\n              />\n            )}\n          </Transition>\n        </>\n      )\n    }\n  },\n})\n\nexport type VNavigationDrawer = InstanceType<typeof VNavigationDrawer>\n"],"file":"VNavigationDrawer.mjs"}