{"version":3,"sources":["../../../src/components/VIcon/VIcon.tsx"],"names":["makeSizeProps","useSize","makeTagProps","useIcon","useTextColor","makeThemeProps","provideTheme","computed","toRef","convertToUnit","defineComponent","flattenFragments","propsFactory","makeVIconProps","color","String","start","Boolean","end","icon","type","Object","tag","VIcon","name","props","setup","attrs","slots","slotIcon","default","slot","filter","node","children","themeClasses","iconData","sizeClasses","textColorClasses","textColorStyles","value","onClick","fontSize","size","width","height","undefined"],"mappings":";AAAA;AACA,qB,CAEA;;SACSA,a,EAAeC,O;SACfC,Y;SACAC,O;SACAC,Y;SACAC,c,EAAgBC,Y,uCAEzB;;AACA,SAASC,QAAT,EAAmBC,KAAnB,QAAgC,KAAhC;SACSC,a,EAAeC,e,EAAiBC,gB,EAAkBC,Y,gCAE3D;;AAIA,OAAO,MAAMC,cAAc,GAAGD,YAAY,CAAC;AACzCE,EAAAA,KAAK,EAAEC,MADkC;AAEzCC,EAAAA,KAAK,EAAEC,OAFkC;AAGzCC,EAAAA,GAAG,EAAED,OAHoC;AAIzCE,EAAAA,IAAI,EAAE;AACJC,IAAAA,IAAI,EAAE,CAACL,MAAD,EAASM,MAAT;AADF,GAJmC;AAQzC,KAAGrB,aAAa,EARyB;AASzC,KAAGE,YAAY,CAAC;AAAEoB,IAAAA,GAAG,EAAE;AAAP,GAAD,CAT0B;AAUzC,KAAGjB,cAAc;AAVwB,CAAD,EAWvC,QAXuC,CAAnC;AAaP,OAAO,MAAMkB,KAAK,GAAGb,eAAe,CAAC;AACnCc,EAAAA,IAAI,EAAE,OAD6B;AAGnCC,EAAAA,KAAK,EAAEZ,cAAc,EAHc;;AAKnCa,EAAAA,KAAK,CAAED,KAAF,QAA2B;AAAA,QAAlB;AAAEE,MAAAA,KAAF;AAASC,MAAAA;AAAT,KAAkB;AAC9B,QAAIC,QAAJ;;AACA,QAAID,KAAK,CAACE,OAAV,EAAmB;AACjBD,MAAAA,QAAQ,GAAGtB,QAAQ,CAAC,MAAM;AAAA;;AACxB,cAAMwB,IAAI,qBAAGH,KAAK,CAACE,OAAT,qBAAG,oBAAAF,KAAK,CAAlB;AACA,YAAI,CAACG,IAAL,EAAW;AAEX,wCAAOpB,gBAAgB,CAACoB,IAAD,CAAhB,CAAuBC,MAAvB,CAA8BC,IAAI,IACvCA,IAAI,CAACC,QAAL,IAAiB,OAAOD,IAAI,CAACC,QAAZ,KAAyB,QADrC,EAEL,CAFK,CAAP,qBAAO,sBAEDA,QAFN;AAGD,OAPkB,CAAnB;AAQD;;AAED,UAAM;AAAEC,MAAAA;AAAF,QAAmB7B,YAAY,CAACmB,KAAD,CAArC;AACA,UAAM;AAAEW,MAAAA;AAAF,QAAejC,OAAO,CAAC0B,QAAQ,IAAIJ,KAAb,CAA5B;AACA,UAAM;AAAEY,MAAAA;AAAF,QAAkBpC,OAAO,CAACwB,KAAD,CAA/B;AACA,UAAM;AAAEa,MAAAA,gBAAF;AAAoBC,MAAAA;AAApB,QAAwCnC,YAAY,CAACI,KAAK,CAACiB,KAAD,EAAQ,OAAR,CAAN,CAA1D;AAEA,WAAO,MAAM;AACX;AAAA,eAEUA,KAAK,CAACH,GAFhB;AAAA,gBAGWc,QAAQ,CAACI,KAAT,CAAerB,IAH1B;AAAA,iBAIW,CACL,QADK,EAEL,aAFK,EAGLkB,WAAW,CAACG,KAHP,EAILF,gBAAgB,CAACE,KAJZ,EAKLL,YAAY,CAACK,KALR,EAML;AACE,+BAAqB,CAAC,CAACb,KAAK,CAACc,OAD/B;AAEE,2BAAiBhB,KAAK,CAACT,KAFzB;AAGE,yBAAeS,KAAK,CAACP;AAHvB,SANK,CAJX;AAAA,iBAgBW,CACL,CAACmB,WAAW,CAACG,KAAb,GAAsB;AACpBE,UAAAA,QAAQ,EAAEjC,aAAa,CAACgB,KAAK,CAACkB,IAAP,CADH;AAEpBC,UAAAA,KAAK,EAAEnC,aAAa,CAACgB,KAAK,CAACkB,IAAP,CAFA;AAGpBE,UAAAA,MAAM,EAAEpC,aAAa,CAACgB,KAAK,CAACkB,IAAP;AAHD,SAAtB,GAIKG,SALA,EAMLP,eAAe,CAACC,KANX,CAhBX;AAAA,uBAwBgB;AAxBhB;AA2BD,KA5BD;AA6BD;;AApDkC,CAAD,CAA7B","sourcesContent":["// Styles\nimport './VIcon.sass'\n\n// Composables\nimport { makeSizeProps, useSize } from '@/composables/size'\nimport { makeTagProps } from '@/composables/tag'\nimport { useIcon } from '@/composables/icons'\nimport { useTextColor } from '@/composables/color'\nimport { makeThemeProps, provideTheme } from '@/composables/theme'\n\n// Utilities\nimport { computed, toRef } from 'vue'\nimport { convertToUnit, defineComponent, flattenFragments, propsFactory } from '@/util'\n\n// Types\nimport type { IconValue } from '@/composables/icons'\nimport type { ComputedRef, PropType } from 'vue'\n\nexport const makeVIconProps = propsFactory({\n  color: String,\n  start: Boolean,\n  end: Boolean,\n  icon: {\n    type: [String, Object] as PropType<IconValue>,\n  },\n\n  ...makeSizeProps(),\n  ...makeTagProps({ tag: 'i' }),\n  ...makeThemeProps(),\n}, 'v-icon')\n\nexport const VIcon = defineComponent({\n  name: 'VIcon',\n\n  props: makeVIconProps(),\n\n  setup (props, { attrs, slots }) {\n    let slotIcon: ComputedRef<string | undefined> | undefined\n    if (slots.default) {\n      slotIcon = computed(() => {\n        const slot = slots.default?.()\n        if (!slot) return\n\n        return flattenFragments(slot).filter(node =>\n          node.children && typeof node.children === 'string'\n        )[0]?.children as string\n      })\n    }\n\n    const { themeClasses } = provideTheme(props)\n    const { iconData } = useIcon(slotIcon || props)\n    const { sizeClasses } = useSize(props)\n    const { textColorClasses, textColorStyles } = useTextColor(toRef(props, 'color'))\n\n    return () => {\n      return (\n        <iconData.value.component\n          tag={ props.tag }\n          icon={ iconData.value.icon }\n          class={[\n            'v-icon',\n            'notranslate',\n            sizeClasses.value,\n            textColorClasses.value,\n            themeClasses.value,\n            {\n              'v-icon--clickable': !!attrs.onClick,\n              'v-icon--start': props.start,\n              'v-icon--end': props.end,\n            },\n          ]}\n          style={[\n            !sizeClasses.value ? ({\n              fontSize: convertToUnit(props.size),\n              width: convertToUnit(props.size),\n              height: convertToUnit(props.size),\n            }) : undefined,\n            textColorStyles.value,\n          ]}\n          aria-hidden=\"true\"\n        />\n      )\n    }\n  },\n})\n"],"file":"VIcon.mjs"}