{"version":3,"sources":["../../../src/components/VBtnToggle/VBtnToggle.tsx"],"names":["VBtnGroup","makeGroupProps","useGroup","genericComponent","useRender","VBtnToggleSymbol","Symbol","for","VBtnToggle","name","props","selectedClass","emits","value","setup","slots","isSelected","next","prev","select","selected","default"],"mappings":";AAAA;AACA,0B,CAEA;;SACSA,S,kCAET;;SACSC,c,EAAgBC,Q,uCAEzB;;SACSC,gB,EAAkBC,S,gCAE3B;;AAQA,OAAO,MAAMC,gBAA4C,GAAGC,MAAM,CAACC,GAAP,CAAW,sBAAX,CAArD;AAEP,OAAO,MAAMC,UAAU,GAAGL,gBAAgB,GAIrC;AACHM,EAAAA,IAAI,EAAE,YADH;AAGHC,EAAAA,KAAK,EAAET,cAAc,CAAC;AAAEU,IAAAA,aAAa,EAAE;AAAjB,GAAD,CAHlB;AAKHC,EAAAA,KAAK,EAAE;AACL,yBAAsBC,KAAD,IAAgB;AADhC,GALJ;;AASHC,EAAAA,KAAK,CAAEJ,KAAF,QAAoB;AAAA,QAAX;AAAEK,MAAAA;AAAF,KAAW;AACvB,UAAM;AAAEC,MAAAA,UAAF;AAAcC,MAAAA,IAAd;AAAoBC,MAAAA,IAApB;AAA0BC,MAAAA,MAA1B;AAAkCC,MAAAA;AAAlC,QAA+ClB,QAAQ,CAACQ,KAAD,EAAQL,gBAAR,CAA7D;AAEAD,IAAAA,SAAS,CAAC;AAAA;;AAAA;AAAA,iBACS;AADT;AAAA,0CAEJW,KAAK,CAACM,OAFF,qBAEJ,oBAAAN,KAAK,EAAW;AAChBC,UAAAA,UADgB;AAEhBC,UAAAA,IAFgB;AAGhBC,UAAAA,IAHgB;AAIhBC,UAAAA,MAJgB;AAKhBC,UAAAA;AALgB,SAAX,CAFD;AAAA;AAAA,KAAD,CAAT;AAYA,WAAO;AACLH,MAAAA,IADK;AAELC,MAAAA,IAFK;AAGLC,MAAAA;AAHK,KAAP;AAKD;;AA7BE,CAJqC,CAAnC","sourcesContent":["// Styles\nimport './VBtnToggle.sass'\n\n// Components\nimport { VBtnGroup } from '@/components/VBtnGroup'\n\n// Composables\nimport { makeGroupProps, useGroup } from '@/composables/group'\n\n// Utility\nimport { genericComponent, useRender } from '@/util'\n\n// Types\nimport type { GroupProvide } from '@/composables/group'\nimport type { InjectionKey } from 'vue'\nimport type { MakeSlots } from '@/util'\n\nexport type BtnToggleSlotProps = 'isSelected' | 'select' | 'selected' | 'next' | 'prev'\nexport interface DefaultBtnToggleSlot extends Pick<GroupProvide, BtnToggleSlotProps> {}\n\nexport const VBtnToggleSymbol: InjectionKey<GroupProvide> = Symbol.for('vuetify:v-btn-toggle')\n\nexport const VBtnToggle = genericComponent<new <T>() => {\n  $slots: MakeSlots<{\n    default: [DefaultBtnToggleSlot]\n  }>\n}>()({\n  name: 'VBtnToggle',\n\n  props: makeGroupProps({ selectedClass: 'v-btn--selected' }),\n\n  emits: {\n    'update:modelValue': (value: any) => true,\n  },\n\n  setup (props, { slots }) {\n    const { isSelected, next, prev, select, selected } = useGroup(props, VBtnToggleSymbol)\n\n    useRender(() => (\n      <VBtnGroup class=\"v-btn-toggle\">\n        { slots.default?.({\n          isSelected,\n          next,\n          prev,\n          select,\n          selected,\n        } as DefaultBtnToggleSlot) }\n      </VBtnGroup>\n    ))\n\n    return {\n      next,\n      prev,\n      select,\n    }\n  },\n})\n"],"file":"VBtnToggle.mjs"}