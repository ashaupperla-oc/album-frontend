{"version":3,"sources":["../../../src/components/VColorPicker/VColorPicker.tsx"],"names":["VSheet","VColorPickerPreview","VColorPickerCanvas","VColorPickerEdit","VColorPickerSwatches","useProxiedModel","makeElevationProps","makeRoundedProps","makeThemeProps","onMounted","ref","defineComponent","HSVAtoCSS","extractColor","modes","nullColor","parseColor","VColorPicker","name","inheritAttrs","props","canvasHeight","type","String","Number","default","disabled","Boolean","dotSize","hideCanvas","hideSliders","hideInputs","mode","validator","v","Object","keys","includes","Array","isArray","every","m","showSwatches","swatches","swatchesMaxHeight","modelValue","width","emits","color","setup","lastPickedColor","currentColor","undefined","c","value","h","updateColor","hsva","rounded","elevation","theme","a","endsWith"],"mappings":"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","sourcesContent":["// Styles\nimport './VColorPicker.sass'\n\n// Components\nimport { VSheet } from '@/components/VSheet'\nimport { VColorPickerPreview } from './VColorPickerPreview'\nimport { VColorPickerCanvas } from './VColorPickerCanvas'\nimport { VColorPickerEdit } from './VColorPickerEdit'\nimport { VColorPickerSwatches } from './VColorPickerSwatches'\n\n// Composables\nimport { useProxiedModel } from '@/composables/proxiedModel'\nimport { makeElevationProps } from '@/composables/elevation'\nimport { makeRoundedProps } from '@/composables/rounded'\nimport { makeThemeProps } from '@/composables/theme'\n\n// Utilities\nimport { onMounted, ref } from 'vue'\nimport { defineComponent, HSVAtoCSS } from '@/util'\nimport { extractColor, modes, nullColor, parseColor } from './util'\n\n// Types\nimport type { PropType } from 'vue'\nimport type { HSVA } from '@/util'\n\nexport const VColorPicker = defineComponent({\n  name: 'VColorPicker',\n\n  inheritAttrs: false,\n\n  props: {\n    canvasHeight: {\n      type: [String, Number],\n      default: 150,\n    },\n    disabled: Boolean,\n    dotSize: {\n      type: [Number, String],\n      default: 10,\n    },\n    hideCanvas: Boolean,\n    hideSliders: Boolean,\n    hideInputs: Boolean,\n    mode: {\n      type: String,\n      default: 'rgba',\n      validator: (v: string) => Object.keys(modes).includes(v),\n    },\n    modes: {\n      type: Array as PropType<string[]>,\n      default: () => Object.keys(modes),\n      validator: (v: any) => Array.isArray(v) && v.every(m => Object.keys(modes).includes(m)),\n    },\n    showSwatches: Boolean,\n    swatches: Array as PropType<string[][]>,\n    swatchesMaxHeight: {\n      type: [Number, String],\n      default: 150,\n    },\n    modelValue: {\n      type: [Object, String] as PropType<Record<string, unknown> | string | undefined | null>,\n    },\n    width: {\n      type: [Number, String],\n      default: 300,\n    },\n\n    ...makeElevationProps(),\n    ...makeRoundedProps(),\n    ...makeThemeProps(),\n  },\n\n  emits: {\n    'update:modelValue': (color: any) => true,\n    'update:mode': (mode: string) => true,\n  },\n\n  setup (props) {\n    const mode = useProxiedModel(props, 'mode')\n    const lastPickedColor = ref<HSVA | null>(null)\n    const currentColor = useProxiedModel(\n      props,\n      'modelValue',\n      undefined,\n      v => {\n        let c = parseColor(v)\n\n        if (!c) return null\n\n        if (lastPickedColor.value) {\n          c = { ...c, h: lastPickedColor.value.h }\n          lastPickedColor.value = null\n        }\n\n        return c\n      },\n      v => {\n        if (!v) return null\n\n        return extractColor(v, props.modelValue)\n      }\n    )\n\n    const updateColor = (hsva: HSVA) => {\n      currentColor.value = hsva\n      lastPickedColor.value = hsva\n    }\n\n    onMounted(() => {\n      if (!props.modes.includes(mode.value)) mode.value = props.modes[0]\n    })\n\n    return () => (\n      <VSheet\n        rounded={ props.rounded }\n        elevation={ props.elevation }\n        theme={ props.theme }\n        class={[\n          'v-color-picker',\n        ]}\n        style={{\n          '--v-color-picker-color-hsv': HSVAtoCSS({ ...(currentColor.value ?? nullColor), a: 1 }),\n        }}\n        maxWidth={ props.width }\n      >\n        { !props.hideCanvas && (\n          <VColorPickerCanvas\n            color={ currentColor.value }\n            onUpdate:color={ updateColor }\n            disabled={ props.disabled }\n            dotSize={ props.dotSize }\n            width={ props.width }\n            height={ props.canvasHeight }\n          />\n        ) }\n        { (!props.hideSliders || !props.hideInputs) && (\n          <div class=\"v-color-picker__controls\">\n            { !props.hideSliders && (\n              <VColorPickerPreview\n                color={ currentColor.value }\n                onUpdate:color={ updateColor }\n                hideAlpha={ !mode.value.endsWith('a') }\n                disabled={ props.disabled }\n              />\n            ) }\n            { !props.hideInputs && (\n              <VColorPickerEdit\n                modes={ props.modes }\n                mode={ mode.value }\n                onUpdate:mode={ m => mode.value = m }\n                color={ currentColor.value }\n                onUpdate:color={ updateColor }\n                disabled={ props.disabled }\n              />\n            ) }\n          </div>\n        ) }\n        { props.showSwatches && (\n          <VColorPickerSwatches\n            color={ currentColor.value }\n            onUpdate:color={ updateColor }\n            maxHeight={ props.swatchesMaxHeight }\n            swatches={ props.swatches }\n            disabled={ props.disabled }\n          />\n        ) }\n      </VSheet>\n    )\n  },\n})\n\nexport type VColorPicker = InstanceType<typeof VColorPicker>\n"],"file":"VColorPicker.mjs"}