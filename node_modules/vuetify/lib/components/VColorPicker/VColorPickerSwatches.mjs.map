{"version":3,"sources":["../../../src/components/VColorPicker/VColorPickerSwatches.tsx"],"names":["VIcon","convertToUnit","deepEqual","defineComponent","getContrast","colors","parseColor","parseDefaultColors","Object","keys","map","key","color","base","darken4","darken3","darken2","darken1","lighten1","lighten2","lighten3","lighten4","lighten5","black","white","transparent","VColorPickerSwatches","name","props","swatches","type","Array","default","disabled","Boolean","maxHeight","Number","String","emits","setup","emit","swatch","hsva","background","undefined"],"mappings":";AAAA;AACA,oC,CAEA;;SACSA,K,8BAET;;SACSC,a,EAAeC,S,EAAWC,e,EAAiBC,W;OAC7CC,M;SACEC,U,4BAET;;AAIA,SAASC,kBAAT,CAA6BF,MAA7B,EAA6E;AAC3E,SAAOG,MAAM,CAACC,IAAP,CAAYJ,MAAZ,EAAoBK,GAApB,CAAwBC,GAAG,IAAI;AACpC,UAAMC,KAAK,GAAGP,MAAM,CAACM,GAAD,CAApB;AACA,WAAOC,KAAK,CAACC,IAAN,GAAa,CAClBD,KAAK,CAACC,IADY,EAElBD,KAAK,CAACE,OAFY,EAGlBF,KAAK,CAACG,OAHY,EAIlBH,KAAK,CAACI,OAJY,EAKlBJ,KAAK,CAACK,OALY,EAMlBL,KAAK,CAACM,QANY,EAOlBN,KAAK,CAACO,QAPY,EAQlBP,KAAK,CAACQ,QARY,EASlBR,KAAK,CAACS,QATY,EAUlBT,KAAK,CAACU,QAVY,CAAb,GAWH,CACFV,KAAK,CAACW,KADJ,EAEFX,KAAK,CAACY,KAFJ,EAGFZ,KAAK,CAACa,WAHJ,CAXJ;AAgBD,GAlBM,CAAP;AAmBD;;AAED,OAAO,MAAMC,oBAAoB,GAAGvB,eAAe,CAAC;AAClDwB,EAAAA,IAAI,EAAE,sBAD4C;AAGlDC,EAAAA,KAAK,EAAE;AACLC,IAAAA,QAAQ,EAAE;AACRC,MAAAA,IAAI,EAAEC,KADE;AAERC,MAAAA,OAAO,EAAE,MAAMzB,kBAAkB,CAACF,MAAD;AAFzB,KADL;AAKL4B,IAAAA,QAAQ,EAAEC,OALL;AAMLtB,IAAAA,KAAK,EAAEJ,MANF;AAOL2B,IAAAA,SAAS,EAAE,CAACC,MAAD,EAASC,MAAT;AAPN,GAH2C;AAalDC,EAAAA,KAAK,EAAE;AACL,oBAAiB1B,KAAD,IAAiB;AAD5B,GAb2C;;AAiBlD2B,EAAAA,KAAK,CAAEX,KAAF,QAAmB;AAAA,QAAV;AAAEY,MAAAA;AAAF,KAAU;AACtB,WAAO;AAAA,eAEG,yBAFH;AAAA,eAGI;AACLL,QAAAA,SAAS,EAAElC,aAAa,CAAC2B,KAAK,CAACO,SAAP;AADnB;AAHJ,mCAQCP,KAAK,CAACC,QAAN,CAAenB,GAAf,CAAmB+B,MAAM;AAAA,eACd;AADc,QAErBA,MAAM,CAAC/B,GAAP,CAAWE,KAAK,IAAI;AACpB,YAAM8B,IAAI,GAAGpC,UAAU,CAACM,KAAD,CAAvB;AAEA;AAAA,iBAEU,gCAFV;AAAA,mBAGa,MAAM8B,IAAI,IAAIF,IAAI,CAAC,cAAD,EAAiBE,IAAjB;AAH/B;AAAA,iBAKgB;AAAEC,UAAAA,UAAU,EAAE/B;AAAd;AALhB,UAMQgB,KAAK,CAAChB,KAAN,IAAeV,SAAS,CAAC0B,KAAK,CAAChB,KAAP,EAAc8B,IAAd,CAAxB;AAAA,gBACc,SADd;AAAA,gBAC6B,UAD7B;AAAA,iBAC+CtC,WAAW,CAACQ,KAAD,EAAQ,SAAR,CAAX,GAAgC,CAAhC,GAAoC,OAApC,GAA8C;AAD7F,iBAEEgC,SARV;AAaD,KAhBC,CAFqB,EAAzB,CARD,IAAP;AAgCD;;AAlDiD,CAAD,CAA5C","sourcesContent":["// Styles\nimport './VColorPickerSwatches.sass'\n\n// Components\nimport { VIcon } from '@/components/VIcon'\n\n// Utilities\nimport { convertToUnit, deepEqual, defineComponent, getContrast } from '@/util'\nimport colors from '@/util/colors'\nimport { parseColor } from './util'\n\n// Types\nimport type { PropType } from 'vue'\nimport type { HSVA } from '@/util'\n\nfunction parseDefaultColors (colors: Record<string, Record<string, string>>) {\n  return Object.keys(colors).map(key => {\n    const color = colors[key]\n    return color.base ? [\n      color.base,\n      color.darken4,\n      color.darken3,\n      color.darken2,\n      color.darken1,\n      color.lighten1,\n      color.lighten2,\n      color.lighten3,\n      color.lighten4,\n      color.lighten5,\n    ] : [\n      color.black,\n      color.white,\n      color.transparent,\n    ]\n  })\n}\n\nexport const VColorPickerSwatches = defineComponent({\n  name: 'VColorPickerSwatches',\n\n  props: {\n    swatches: {\n      type: Array as PropType<string[][]>,\n      default: () => parseDefaultColors(colors),\n    },\n    disabled: Boolean,\n    color: Object as PropType<HSVA | null>,\n    maxHeight: [Number, String],\n  },\n\n  emits: {\n    'update:color': (color: HSVA) => true,\n  },\n\n  setup (props, { emit }) {\n    return () => (\n      <div\n        class=\"v-color-picker-swatches\"\n        style={{\n          maxHeight: convertToUnit(props.maxHeight),\n        }}\n      >\n        <div>\n          { props.swatches.map(swatch => (\n            <div class=\"v-color-picker-swatches__swatch\">\n              { swatch.map(color => {\n                const hsva = parseColor(color)\n\n                return (\n                  <div\n                    class=\"v-color-picker-swatches__color\"\n                    onClick={() => hsva && emit('update:color', hsva)}\n                  >\n                    <div style={{ background: color }}>\n                      { props.color && deepEqual(props.color, hsva)\n                        ? <VIcon size=\"x-small\" icon=\"$success\" color={getContrast(color, '#FFFFFF') > 2 ? 'white' : 'black' } />\n                        : undefined\n                      }\n                    </div>\n                  </div>\n                )\n              }) }\n            </div>\n          ))}\n        </div>\n      </div>\n    )\n  },\n})\n"],"file":"VColorPickerSwatches.mjs"}