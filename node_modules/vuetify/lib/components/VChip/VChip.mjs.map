{"version":3,"sources":["../../../src/components/VChip/VChip.tsx"],"names":["VAvatar","VChipGroupSymbol","VExpandXTransition","VIcon","genOverlays","makeVariantProps","useVariant","makeBorderProps","useBorder","makeDensityProps","useDensity","makeElevationProps","useElevation","makeGroupItemProps","useGroupItem","makeRoundedProps","useRounded","makeRouterProps","useLink","makeSizeProps","useSize","makeTagProps","makeThemeProps","provideTheme","useProxiedModel","Ripple","defineComponent","VChip","name","directives","props","activeClass","String","appendAvatar","appendIcon","closable","Boolean","closeIcon","type","default","closeLabel","draggable","filter","filterIcon","label","link","pill","prependAvatar","prependIcon","ripple","text","modelValue","tag","variant","emits","e","value","setup","attrs","emit","slots","isActive","themeClasses","borderClasses","colorClasses","colorStyles","variantClasses","elevationClasses","group","roundedClasses","sizeClasses","densityClasses","onCloseClick","Tag","isLink","hasAppend","append","hasClose","close","hasFilter","hasPrepend","prepend","hasColor","isSelected","isClickable","disabled","onClickFunc","toggle","undefined","selectedClass","href","size","select","onClick"],"mappings":"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","sourcesContent":["// Styles\nimport './VChip.sass'\n\n// Components\nimport { VAvatar } from '@/components/VAvatar'\nimport { VChipGroupSymbol } from '@/components/VChipGroup/VChipGroup'\nimport { VExpandXTransition } from '@/components/transitions'\nimport { VIcon } from '@/components/VIcon'\n\n// Composables\nimport { genOverlays, makeVariantProps, useVariant } from '@/composables/variant'\nimport { makeBorderProps, useBorder } from '@/composables/border'\nimport { makeDensityProps, useDensity } from '@/composables/density'\nimport { makeElevationProps, useElevation } from '@/composables/elevation'\nimport { makeGroupItemProps, useGroupItem } from '@/composables/group'\nimport { makeRoundedProps, useRounded } from '@/composables/rounded'\nimport { makeRouterProps, useLink } from '@/composables/router'\nimport { makeSizeProps, useSize } from '@/composables/size'\nimport { makeTagProps } from '@/composables/tag'\nimport { makeThemeProps, provideTheme } from '@/composables/theme'\nimport { useProxiedModel } from '@/composables/proxiedModel'\n\n// Directives\nimport { Ripple } from '@/directives/ripple'\n\n// Utilities\nimport { defineComponent } from '@/util'\n\nexport const VChip = defineComponent({\n  name: 'VChip',\n\n  directives: { Ripple },\n\n  props: {\n    activeClass: String,\n    appendAvatar: String,\n    appendIcon: String,\n    closable: Boolean,\n    closeIcon: {\n      type: String,\n      default: '$delete',\n    },\n    closeLabel: {\n      type: String,\n      default: '$vuetify.close',\n    },\n    draggable: Boolean,\n    filter: Boolean,\n    filterIcon: {\n      type: String,\n      default: '$complete',\n    },\n    label: Boolean,\n    link: Boolean,\n    pill: Boolean,\n    prependAvatar: String,\n    prependIcon: String,\n    ripple: {\n      type: Boolean,\n      default: true,\n    },\n    text: String,\n    modelValue: {\n      type: Boolean,\n      default: true,\n    },\n\n    ...makeBorderProps(),\n    ...makeDensityProps(),\n    ...makeElevationProps(),\n    ...makeGroupItemProps(),\n    ...makeRoundedProps(),\n    ...makeRouterProps(),\n    ...makeSizeProps(),\n    ...makeTagProps({ tag: 'span' }),\n    ...makeThemeProps(),\n    ...makeVariantProps({ variant: 'contained-text' } as const),\n  },\n\n  emits: {\n    'click:close': (e: Event) => true,\n    'update:active': (value: Boolean) => true,\n    'update:modelValue': (value: Boolean) => true,\n  },\n\n  setup (props, { attrs, emit, slots }) {\n    const isActive = useProxiedModel(props, 'modelValue')\n\n    const { themeClasses } = provideTheme(props)\n    const { borderClasses } = useBorder(props)\n    const { colorClasses, colorStyles, variantClasses } = useVariant(props)\n    const { elevationClasses } = useElevation(props)\n    const group = useGroupItem(props, VChipGroupSymbol, false)\n    const { roundedClasses } = useRounded(props)\n    const { sizeClasses } = useSize(props)\n    const { densityClasses } = useDensity(props)\n    const link = useLink(props, attrs)\n\n    function onCloseClick (e: Event) {\n      isActive.value = false\n\n      emit('click:close', e)\n    }\n\n    return () => {\n      const Tag = (link.isLink.value) ? 'a' : props.tag\n      const hasAppend = !!(slots.append || props.appendIcon || props.appendAvatar)\n      const hasClose = !!(slots.close || props.closable)\n      const hasFilter = !!(slots.filter || props.filter) && group\n      const hasPrepend = !!(slots.prepend || props.prependIcon || props.prependAvatar)\n      const hasColor = !group || group.isSelected.value\n      const isClickable = !props.disabled && (!!group || link.isClickable.value || props.link)\n      const onClickFunc = props.link ? props.link : group?.toggle\n\n      return isActive.value && (\n        <Tag\n          class={[\n            'v-chip',\n            {\n              'v-chip--disabled': props.disabled,\n              'v-chip--label': props.label,\n              'v-chip--link': isClickable,\n              'v-chip--pill': props.pill,\n            },\n            themeClasses.value,\n            borderClasses.value,\n            hasColor ? colorClasses.value : undefined,\n            densityClasses.value,\n            elevationClasses.value,\n            roundedClasses.value,\n            sizeClasses.value,\n            variantClasses.value,\n            group?.selectedClass.value,\n          ]}\n          style={[\n            hasColor ? colorStyles.value : undefined,\n          ]}\n          disabled={ props.disabled || undefined }\n          draggable={ props.draggable }\n          href={ link.href.value }\n          v-ripple={ [isClickable && props.ripple, null] }\n          onClick={ isClickable && onClickFunc }\n        >\n          { genOverlays(isClickable, 'v-chip') }\n\n          { hasFilter && (\n            <VExpandXTransition>\n              <div\n                class=\"v-chip__filter\"\n                v-show={ group.isSelected.value }\n              >\n                { slots.filter\n                  ? slots.filter()\n                  : <VIcon icon={ props.filterIcon } />\n                }\n              </div>\n            </VExpandXTransition>\n          ) }\n\n          { hasPrepend && (\n            <div class=\"v-chip__prepend\">\n              { slots.prepend\n                ? slots.prepend()\n                : (\n                  <VAvatar\n                    icon={ props.prependIcon }\n                    image={ props.prependAvatar }\n                    size={ props.size }\n                  />\n                )\n              }\n            </div>\n          ) }\n\n          { slots.default?.({\n            isSelected: group?.isSelected.value,\n            selectedClass: group?.selectedClass.value,\n            select: group?.select,\n            toggle: group?.toggle,\n            value: group?.value.value,\n            disabled: props.disabled,\n          }) ?? props.text }\n\n          { hasAppend && (\n            <div class=\"v-chip__append\">\n              { slots.append\n                ? slots.append()\n                : (\n                  <VAvatar\n                    icon={ props.appendIcon }\n                    image={ props.appendAvatar }\n                    size={ props.size }\n                  />\n                )\n              }\n            </div>\n          ) }\n\n          { hasClose && (\n            <div\n              class=\"v-chip__close\"\n              onClick={ onCloseClick }\n            >\n              { slots.close\n                ? slots.close({ props: { onClick: onCloseClick } })\n                : (\n                  <VIcon\n                    icon={ props.closeIcon }\n                    size=\"x-small\"\n                  />\n                )\n              }\n            </div>\n          ) }\n        </Tag>\n      )\n    }\n  },\n})\n\nexport type VChip = InstanceType<typeof VChip>\n"],"file":"VChip.mjs"}