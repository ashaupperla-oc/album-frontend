{"version":3,"sources":["../../../src/components/VFileInput/VFileInput.tsx"],"names":["filterFieldProps","makeVFieldProps","VChip","VCounter","VField","useForwardRef","useLocale","useProxiedModel","computed","nextTick","ref","defineComponent","filterInputAttrs","humanReadableFileSize","useRender","wrapInArray","filterInputProps","makeVInputProps","VInput","VFileInput","name","inheritAttrs","props","chips","Boolean","counter","counterSizeString","type","String","default","counterString","multiple","hint","persistentHint","placeholder","showSize","Number","validator","v","includes","prependIcon","modelValue","Array","val","every","clearable","emits","e","files","setup","attrs","emit","slots","t","model","base","undefined","totalBytes","value","reduce","bytes","size","totalBytesReadable","fileNames","map","file","counterValue","fileCount","length","vInputRef","vFieldRef","isFocused","inputRef","messages","onFocus","document","activeElement","focus","onControlClick","click","onClear","stopPropagation","hasCounter","rootAttrs","inputAttrs","_","inputProps","fieldProps","isDisabled","isDirty","isReadonly","isValid","class","fieldClass","slotProps","target","selection","text","color","join","details"],"mappings":"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","sourcesContent":["// Styles\nimport './VFileInput.sass'\n\n// Components\nimport { filterFieldProps, makeVFieldProps } from '@/components/VField/VField'\nimport { VChip } from '@/components/VChip'\nimport { VCounter } from '@/components/VCounter'\nimport { VField } from '@/components/VField'\n\n// Composables\nimport { useForwardRef } from '@/composables/forwardRef'\nimport { useLocale } from '@/composables/locale'\nimport { useProxiedModel } from '@/composables/proxiedModel'\n\n// Utilities\nimport { computed, nextTick, ref } from 'vue'\nimport { defineComponent, filterInputAttrs, humanReadableFileSize, useRender, wrapInArray } from '@/util'\n\n// Types\nimport type { PropType } from 'vue'\nimport { filterInputProps, makeVInputProps, VInput } from '@/components/VInput/VInput'\n\nexport const VFileInput = defineComponent({\n  name: 'VFileInput',\n\n  inheritAttrs: false,\n\n  props: {\n    chips: Boolean,\n    counter: Boolean,\n    counterSizeString: {\n      type: String,\n      default: '$vuetify.fileInput.counterSize',\n    },\n    counterString: {\n      type: String,\n      default: '$vuetify.fileInput.counter',\n    },\n    multiple: Boolean,\n    hint: String,\n    persistentHint: Boolean,\n    placeholder: String,\n    showSize: {\n      type: [Boolean, Number] as PropType<boolean | 1000 | 1024>,\n      default: false,\n      validator: (v: boolean | number) => {\n        return (\n          typeof v === 'boolean' ||\n          [1000, 1024].includes(v)\n        )\n      },\n    },\n\n    ...makeVInputProps(),\n\n    prependIcon: {\n      type: String,\n      default: '$file',\n    },\n    modelValue: {\n      type: Array as PropType<File[]>,\n      default: () => ([]),\n      validator: (val: any) => {\n        return wrapInArray(val).every(v => v != null && typeof v === 'object')\n      },\n    },\n\n    ...makeVFieldProps({ clearable: true }),\n  },\n\n  emits: {\n    'click:clear': (e: MouseEvent) => true,\n    'click:control': (e: MouseEvent) => true,\n    'update:modelValue': (files: File[]) => true,\n  },\n\n  setup (props, { attrs, emit, slots }) {\n    const { t } = useLocale()\n    const model = useProxiedModel(props, 'modelValue')\n    const base = computed(() => typeof props.showSize !== 'boolean' ? props.showSize : undefined)\n    const totalBytes = computed(() => (model.value ?? []).reduce((bytes, { size = 0 }) => bytes + size, 0))\n    const totalBytesReadable = computed(() => humanReadableFileSize(totalBytes.value, base.value))\n\n    const fileNames = computed(() => (model.value ?? []).map(file => {\n      const { name = '', size = 0 } = file\n\n      return !props.showSize\n        ? name\n        : `${name} (${humanReadableFileSize(size, base.value)})`\n    }))\n\n    const counterValue = computed(() => {\n      const fileCount = model.value?.length ?? 0\n      if (props.showSize) return t(props.counterSizeString, fileCount, totalBytesReadable.value)\n      else return t(props.counterString, fileCount)\n    })\n    const vInputRef = ref<VInput>()\n    const vFieldRef = ref<VInput>()\n    const isFocused = ref(false)\n    const inputRef = ref<HTMLInputElement>()\n    const messages = computed(() => {\n      return props.messages.length\n        ? props.messages\n        : (props.persistentHint) ? props.hint : ''\n    })\n    function onFocus () {\n      if (inputRef.value !== document.activeElement) {\n        inputRef.value?.focus()\n      }\n\n      if (!isFocused.value) {\n        isFocused.value = true\n      }\n    }\n    function onControlClick (e: MouseEvent) {\n      inputRef.value?.click()\n\n      emit('click:control', e)\n    }\n    function onClear (e: MouseEvent) {\n      e.stopPropagation()\n\n      onFocus()\n\n      nextTick(() => {\n        model.value = []\n\n        if (inputRef?.value) {\n          inputRef.value.value = ''\n        }\n\n        emit('click:clear', e)\n      })\n    }\n\n    useRender(() => {\n      const hasCounter = !!(slots.counter || props.counter)\n      const [rootAttrs, inputAttrs] = filterInputAttrs(attrs)\n      const [{ modelValue: _, ...inputProps }] = filterInputProps(props)\n      const [fieldProps] = filterFieldProps(props)\n\n      return (\n        <VInput\n          ref={ vInputRef }\n          v-model={ model.value }\n          class=\"v-file-input\"\n          { ...rootAttrs }\n          { ...inputProps }\n          onClick:prepend={ onControlClick }\n          messages={ messages.value }\n        >\n          {{\n            ...slots,\n            default: ({\n              isDisabled,\n              isDirty,\n              isReadonly,\n              isValid,\n            }) => (\n              <VField\n                ref={ vFieldRef }\n                prepend-icon={ props.prependIcon }\n                onClick:control={ onControlClick }\n                onClick:clear={ onClear }\n                { ...fieldProps }\n                active={ isDirty.value || isFocused.value }\n                dirty={ isDirty.value }\n                focused={ isFocused.value }\n                error={ isValid.value === false }\n              >\n                {{\n                  ...slots,\n                  default: ({\n                    props: { class: fieldClass, ...slotProps },\n                  }) => (\n                    <>\n                      <input\n                        ref={ inputRef }\n                        type=\"file\"\n                        readonly={ isReadonly.value }\n                        disabled={ isDisabled.value }\n                        multiple={ props.multiple }\n                        name={ props.name }\n                        onClick={ e => {\n                          e.stopPropagation()\n\n                          onFocus()\n                        } }\n                        onChange={ e => {\n                          if (!e.target) return\n\n                          const target = e.target as HTMLInputElement\n                          model.value = [...target.files ?? []]\n                        } }\n                        onFocus={ onFocus }\n                        onBlur={ () => (isFocused.value = false) }\n                        { ...slotProps }\n                        { ...inputAttrs }\n                      />\n\n                      { model.value.length > 0 && (\n                        <div class={ fieldClass }>\n                          { slots.selection ? slots.selection({\n                            fileNames: fileNames.value,\n                            totalBytes: totalBytes.value,\n                            totalBytesReadable: totalBytesReadable.value,\n                          })\n                          : props.chips ? fileNames.value.map(text => (\n                            <VChip\n                              key={ text }\n                              size=\"small\"\n                              color={ props.color }\n                            >{ text }</VChip>\n                          ))\n                          : fileNames.value.join(', ') }\n                        </div>\n                      ) }\n                    </>\n                  ),\n                }}\n              </VField>\n            ),\n            details: hasCounter ? () => (\n              <>\n                <span />\n\n                <VCounter\n                  active={ !!model.value.length }\n                  value={ counterValue.value }\n                  v-slots={ slots.counter }\n                />\n              </>\n            ) : undefined,\n          }}\n        </VInput>\n      )\n    })\n\n    return useForwardRef({}, vInputRef, vFieldRef, inputRef)\n  },\n})\n\nexport type VFileInput = InstanceType<typeof VFileInput>\n"],"file":"VFileInput.mjs"}