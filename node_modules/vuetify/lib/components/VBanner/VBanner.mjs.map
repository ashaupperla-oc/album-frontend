{"version":3,"sources":["../../../src/components/VBanner/VBanner.tsx"],"names":["VBannerActions","VBannerAvatar","VBannerIcon","VBannerText","makeBorderProps","useBorder","makeDensityProps","useDensity","makeDimensionProps","useDimension","makeElevationProps","useElevation","makePositionProps","usePosition","makeRoundedProps","useRounded","makeTagProps","makeThemeProps","provideTheme","provideDefaults","useDisplay","defineComponent","useRender","toRef","VBanner","name","props","avatar","String","color","icon","lines","stacked","Boolean","sticky","text","setup","slots","borderClasses","densityClasses","mobile","dimensionStyles","elevationClasses","positionClasses","positionStyles","roundedClasses","themeClasses","density","image","hasText","hasPrepend","prepend","value","undefined","default","actions"],"mappings":"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","sourcesContent":["// Styles\nimport './VBanner.sass'\n\n// Components\nimport { VBannerActions } from './VBannerActions'\nimport { VBannerAvatar } from './VBannerAvatar'\nimport { VBannerIcon } from './VBannerIcon'\nimport { VBannerText } from './VBannerText'\n\n// Composables\nimport { makeBorderProps, useBorder } from '@/composables/border'\nimport { makeDensityProps, useDensity } from '@/composables/density'\nimport { makeDimensionProps, useDimension } from '@/composables/dimensions'\nimport { makeElevationProps, useElevation } from '@/composables/elevation'\nimport { makePositionProps, usePosition } from '@/composables/position'\nimport { makeRoundedProps, useRounded } from '@/composables/rounded'\nimport { makeTagProps } from '@/composables/tag'\nimport { makeThemeProps, provideTheme } from '@/composables/theme'\nimport { provideDefaults } from '@/composables/defaults'\nimport { useDisplay } from '@/composables/display'\n\n// Utilities\nimport { defineComponent, useRender } from '@/util'\nimport { toRef } from 'vue'\n\n// Types\nimport type { PropType } from 'vue'\n\nexport const VBanner = defineComponent({\n  name: 'VBanner',\n\n  props: {\n    avatar: String,\n    color: String,\n    icon: String,\n    lines: String as PropType<'one' | 'two' | 'three'>,\n    stacked: Boolean,\n    sticky: Boolean,\n    text: String,\n\n    ...makeBorderProps(),\n    ...makeDensityProps(),\n    ...makeDimensionProps(),\n    ...makeElevationProps(),\n    ...makePositionProps(),\n    ...makeRoundedProps(),\n    ...makeTagProps(),\n    ...makeThemeProps(),\n  },\n\n  setup (props, { slots }) {\n    const { borderClasses } = useBorder(props)\n    const { densityClasses } = useDensity(props)\n    const { mobile } = useDisplay()\n    const { dimensionStyles } = useDimension(props)\n    const { elevationClasses } = useElevation(props)\n    const { positionClasses, positionStyles } = usePosition(props)\n    const { roundedClasses } = useRounded(props)\n\n    const { themeClasses } = provideTheme(props)\n\n    const color = toRef(props, 'color')\n    const density = toRef(props, 'density')\n\n    provideDefaults({\n      VBannerActions: { color, density },\n      VBannerAvatar: { density, image: toRef(props, 'avatar') },\n      VBannerIcon: { color, density, icon: toRef(props, 'icon') },\n    })\n\n    useRender(() => {\n      const hasText = !!(props.text || slots.text)\n      const hasPrepend = !!(slots.prepend || props.avatar || props.icon)\n\n      return (\n        <props.tag\n          class={[\n            'v-banner',\n            {\n              'v-banner--stacked': props.stacked || mobile.value,\n              'v-banner--sticky': props.sticky,\n              [`v-banner--${props.lines}-line`]: !!props.lines,\n            },\n            borderClasses.value,\n            densityClasses.value,\n            elevationClasses.value,\n            positionClasses.value,\n            roundedClasses.value,\n            themeClasses.value,\n          ]}\n          style={[\n            dimensionStyles.value,\n            positionStyles.value,\n          ]}\n          role=\"banner\"\n        >\n          { hasPrepend && (\n            <>\n              { slots.prepend\n                ? (\n                  <div class=\"v-banner__prepend\">\n                    { slots.prepend() }\n                  </div>\n                )\n                : props.avatar ? (<VBannerAvatar />)\n                : props.icon ? (<VBannerIcon />)\n                : undefined\n              }\n            </>\n          ) }\n\n          { hasText && (\n            <VBannerText>\n              { slots.text ? slots.text() : props.text }\n            </VBannerText>\n          ) }\n\n          { slots.default?.() }\n\n          { slots.actions && (\n            <VBannerActions>\n              { slots.actions() }\n            </VBannerActions>\n          ) }\n        </props.tag>\n      )\n    })\n  },\n})\n\nexport type VBanner = InstanceType<typeof VBanner>\n"],"file":"VBanner.mjs"}