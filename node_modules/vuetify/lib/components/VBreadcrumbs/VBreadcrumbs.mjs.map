{"version":3,"sources":["../../../src/components/VBreadcrumbs/VBreadcrumbs.tsx"],"names":["VIcon","VBreadcrumbsItem","VBreadcrumbsDivider","makeDensityProps","useDensity","makeRoundedProps","useRounded","makeTagProps","provideDefaults","useBackgroundColor","toRef","defineComponent","useRender","VBreadcrumbs","name","props","activeClass","String","activeColor","bgColor","color","disabled","Boolean","divider","type","default","icon","items","Array","tag","setup","slots","densityClasses","roundedClasses","backgroundColorClasses","backgroundColorStyles","value","map","item","index","array","length","text","undefined"],"mappings":"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","sourcesContent":["// Styles\nimport './VBreadcrumbs.sass'\n\n// Components\nimport { VIcon } from '@/components/VIcon'\nimport { VBreadcrumbsItem } from './VBreadcrumbsItem'\nimport { VBreadcrumbsDivider } from './VBreadcrumbsDivider'\n\n// Composables\nimport { makeDensityProps, useDensity } from '@/composables/density'\nimport { makeRoundedProps, useRounded } from '@/composables/rounded'\nimport { makeTagProps } from '@/composables/tag'\nimport { provideDefaults } from '@/composables/defaults'\nimport { useBackgroundColor } from '@/composables/color'\n\n// Utilities\nimport { toRef } from 'vue'\nimport { defineComponent, useRender } from '@/util'\n\n// Types\nimport type { PropType } from 'vue'\nimport type { LinkProps } from '@/composables/router'\n\nexport type BreadcrumbItem = string | (LinkProps & {\n  text: string\n  disabled?: boolean\n})\n\nexport const VBreadcrumbs = defineComponent({\n  name: 'VBreadcrumbs',\n\n  props: {\n    activeClass: String,\n    activeColor: String,\n    bgColor: String,\n    color: String,\n    disabled: Boolean,\n    divider: {\n      type: String,\n      default: '/',\n    },\n    icon: String,\n    items: {\n      type: Array as PropType<BreadcrumbItem[]>,\n      default: () => ([]),\n    },\n\n    ...makeDensityProps(),\n    ...makeRoundedProps(),\n    ...makeTagProps({ tag: 'ul' }),\n  },\n\n  setup (props, { slots }) {\n    const { densityClasses } = useDensity(props)\n    const { roundedClasses } = useRounded(props)\n    const { backgroundColorClasses, backgroundColorStyles } = useBackgroundColor(toRef(props, 'bgColor'))\n\n    provideDefaults({\n      VBreadcrumbsItem: {\n        activeClass: toRef(props, 'activeClass'),\n        activeColor: toRef(props, 'activeColor'),\n        color: toRef(props, 'color'),\n        disabled: toRef(props, 'disabled'),\n      },\n    })\n\n    useRender(() => (\n      <props.tag\n        class={[\n          'v-breadcrumbs',\n          backgroundColorClasses.value,\n          densityClasses.value,\n          roundedClasses.value,\n        ]}\n        style={ backgroundColorStyles.value }\n      >\n        { props.icon && (\n          <VIcon icon={ props.icon } left />\n        ) }\n\n        { props.items.map((item, index, array) => (\n          <>\n            <VBreadcrumbsItem\n              key={ index }\n              disabled={ index >= array.length - 1 }\n              { ...(typeof item === 'string' ? { text: item } : item) }\n              v-slots={{\n                default: slots.text ? () => slots.text?.({ item, index }) : undefined,\n              }}\n            />\n\n            { index < array.length - 1 && (\n              <VBreadcrumbsDivider>\n                { slots.divider?.({ item, index }) ?? props.divider }\n              </VBreadcrumbsDivider>\n            ) }\n          </>\n        )) }\n\n        { slots.default?.() }\n      </props.tag>\n    ))\n\n    return {}\n  },\n})\n\nexport type VBreadcrumbs = InstanceType<typeof VBreadcrumbs>\n"],"file":"VBreadcrumbs.mjs"}