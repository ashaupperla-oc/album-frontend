{"version":3,"sources":["../../../src/components/VApp/VApp.tsx"],"names":["makeThemeProps","provideTheme","createLayout","makeLayoutProps","defineComponent","useRender","useRtl","VApp","name","props","fullHeight","setup","slots","theme","layoutClasses","layoutStyles","getLayoutItem","items","layoutRef","rtlClasses","themeClasses","value","default"],"mappings":";AAAA;AACA,oB,CAEA;;SACSA,c,EAAgBC,Y;SAChBC,Y,EAAcC,e,wCAEvB;;SACSC,e,EAAiBC,S;SACjBC,M;AAET,OAAO,MAAMC,IAAI,GAAGH,eAAe,CAAC;AAClCI,EAAAA,IAAI,EAAE,MAD4B;AAGlCC,EAAAA,KAAK,EAAE,EACL,GAAGN,eAAe,CAAC;AAAEO,MAAAA,UAAU,EAAE;AAAd,KAAD,CADb;AAEL,OAAGV,cAAc;AAFZ,GAH2B;;AAQlCW,EAAAA,KAAK,CAAEF,KAAF,QAAoB;AAAA,QAAX;AAAEG,MAAAA;AAAF,KAAW;AACvB,UAAMC,KAAK,GAAGZ,YAAY,CAACQ,KAAD,CAA1B;AACA,UAAM;AAAEK,MAAAA,aAAF;AAAiBC,MAAAA,YAAjB;AAA+BC,MAAAA,aAA/B;AAA8CC,MAAAA,KAA9C;AAAqDC,MAAAA;AAArD,QAAmEhB,YAAY,CAACO,KAAD,CAArF;AACA,UAAM;AAAEU,MAAAA;AAAF,QAAiBb,MAAM,EAA7B;AAEAD,IAAAA,SAAS,CAAC;AAAA;;AAAA;AAAA,eAEAa,SAFA;AAAA,iBAGC,CACL,eADK,EAELL,KAAK,CAACO,YAAN,CAAmBC,KAFd,EAGLP,aAAa,CAACO,KAHT,EAILF,UAAU,CAACE,KAJN,CAHD;AAAA,iBASEN,YAAY,CAACM,KATf;AAAA,oBAUG;AAVH;AAAA,iBAYK;AAZL,4BAaFT,KAAK,CAACU,OAbJ,qBAaF,oBAAAV,KAAK,CAbH;AAAA,KAAD,CAAT;AAkBA,WAAO;AACLI,MAAAA,aADK;AAELC,MAAAA,KAFK;AAGLJ,MAAAA;AAHK,KAAP;AAKD;;AApCiC,CAAD,CAA5B","sourcesContent":["// Styles\nimport './VApp.sass'\n\n// Composables\nimport { makeThemeProps, provideTheme } from '@/composables/theme'\nimport { createLayout, makeLayoutProps } from '@/composables/layout'\n\n// Utilities\nimport { defineComponent, useRender } from '@/util'\nimport { useRtl } from '@/composables/rtl'\n\nexport const VApp = defineComponent({\n  name: 'VApp',\n\n  props: {\n    ...makeLayoutProps({ fullHeight: true }),\n    ...makeThemeProps(),\n  },\n\n  setup (props, { slots }) {\n    const theme = provideTheme(props)\n    const { layoutClasses, layoutStyles, getLayoutItem, items, layoutRef } = createLayout(props)\n    const { rtlClasses } = useRtl()\n\n    useRender(() => (\n      <div\n        ref={ layoutRef }\n        class={[\n          'v-application',\n          theme.themeClasses.value,\n          layoutClasses.value,\n          rtlClasses.value,\n        ]}\n        style={ layoutStyles.value }\n        data-app=\"true\"\n      >\n        <div class=\"v-application__wrap\">\n          { slots.default?.() }\n        </div>\n      </div>\n    ))\n\n    return {\n      getLayoutItem,\n      items,\n      theme,\n    }\n  },\n})\n\nexport type VApp = InstanceType<typeof VApp>\n"],"file":"VApp.mjs"}