{"version":3,"sources":["../../../src/components/VSnackbar/VSnackbar.tsx"],"names":["VDefaultsProvider","VOverlay","makePositionProps","usePosition","useProxiedModel","makeTransitionProps","genOverlays","makeVariantProps","useVariant","onMounted","watch","defineComponent","useRender","makeRoundedProps","useRounded","VSnackbar","name","props","app","Boolean","centered","contentClass","type","String","default","multiLine","timeout","Number","vertical","modelValue","transition","emits","v","setup","slots","isActive","positionClasses","positionStyles","colorClasses","colorStyles","variantClasses","roundedClasses","startTimeout","value","activeTimeout","window","clearTimeout","setTimeout","onPointerenter","bottom","top","right","left","actions","VBtn","variant","ripple","activator"],"mappings":"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","sourcesContent":["// Styles\nimport './VSnackbar.sass'\n\n// Components\nimport { VDefaultsProvider } from '@/components/VDefaultsProvider'\nimport { VOverlay } from '@/components/VOverlay'\n\n// Composables\nimport { makePositionProps, usePosition } from '@/composables/position'\nimport { useProxiedModel } from '@/composables/proxiedModel'\nimport { makeTransitionProps } from '@/composables/transition'\nimport { genOverlays, makeVariantProps, useVariant } from '@/composables/variant'\n\n// Utilities\nimport { onMounted, watch } from 'vue'\nimport { defineComponent, useRender } from '@/util'\nimport { makeRoundedProps, useRounded } from '@/composables/rounded'\n\nexport const VSnackbar = defineComponent({\n  name: 'VSnackbar',\n\n  props: {\n    app: Boolean,\n    centered: Boolean,\n    contentClass: {\n      type: String,\n      default: '',\n    },\n    multiLine: Boolean,\n    timeout: {\n      type: [Number, String],\n      default: 5000,\n    },\n    vertical: Boolean,\n\n    modelValue: Boolean,\n\n    ...makePositionProps(),\n    ...makeRoundedProps(),\n    ...makeVariantProps(),\n    ...makeTransitionProps({ transition: 'v-snackbar-transition' }),\n  },\n\n  emits: {\n    'update:modelValue': (v: boolean) => true,\n  },\n\n  setup (props, { slots }) {\n    const isActive = useProxiedModel(props, 'modelValue')\n    const { positionClasses, positionStyles } = usePosition(props)\n\n    const { colorClasses, colorStyles, variantClasses } = useVariant(props)\n    const { roundedClasses } = useRounded(props)\n\n    watch(isActive, startTimeout)\n    watch(() => props.timeout, startTimeout)\n\n    onMounted(() => {\n      if (isActive.value) startTimeout()\n    })\n\n    let activeTimeout = -1\n    function startTimeout () {\n      window.clearTimeout(activeTimeout)\n      const timeout = Number(props.timeout)\n\n      if (!isActive.value || timeout === -1) return\n\n      activeTimeout = window.setTimeout(() => {\n        isActive.value = false\n      }, timeout)\n    }\n\n    function onPointerenter () {\n      window.clearTimeout(activeTimeout)\n    }\n\n    useRender(() => (\n      <VOverlay\n        v-model={ isActive.value }\n        class={[\n          'v-snackbar',\n          {\n            'v-snackbar--active': isActive.value,\n            'v-snackbar--bottom': props.bottom || !props.top,\n            'v-snackbar--centered': props.centered,\n            'v-snackbar--end': props.right,\n            'v-snackbar--multi-line': props.multiLine && !props.vertical,\n            'v-snackbar--start': props.left,\n            'v-snackbar--top': props.top,\n            'v-snackbar--vertical': props.vertical,\n          },\n          positionClasses.value,\n        ]}\n        style={[\n          colorStyles.value,\n          positionStyles.value,\n        ]}\n        persistent\n        noClickAnimation\n        scrim={ false }\n        scrollStrategy=\"none\"\n        transition={ props.transition }\n        v-slots={{ activator: slots.activator }}\n      >\n        <div\n          class={[\n            'v-snackbar__wrapper',\n            colorClasses.value,\n            roundedClasses.value,\n            variantClasses.value,\n          ]}\n          onPointerenter={ onPointerenter }\n          onPointerleave={ startTimeout }\n        >\n          { genOverlays(false, 'v-snackbar') }\n\n          { slots.default && (\n            <div\n              class={[\n                'v-snackbar__content',\n                props.contentClass,\n              ]}\n              role=\"status\"\n              aria-live=\"polite\"\n            >\n              { slots.default?.() }\n            </div>\n          ) }\n\n          { slots.actions && (\n            <VDefaultsProvider\n              defaults={{\n                VBtn: {\n                  variant: 'text',\n                  ripple: false,\n                },\n              }}\n            >\n              <div class=\"v-snackbar__actions\">\n                { slots.actions?.() }\n              </div>\n            </VDefaultsProvider>\n          ) }\n        </div>\n      </VOverlay>\n    ))\n  },\n})\n\nexport type VSnackbar = InstanceType<typeof VSnackbar>\n"],"file":"VSnackbar.mjs"}