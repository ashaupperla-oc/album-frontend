{"version":3,"sources":["../../../src/components/VTextarea/VTextarea.tsx"],"names":["filterFieldProps","makeVFieldProps","filterInputProps","makeVInputProps","VInput","VCounter","VField","useForwardRef","useProxiedModel","Intersect","computed","nextTick","onBeforeUnmount","onMounted","ref","watch","convertToUnit","defineComponent","filterInputAttrs","useRender","VTextarea","name","directives","inheritAttrs","props","autoGrow","Boolean","autofocus","counter","Number","String","counterValue","Function","hint","persistentHint","prefix","placeholder","persistentPlaceholder","persistentCounter","noResize","rows","type","default","validator","v","isNaN","parseFloat","maxRows","suffix","emits","e","val","setup","attrs","emit","slots","model","value","toString","length","max","maxlength","undefined","onIntersect","isIntersecting","entries","target","focus","vInputRef","vFieldRef","isFocused","controlHeight","textareaRef","isActive","messages","onFocus","document","activeElement","onControlClick","onClear","stopPropagation","sizerRef","calculateInputHeight","style","getComputedStyle","padding","getPropertyValue","height","scrollHeight","lineHeight","minHeight","maxHeight","Infinity","Math","min","observer","ResizeObserver","observe","disconnect","hasCounter","rootAttrs","inputAttrs","modelValue","_","inputProps","fieldProps","isDisabled","isDirty","isReadonly","isValid","dirty","class","fieldClass","slotProps","handler","details"],"mappings":"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","sourcesContent":["// Styles\nimport './VTextarea.sass'\n\n// Components\nimport { filterFieldProps, makeVFieldProps } from '@/components/VField/VField'\nimport { filterInputProps, makeVInputProps, VInput } from '@/components/VInput/VInput'\nimport { VCounter } from '@/components/VCounter'\nimport { VField } from '@/components/VField'\n\n// Composables\nimport { useForwardRef } from '@/composables/forwardRef'\nimport { useProxiedModel } from '@/composables/proxiedModel'\n\n// Directives\nimport Intersect from '@/directives/intersect'\n\n// Utilities\nimport { computed, nextTick, onBeforeUnmount, onMounted, ref, watch } from 'vue'\nimport { convertToUnit, defineComponent, filterInputAttrs, useRender } from '@/util'\n\n// Types\nimport type { PropType } from 'vue'\n\nexport const VTextarea = defineComponent({\n  name: 'VTextarea',\n\n  directives: { Intersect },\n\n  inheritAttrs: false,\n\n  props: {\n    autoGrow: Boolean,\n    autofocus: Boolean,\n    counter: [Boolean, Number, String] as PropType<true | number | string>,\n    counterValue: Function as PropType<(value: any) => number>,\n    hint: String,\n    persistentHint: Boolean,\n    prefix: String,\n    placeholder: String,\n    persistentPlaceholder: Boolean,\n    persistentCounter: Boolean,\n    noResize: Boolean,\n    rows: {\n      type: [Number, String],\n      default: 5,\n      validator: (v: any) => !isNaN(parseFloat(v)),\n    },\n    maxRows: {\n      type: [Number, String],\n      validator: (v: any) => !isNaN(parseFloat(v)),\n    },\n    suffix: String,\n\n    ...makeVInputProps(),\n    ...makeVFieldProps(),\n  },\n\n  emits: {\n    'click:clear': (e: MouseEvent) => true,\n    'click:control': (e: MouseEvent) => true,\n    'update:modelValue': (val: string) => true,\n  },\n\n  setup (props, { attrs, emit, slots }) {\n    const model = useProxiedModel(props, 'modelValue')\n    const counterValue = computed(() => {\n      return typeof props.counterValue === 'function'\n        ? props.counterValue(model.value)\n        : (model.value || '').toString().length\n    })\n    const max = computed(() => {\n      if (attrs.maxlength) return attrs.maxlength as undefined\n\n      if (\n        !props.counter ||\n        (typeof props.counter !== 'number' &&\n        typeof props.counter !== 'string')\n      ) return undefined\n\n      return props.counter\n    })\n\n    function onIntersect (\n      isIntersecting: boolean,\n      entries: IntersectionObserverEntry[]\n    ) {\n      if (!props.autofocus || !isIntersecting) return\n\n      (entries[0].target as HTMLInputElement)?.focus?.()\n    }\n\n    const vInputRef = ref<VInput>()\n    const vFieldRef = ref<VInput>()\n    const isFocused = ref(false)\n    const controlHeight = ref('auto')\n    const textareaRef = ref<HTMLInputElement>()\n    const isActive = computed(() => (\n      isFocused.value ||\n      props.persistentPlaceholder\n    ))\n\n    const messages = computed(() => {\n      return props.messages.length\n        ? props.messages\n        : (isActive.value || props.persistentHint) ? props.hint : ''\n    })\n\n    function onFocus () {\n      if (textareaRef.value !== document.activeElement) {\n        textareaRef.value?.focus()\n      }\n\n      if (!isFocused.value) isFocused.value = true\n    }\n    function onControlClick (e: MouseEvent) {\n      onFocus()\n\n      emit('click:control', e)\n    }\n    function onClear (e: MouseEvent) {\n      e.stopPropagation()\n\n      onFocus()\n\n      nextTick(() => {\n        model.value = ''\n\n        emit('click:clear', e)\n      })\n    }\n\n    const sizerRef = ref<HTMLTextAreaElement>()\n    function calculateInputHeight () {\n      if (!props.autoGrow) return\n\n      nextTick(() => {\n        if (!sizerRef.value) return\n\n        const style = getComputedStyle(sizerRef.value)\n\n        const padding = parseFloat(style.getPropertyValue('--v-field-padding-top')) +\n        parseFloat(style.getPropertyValue('--v-field-padding-bottom'))\n\n        const height = sizerRef.value.scrollHeight\n        const lineHeight = parseFloat(style.lineHeight)\n        const minHeight = parseFloat(props.rows) * lineHeight + padding\n        const maxHeight = parseFloat(props.maxRows!) * lineHeight + padding || Infinity\n\n        controlHeight.value = convertToUnit(Math.min(maxHeight, Math.max(minHeight, height ?? 0)))\n      })\n    }\n\n    onMounted(calculateInputHeight)\n    watch(model, calculateInputHeight)\n    watch(() => props.rows, calculateInputHeight)\n    watch(() => props.maxRows, calculateInputHeight)\n\n    let observer: ResizeObserver | undefined\n    watch(sizerRef, val => {\n      if (val) {\n        observer = new ResizeObserver(calculateInputHeight)\n        observer.observe(sizerRef.value!)\n      } else {\n        observer?.disconnect()\n      }\n    })\n    onBeforeUnmount(() => {\n      observer?.disconnect()\n    })\n\n    useRender(() => {\n      const hasCounter = !!(slots.counter || props.counter || props.counterValue)\n      const [rootAttrs, inputAttrs] = filterInputAttrs(attrs)\n      const [{ modelValue: _, ...inputProps }] = filterInputProps(props)\n      const [fieldProps] = filterFieldProps(props)\n\n      return (\n        <VInput\n          v-model={ model.value }\n          class={[\n            'v-textarea',\n            {\n              'v-textarea--prefixed': props.prefix,\n              'v-textarea--suffixed': props.suffix,\n              'v-textarea--auto-grow': props.autoGrow,\n              'v-textarea--no-resize': props.noResize || props.autoGrow,\n            },\n          ]}\n          { ...rootAttrs }\n          { ...inputProps }\n          messages={ messages.value }\n        >\n          {{\n            ...slots,\n            default: ({\n              isDisabled,\n              isDirty,\n              isReadonly,\n              isValid,\n            }) => (\n              <VField\n                style={{\n                  '--v-input-control-height': controlHeight.value,\n                }}\n                onClick:control={ onControlClick }\n                onClick:clear={ onClear }\n                role=\"textbox\"\n                { ...fieldProps }\n                active={ isActive.value || isDirty.value }\n                dirty={ isDirty.value || props.dirty }\n                focused={ isFocused.value }\n                error={ isValid.value === false }\n              >\n                {{\n                  ...slots,\n                  default: ({\n                    props: { class: fieldClass, ...slotProps },\n                  }) => (\n                    <>\n                      { props.prefix && (\n                        <span class=\"v-text-field__prefix\">\n                          { props.prefix }\n                        </span>\n                      ) }\n\n                      <textarea\n                        ref={ textareaRef }\n                        class={ fieldClass }\n                        v-model={ model.value }\n                        v-intersect={[{\n                          handler: onIntersect,\n                        }, null, ['once']]}\n                        autofocus={ props.autofocus }\n                        readonly={ isReadonly.value }\n                        disabled={ isDisabled.value }\n                        placeholder={ props.placeholder }\n                        rows={ props.rows }\n                        name={ props.name }\n                        onFocus={ onFocus }\n                        onBlur={ () => (isFocused.value = false) }\n                        { ...slotProps }\n                        { ...inputAttrs }\n                      />\n\n                      { props.autoGrow && (\n                        <textarea\n                          class={[\n                            fieldClass,\n                            'v-textarea__sizer',\n                          ]}\n                          v-model={ model.value }\n                          ref={ sizerRef }\n                          readonly\n                          aria-hidden=\"true\"\n                        />\n                      )}\n\n                      { props.suffix && (\n                        <span class=\"v-text-field__suffix\">\n                          { props.suffix }\n                        </span>\n                      ) }\n                    </>\n                  ),\n                }}\n              </VField>\n            ),\n            details: hasCounter ? () => (\n              <>\n                <span />\n\n                <VCounter\n                  active={ props.persistentCounter || isFocused.value }\n                  value={ counterValue.value }\n                  max={ max.value }\n                  v-slots={ slots.counter }\n                />\n              </>\n            ) : undefined,\n          }}\n        </VInput>\n      )\n    })\n\n    return useForwardRef({}, vInputRef, vFieldRef, textareaRef)\n  },\n})\n\nexport type VTextarea = InstanceType<typeof VTextarea>\n"],"file":"VTextarea.mjs"}