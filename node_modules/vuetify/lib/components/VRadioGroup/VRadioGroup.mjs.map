{"version":3,"sources":["../../../src/components/VRadioGroup/VRadioGroup.tsx"],"names":["filterInputProps","makeVInputProps","VInput","VLabel","VSelectionControlGroup","filterControlProps","makeSelectionControlProps","computed","defineComponent","filterInputAttrs","getUid","useRender","VRadioGroup","name","inheritAttrs","props","height","type","Number","String","default","trueIcon","falseIcon","setup","attrs","slots","uid","id","inputAttrs","controlAttrs","inputProps","_1","controlProps","_2","label","for","value","isDisabled","isReadonly"],"mappings":";AAAA;AACA,2B,CAEA;;SACSA,gB,EAAkBC,e,EAAiBC,M;SACnCC,M;SACAC,sB;SACAC,kB,EAAoBC,yB,sDAE7B;;AACA,SAASC,QAAT,QAAyB,KAAzB;SACSC,e,EAAiBC,gB,EAAkBC,M,EAAQC,S;AAEpD,OAAO,MAAMC,WAAW,GAAGJ,eAAe,CAAC;AACzCK,EAAAA,IAAI,EAAE,aADmC;AAGzCC,EAAAA,YAAY,EAAE,KAH2B;AAKzCC,EAAAA,KAAK,EAAE;AACLC,IAAAA,MAAM,EAAE;AACNC,MAAAA,IAAI,EAAE,CAACC,MAAD,EAASC,MAAT,CADA;AAENC,MAAAA,OAAO,EAAE;AAFH,KADH;AAML,OAAGnB,eAAe,EANb;AAOL,OAAGK,yBAAyB,EAPvB;AASLe,IAAAA,QAAQ,EAAE;AACRJ,MAAAA,IAAI,EAAEE,MADE;AAERC,MAAAA,OAAO,EAAE;AAFD,KATL;AAaLE,IAAAA,SAAS,EAAE;AACTL,MAAAA,IAAI,EAAEE,MADG;AAETC,MAAAA,OAAO,EAAE;AAFA,KAbN;AAiBLH,IAAAA,IAAI,EAAE;AACJA,MAAAA,IAAI,EAAEE,MADF;AAEJC,MAAAA,OAAO,EAAE;AAFL;AAjBD,GALkC;;AA4BzCG,EAAAA,KAAK,CAAER,KAAF,QAA2B;AAAA,QAAlB;AAAES,MAAAA,KAAF;AAASC,MAAAA;AAAT,KAAkB;AAC9B,UAAMC,GAAG,GAAGhB,MAAM,EAAlB;AACA,UAAMiB,EAAE,GAAGpB,QAAQ,CAAC,MAAMQ,KAAK,CAACY,EAAN,IAAa,eAAcD,GAAI,EAAtC,CAAnB;AAEAf,IAAAA,SAAS,CAAC,MAAM;AACd,YAAM,CAACiB,UAAD,EAAaC,YAAb,IAA6BpB,gBAAgB,CAACe,KAAD,CAAnD;AACA,YAAM,CAACM,UAAD,EAAaC,EAAb,IAAmB/B,gBAAgB,CAACe,KAAD,CAAzC;AACA,YAAM,CAACiB,YAAD,EAAeC,EAAf,IAAqB5B,kBAAkB,CAACU,KAAD,CAA7C;AACA,YAAMmB,KAAK,GAAGT,KAAK,CAACS,KAAN,GACVT,KAAK,CAACS,KAAN,CAAY;AACZA,QAAAA,KAAK,EAAEnB,KAAK,CAACmB,KADD;AAEZnB,QAAAA,KAAK,EAAE;AAAEoB,UAAAA,GAAG,EAAER,EAAE,CAACS;AAAV;AAFK,OAAZ,CADU,GAKVrB,KAAK,CAACmB,KALV;AAOA;AAAA,iBAEU;AAFV,SAGSN,UAHT,EAISE,UAJT,KAOM,GAAGL,KAPT;AAQML,QAAAA,OAAO,EAAE;AAAA,cAAC;AACRiB,YAAAA,UADQ;AAERC,YAAAA;AAFQ,WAAD;AAAA,gDAKHJ,KAAK;AAAA,mBACSP,EAAE,CAACS;AADZ;AAAA,4BAEDF,KAFC;AAAA,YALF,mDAYEF,YAZF;AAAA,kBAaEL,EAAE,CAACS,KAbL;AAAA,wBAcQrB,KAAK,CAACM,QAdd;AAAA,yBAeSN,KAAK,CAACO,SAff;AAAA,oBAgBIP,KAAK,CAACE,IAhBV;AAAA,wBAiBQoB,UAAU,CAACD,KAjBnB;AAAA,wBAkBQE,UAAU,CAACF;AAlBnB,aAmBEP,YAnBF,GAoBOJ,KApBP;AAAA;AARf;AAmCD,KA9CQ,CAAT;AAgDA,WAAO,EAAP;AACD;;AAjFwC,CAAD,CAAnC","sourcesContent":["// Styles\nimport './VRadioGroup.sass'\n\n// Components\nimport { filterInputProps, makeVInputProps, VInput } from '@/components/VInput/VInput'\nimport { VLabel } from '@/components/VLabel'\nimport { VSelectionControlGroup } from '@/components/VSelectionControlGroup'\nimport { filterControlProps, makeSelectionControlProps } from '@/components/VSelectionControl/VSelectionControl'\n\n// Utility\nimport { computed } from 'vue'\nimport { defineComponent, filterInputAttrs, getUid, useRender } from '@/util'\n\nexport const VRadioGroup = defineComponent({\n  name: 'VRadioGroup',\n\n  inheritAttrs: false,\n\n  props: {\n    height: {\n      type: [Number, String],\n      default: 'auto',\n    },\n\n    ...makeVInputProps(),\n    ...makeSelectionControlProps(),\n\n    trueIcon: {\n      type: String,\n      default: '$radioOn',\n    },\n    falseIcon: {\n      type: String,\n      default: '$radioOff',\n    },\n    type: {\n      type: String,\n      default: 'radio',\n    },\n  },\n\n  setup (props, { attrs, slots }) {\n    const uid = getUid()\n    const id = computed(() => props.id || `radio-group-${uid}`)\n\n    useRender(() => {\n      const [inputAttrs, controlAttrs] = filterInputAttrs(attrs)\n      const [inputProps, _1] = filterInputProps(props)\n      const [controlProps, _2] = filterControlProps(props)\n      const label = slots.label\n        ? slots.label({\n          label: props.label,\n          props: { for: id.value },\n        })\n        : props.label\n\n      return (\n        <VInput\n          class=\"v-radio-group\"\n          { ...inputAttrs }\n          { ...inputProps }\n        >\n          {{\n            ...slots,\n            default: ({\n              isDisabled,\n              isReadonly,\n            }) => (\n              <>\n                { label && (\n                  <VLabel for={ id.value }>\n                    { label }\n                  </VLabel>\n                ) }\n\n                <VSelectionControlGroup\n                  { ...controlProps }\n                  id={ id.value }\n                  trueIcon={ props.trueIcon }\n                  falseIcon={ props.falseIcon }\n                  type={ props.type }\n                  disabled={ isDisabled.value }\n                  readonly={ isReadonly.value }\n                  { ...controlAttrs }\n                  v-slots={ slots }\n                />\n              </>\n            ),\n          }}\n        </VInput>\n      )\n    })\n\n    return {}\n  },\n})\n"],"file":"VRadioGroup.mjs"}