{"version":3,"sources":["../../../src/components/VSystemBar/VSystemBar.tsx"],"names":["makeElevationProps","useElevation","makeLayoutItemProps","useLayoutItem","makeRoundedProps","useRounded","makeTagProps","makeThemeProps","provideTheme","provideDefaults","useBackgroundColor","computed","ref","toRef","defineComponent","VSystemBar","name","props","color","String","height","Number","window","Boolean","setup","slots","themeClasses","backgroundColorClasses","backgroundColorStyles","elevationClasses","roundedClasses","layoutItemStyles","id","priority","parseInt","position","layoutSize","elementSize","active","absolute","VBtn","variant","density","scoped","value"],"mappings":";AAAA;AACA,0B,CAEA;;SACSA,kB,EAAoBC,Y;SACpBC,mB,EAAqBC,a;SACrBC,gB,EAAkBC,U;SAClBC,Y;SACAC,c,EAAgBC,Y;SAChBC,e;SACAC,kB,uCAET;;AACA,SAASC,QAAT,EAAmBC,GAAnB,EAAwBC,KAAxB,QAAqC,KAArC;SACSC,e;AAET,OAAO,MAAMC,UAAU,GAAGD,eAAe,CAAC;AACxCE,EAAAA,IAAI,EAAE,YADkC;AAGxCC,EAAAA,KAAK,EAAE;AACLC,IAAAA,KAAK,EAAEC,MADF;AAELC,IAAAA,MAAM,EAAE,CAACC,MAAD,EAASF,MAAT,CAFH;AAGLG,IAAAA,MAAM,EAAEC,OAHH;AAKL,OAAGvB,kBAAkB,EALhB;AAML,OAAGE,mBAAmB,EANjB;AAOL,OAAGE,gBAAgB,EAPd;AAQL,OAAGE,YAAY,EARV;AASL,OAAGC,cAAc;AATZ,GAHiC;;AAexCiB,EAAAA,KAAK,CAAEP,KAAF,QAAoB;AAAA,QAAX;AAAEQ,MAAAA;AAAF,KAAW;AACvB,UAAM;AAAEC,MAAAA;AAAF,QAAmBlB,YAAY,CAACS,KAAD,CAArC;AACA,UAAM;AAAEU,MAAAA,sBAAF;AAA0BC,MAAAA;AAA1B,QAAoDlB,kBAAkB,CAACG,KAAK,CAACI,KAAD,EAAQ,OAAR,CAAN,CAA5E;AACA,UAAM;AAAEY,MAAAA;AAAF,QAAuB5B,YAAY,CAACgB,KAAD,CAAzC;AACA,UAAM;AAAEa,MAAAA;AAAF,QAAqBzB,UAAU,CAACY,KAAD,CAArC;AACA,UAAMG,MAAM,GAAGT,QAAQ,CAAC;AAAA;;AAAA,aAAM,kBAAAM,KAAK,CAACG,MAAN,4BAAgBH,KAAK,CAACK,MAAtB,IAA+B,EAA/B,GAAoC,EAA1C;AAAA,KAAD,CAAvB;AACA,UAAM;AAAES,MAAAA;AAAF,QAAuB5B,aAAa,CAAC;AACzC6B,MAAAA,EAAE,EAAEf,KAAK,CAACD,IAD+B;AAEzCiB,MAAAA,QAAQ,EAAEtB,QAAQ,CAAC,MAAMuB,QAAQ,CAACjB,KAAK,CAACgB,QAAP,EAAiB,EAAjB,CAAf,CAFuB;AAGzCE,MAAAA,QAAQ,EAAEvB,GAAG,CAAC,KAAD,CAH4B;AAIzCwB,MAAAA,UAAU,EAAEhB,MAJ6B;AAKzCiB,MAAAA,WAAW,EAAEjB,MAL4B;AAMzCkB,MAAAA,MAAM,EAAE3B,QAAQ,CAAC,MAAM,IAAP,CANyB;AAOzC4B,MAAAA,QAAQ,EAAE1B,KAAK,CAACI,KAAD,EAAQ,UAAR;AAP0B,KAAD,CAA1C;AAUAR,IAAAA,eAAe,CAAC;AACd+B,MAAAA,IAAI,EAAE;AACJC,QAAAA,OAAO,EAAE,MADL;AAEJC,QAAAA,OAAO,EAAE;AAFL;AADQ,KAAD,EAKZ;AAAEC,MAAAA,MAAM,EAAE;AAAV,KALY,CAAf;AAOA,WAAO;AAAA,eAEI,CACL,cADK,EAEL;AAAE,gCAAwB1B,KAAK,CAACK;AAAhC,OAFK,EAGLI,YAAY,CAACkB,KAHR,EAILjB,sBAAsB,CAACiB,KAJlB,EAKLf,gBAAgB,CAACe,KALZ,EAMLd,cAAc,CAACc,KANV,CAFJ;AAAA,eAUI,CACLhB,qBAAqB,CAACgB,KADjB,EAELb,gBAAgB,CAACa,KAFZ;AAVJ,OAcOnB,KAdP,CAAP;AAiBD;;AAvDuC,CAAD,CAAlC","sourcesContent":["// Styles\nimport './VSystemBar.sass'\n\n// Composables\nimport { makeElevationProps, useElevation } from '@/composables/elevation'\nimport { makeLayoutItemProps, useLayoutItem } from '@/composables/layout'\nimport { makeRoundedProps, useRounded } from '@/composables/rounded'\nimport { makeTagProps } from '@/composables/tag'\nimport { makeThemeProps, provideTheme } from '@/composables/theme'\nimport { provideDefaults } from '@/composables/defaults'\nimport { useBackgroundColor } from '@/composables/color'\n\n// Utilities\nimport { computed, ref, toRef } from 'vue'\nimport { defineComponent } from '@/util'\n\nexport const VSystemBar = defineComponent({\n  name: 'VSystemBar',\n\n  props: {\n    color: String,\n    height: [Number, String],\n    window: Boolean,\n\n    ...makeElevationProps(),\n    ...makeLayoutItemProps(),\n    ...makeRoundedProps(),\n    ...makeTagProps(),\n    ...makeThemeProps(),\n  },\n\n  setup (props, { slots }) {\n    const { themeClasses } = provideTheme(props)\n    const { backgroundColorClasses, backgroundColorStyles } = useBackgroundColor(toRef(props, 'color'))\n    const { elevationClasses } = useElevation(props)\n    const { roundedClasses } = useRounded(props)\n    const height = computed(() => props.height ?? props.window ? 32 : 24)\n    const { layoutItemStyles } = useLayoutItem({\n      id: props.name,\n      priority: computed(() => parseInt(props.priority, 10)),\n      position: ref('top'),\n      layoutSize: height,\n      elementSize: height,\n      active: computed(() => true),\n      absolute: toRef(props, 'absolute'),\n    })\n\n    provideDefaults({\n      VBtn: {\n        variant: 'text',\n        density: 'compact',\n      },\n    }, { scoped: true })\n\n    return () => (\n      <props.tag\n        class={[\n          'v-system-bar',\n          { 'v-system-bar--window': props.window },\n          themeClasses.value,\n          backgroundColorClasses.value,\n          elevationClasses.value,\n          roundedClasses.value,\n        ]}\n        style={[\n          backgroundColorStyles.value,\n          layoutItemStyles.value,\n        ]}\n        v-slots={ slots }\n      />\n    )\n  },\n})\n"],"file":"VSystemBar.mjs"}