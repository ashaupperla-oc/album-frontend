{"version":3,"sources":["../../../src/components/VProgressLinear/VProgressLinear.tsx"],"names":["makeRoundedProps","useRounded","makeTagProps","makeThemeProps","provideTheme","useBackgroundColor","useTextColor","useIntersectionObserver","useProxiedModel","useRtl","convertToUnit","defineComponent","computed","Transition","VProgressLinear","name","props","active","type","Boolean","default","bgColor","String","bgOpacity","Number","bufferValue","clickable","color","height","indeterminate","max","modelValue","reverse","stream","striped","roundedBar","emits","value","setup","slots","progress","isRtl","themeClasses","textColorClasses","textColorStyles","backgroundColorClasses","backgroundColorStyles","barColorClasses","barColorStyles","roundedClasses","intersectionRef","isIntersecting","parseInt","normalizedBuffer","parseFloat","normalizedValue","isReversed","transition","opacity","handleClick","e","left","right","width","getBoundingClientRect","clientX","Math","round","rounded","undefined","borderTop","top","map","bar","buffer"],"mappings":"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","sourcesContent":["// Styles\nimport './VProgressLinear.sass'\n\n// Composables\nimport { makeRoundedProps, useRounded } from '@/composables/rounded'\nimport { makeTagProps } from '@/composables/tag'\nimport { makeThemeProps, provideTheme } from '@/composables/theme'\nimport { useBackgroundColor, useTextColor } from '@/composables/color'\nimport { useIntersectionObserver } from '@/composables/intersectionObserver'\nimport { useProxiedModel } from '@/composables/proxiedModel'\nimport { useRtl } from '@/composables/rtl'\n\n// Utilities\nimport { convertToUnit, defineComponent } from '@/util'\nimport { computed, Transition } from 'vue'\n\nexport const VProgressLinear = defineComponent({\n  name: 'VProgressLinear',\n\n  props: {\n    active: {\n      type: Boolean,\n      default: true,\n    },\n    bgColor: String,\n    bgOpacity: [Number, String],\n    bufferValue: {\n      type: [Number, String],\n      default: 0,\n    },\n    clickable: Boolean,\n    color: String,\n    height: {\n      type: [Number, String],\n      default: 4,\n    },\n    indeterminate: Boolean,\n    max: {\n      type: [Number, String],\n      default: 100,\n    },\n    modelValue: {\n      type: [Number, String],\n      default: 0,\n    },\n    reverse: Boolean,\n    stream: Boolean,\n    striped: Boolean,\n    roundedBar: Boolean,\n\n    ...makeRoundedProps(),\n    ...makeTagProps(),\n    ...makeThemeProps(),\n  },\n\n  emits: {\n    'update:modelValue': (value: number) => true,\n  },\n\n  setup (props, { slots }) {\n    const progress = useProxiedModel(props, 'modelValue')\n    const { isRtl } = useRtl()\n    const { themeClasses } = provideTheme(props)\n    const { textColorClasses, textColorStyles } = useTextColor(props, 'color')\n    const { backgroundColorClasses, backgroundColorStyles } = useBackgroundColor(computed(() => props.bgColor || props.color))\n    const { backgroundColorClasses: barColorClasses, backgroundColorStyles: barColorStyles } = useBackgroundColor(props, 'color')\n    const { roundedClasses } = useRounded(props)\n    const { intersectionRef, isIntersecting } = useIntersectionObserver()\n\n    const max = computed(() => parseInt(props.max, 10))\n    const height = computed(() => parseInt(props.height, 10))\n    const normalizedBuffer = computed(() => parseFloat(props.bufferValue) / max.value * 100)\n    const normalizedValue = computed(() => parseFloat(progress.value) / max.value * 100)\n    const isReversed = computed(() => isRtl.value !== props.reverse)\n    const transition = computed(() => props.indeterminate ? 'fade-transition' : 'slide-x-transition')\n    const opacity = computed(() => {\n      return props.bgOpacity == null\n        ? props.bgOpacity\n        : parseFloat(props.bgOpacity)\n    })\n\n    function handleClick (e: MouseEvent) {\n      if (!intersectionRef.value) return\n\n      const { left, right, width } = intersectionRef.value.getBoundingClientRect()\n      const value = isReversed.value ? (width - e.clientX) + (right - width) : e.clientX - left\n\n      progress.value = Math.round(value / width * max.value)\n    }\n\n    return () => (\n      <props.tag\n        ref={ intersectionRef }\n        class={[\n          'v-progress-linear',\n          {\n            'v-progress-linear--active': props.active && isIntersecting.value,\n            'v-progress-linear--reverse': isReversed.value,\n            'v-progress-linear--rounded': props.rounded,\n            'v-progress-linear--rounded-bar': props.roundedBar,\n            'v-progress-linear--striped': props.striped,\n          },\n          roundedClasses.value,\n          themeClasses.value,\n        ]}\n        style={{\n          height: props.active ? convertToUnit(height.value) : 0,\n          '--v-progress-linear-height': convertToUnit(height.value),\n        }}\n        role=\"progressbar\"\n        aria-valuemin=\"0\"\n        aria-valuemax={ props.max }\n        aria-valuenow={ props.indeterminate ? undefined : normalizedValue.value }\n        onClick={ props.clickable && handleClick }\n      >\n        { props.stream && (\n          <div\n            class={[\n              'v-progress-linear__stream',\n              textColorClasses.value,\n            ]}\n            style={{\n              ...textColorStyles.value,\n              [isReversed.value ? 'left' : 'right']: convertToUnit(-height.value),\n              borderTop: `${convertToUnit(height.value / 2)} dotted`,\n              opacity: opacity.value,\n              top: `calc(50% - ${convertToUnit(height.value / 4)})`,\n              width: convertToUnit(100 - normalizedBuffer.value, '%'),\n              '--v-progress-linear-stream-to': convertToUnit(height.value * (isReversed.value ? 1 : -1)),\n            }}\n          />\n        ) }\n\n        <div\n          class={[\n            'v-progress-linear__background',\n            backgroundColorClasses.value,\n          ]}\n          style={[\n            backgroundColorStyles.value,\n            {\n              opacity: opacity.value,\n              width: convertToUnit((!props.stream ? 100 : normalizedBuffer.value), '%'),\n            },\n          ]}\n        />\n\n        <Transition name={ transition.value }>\n          { !props.indeterminate ? (\n            <div\n              class={[\n                'v-progress-linear__determinate',\n                barColorClasses.value,\n              ]}\n              style={[\n                barColorStyles.value,\n                { width: convertToUnit(normalizedValue.value, '%') },\n              ]}\n            />\n          ) : (\n            <div class=\"v-progress-linear__indeterminate\">\n              { ['long', 'short'].map(bar => (\n                <div\n                  key={ bar }\n                  class={[\n                    'v-progress-linear__indeterminate',\n                    bar,\n                    barColorClasses.value,\n                  ]}\n                  style={ barColorStyles.value }\n                />\n              )) }\n            </div>\n          ) }\n        </Transition>\n\n        { slots.default && (\n          <div class=\"v-progress-linear__content\">\n            { slots.default({ value: normalizedValue.value, buffer: normalizedBuffer.value }) }\n          </div>\n        ) }\n      </props.tag>\n    )\n  },\n})\n"],"file":"VProgressLinear.mjs"}