{"version":3,"sources":["../../../src/components/VCheckbox/VCheckbox.tsx"],"names":["filterInputProps","makeVInputProps","VInput","filterControlProps","makeSelectionControlProps","VSelectionControl","useProxiedModel","computed","defineComponent","filterInputAttrs","useRender","VCheckbox","name","inheritAttrs","props","indeterminate","Boolean","indeterminateIcon","type","String","default","falseIcon","trueIcon","emits","val","setup","attrs","slots","value","onChange","inputAttrs","controlAttrs","inputProps","_1","controlProps","_2","isDisabled","isReadonly","undefined"],"mappings":";AAAA;AACA,yB,CAEA;;SACSA,gB,EAAkBC,e,EAAiBC,M;SACnCC,kB,EAAoBC,yB,EAA2BC,iB,sDAExD;;SACSC,e,8CAET;;AACA,SAASC,QAAT,QAAyB,KAAzB;SACSC,e,EAAiBC,gB,EAAkBC,S;AAE5C,OAAO,MAAMC,SAAS,GAAGH,eAAe,CAAC;AACvCI,EAAAA,IAAI,EAAE,WADiC;AAGvCC,EAAAA,YAAY,EAAE,KAHyB;AAKvCC,EAAAA,KAAK,EAAE;AACLC,IAAAA,aAAa,EAAEC,OADV;AAELC,IAAAA,iBAAiB,EAAE;AACjBC,MAAAA,IAAI,EAAEC,MADW;AAEjBC,MAAAA,OAAO,EAAE;AAFQ,KAFd;AAOL,OAAGnB,eAAe,EAPb;AAQL,OAAGG,yBAAyB,EARvB;AAULiB,IAAAA,SAAS,EAAE;AACTH,MAAAA,IAAI,EAAEC,MADG;AAETC,MAAAA,OAAO,EAAE;AAFA,KAVN;AAcLE,IAAAA,QAAQ,EAAE;AACRJ,MAAAA,IAAI,EAAEC,MADE;AAERC,MAAAA,OAAO,EAAE;AAFD;AAdL,GALgC;AAyBvCG,EAAAA,KAAK,EAAE;AACL,4BAAyBC,GAAD,IAAkB;AADrC,GAzBgC;;AA6BvCC,EAAAA,KAAK,CAAEX,KAAF,QAA2B;AAAA,QAAlB;AAAEY,MAAAA,KAAF;AAASC,MAAAA;AAAT,KAAkB;AAC9B,UAAMZ,aAAa,GAAGT,eAAe,CAACQ,KAAD,EAAQ,eAAR,CAArC;AACA,UAAMO,SAAS,GAAGd,QAAQ,CAAC,MAAM;AAC/B,aAAOQ,aAAa,CAACa,KAAd,GACHd,KAAK,CAACG,iBADH,GAEHH,KAAK,CAACO,SAFV;AAGD,KAJyB,CAA1B;AAKA,UAAMC,QAAQ,GAAGf,QAAQ,CAAC,MAAM;AAC9B,aAAOQ,aAAa,CAACa,KAAd,GACHd,KAAK,CAACG,iBADH,GAEHH,KAAK,CAACQ,QAFV;AAGD,KAJwB,CAAzB;;AAMA,aAASO,QAAT,GAAqB;AACnB,UAAId,aAAa,CAACa,KAAlB,EAAyB;AACvBb,QAAAA,aAAa,CAACa,KAAd,GAAsB,KAAtB;AACD;AACF;;AAEDlB,IAAAA,SAAS,CAAC,MAAM;AACd,YAAM,CAACoB,UAAD,EAAaC,YAAb,IAA6BtB,gBAAgB,CAACiB,KAAD,CAAnD;AACA,YAAM,CAACM,UAAD,EAAaC,EAAb,IAAmBjC,gBAAgB,CAACc,KAAD,CAAzC;AACA,YAAM,CAACoB,YAAD,EAAeC,EAAf,IAAqBhC,kBAAkB,CAACW,KAAD,CAA7C;AAEA;AAAA,iBAEU;AAFV,SAGSgB,UAHT,EAISE,UAJT,KAOM,GAAGL,KAPT;AAQMP,QAAAA,OAAO,EAAE;AAAA,cAAC;AACRgB,YAAAA,UADQ;AAERC,YAAAA;AAFQ,WAAD;AAAA,6DAKAH,YALA;AAAA,oBAMA,UANA;AAAA,mCAOiBL,QAPjB;AAAA,yBAQOR,SAAS,CAACO,KARjB;AAAA,wBASMN,QAAQ,CAACM,KATf;AAAA,4BAUUb,aAAa,CAACa,KAAd,GAAsB,OAAtB,GAAgCU,SAV1C;AAAA,wBAWMF,UAAU,CAACR,KAXjB;AAAA,wBAYMS,UAAU,CAACT;AAZjB,aAaAG,YAbA,GAcKJ,KAdL;AAAA;AARf;AA4BD,KAjCQ,CAAT;AAmCA,WAAO,EAAP;AACD;;AApFsC,CAAD,CAAjC","sourcesContent":["// Styles\nimport './VCheckbox.sass'\n\n// Components\nimport { filterInputProps, makeVInputProps, VInput } from '@/components/VInput/VInput'\nimport { filterControlProps, makeSelectionControlProps, VSelectionControl } from '@/components/VSelectionControl/VSelectionControl'\n\n// Composables\nimport { useProxiedModel } from '@/composables/proxiedModel'\n\n// Utility\nimport { computed } from 'vue'\nimport { defineComponent, filterInputAttrs, useRender } from '@/util'\n\nexport const VCheckbox = defineComponent({\n  name: 'VCheckbox',\n\n  inheritAttrs: false,\n\n  props: {\n    indeterminate: Boolean,\n    indeterminateIcon: {\n      type: String,\n      default: '$checkboxIndeterminate',\n    },\n\n    ...makeVInputProps(),\n    ...makeSelectionControlProps(),\n\n    falseIcon: {\n      type: String,\n      default: '$checkboxOff',\n    },\n    trueIcon: {\n      type: String,\n      default: '$checkboxOn',\n    },\n  },\n\n  emits: {\n    'update:indeterminate': (val: boolean) => true,\n  },\n\n  setup (props, { attrs, slots }) {\n    const indeterminate = useProxiedModel(props, 'indeterminate')\n    const falseIcon = computed(() => {\n      return indeterminate.value\n        ? props.indeterminateIcon\n        : props.falseIcon\n    })\n    const trueIcon = computed(() => {\n      return indeterminate.value\n        ? props.indeterminateIcon\n        : props.trueIcon\n    })\n\n    function onChange () {\n      if (indeterminate.value) {\n        indeterminate.value = false\n      }\n    }\n\n    useRender(() => {\n      const [inputAttrs, controlAttrs] = filterInputAttrs(attrs)\n      const [inputProps, _1] = filterInputProps(props)\n      const [controlProps, _2] = filterControlProps(props)\n\n      return (\n        <VInput\n          class=\"v-checkbox\"\n          { ...inputAttrs }\n          { ...inputProps }\n        >\n          {{\n            ...slots,\n            default: ({\n              isDisabled,\n              isReadonly,\n            }) => (\n              <VSelectionControl\n                { ...controlProps }\n                type=\"checkbox\"\n                onUpdate:modelValue={ onChange }\n                falseIcon={ falseIcon.value }\n                trueIcon={ trueIcon.value }\n                aria-checked={ indeterminate.value ? 'mixed' : undefined }\n                disabled={ isDisabled.value }\n                readonly={ isReadonly.value }\n                { ...controlAttrs }\n                v-slots={ slots }\n              />\n            ),\n          }}\n        </VInput>\n      )\n    })\n\n    return {}\n  },\n})\n\nexport type VCheckbox = InstanceType<typeof VCheckbox>\n"],"file":"VCheckbox.mjs"}