{"version":3,"sources":["../../../src/components/VSelectionControlGroup/VSelectionControlGroup.tsx"],"names":["useProxiedModel","computed","provide","toRef","defineComponent","getUid","useRender","VSelectionControlGroupSymbol","Symbol","for","VSelectionControlGroup","name","props","disabled","Boolean","id","String","inline","falseIcon","trueIcon","multiple","type","default","readonly","modelValue","emits","val","setup","slots","uid","value","Array","isArray","undefined"],"mappings":";AAAA;AACA,sC,CAEA;;SACSA,e,8CAET;;AACA,SAASC,QAAT,EAAmBC,OAAnB,EAA4BC,KAA5B,QAAyC,KAAzC;SACSC,e,EAAiBC,M,EAAQC,S,gCAElC;;AAeA,OAAO,MAAMC,4BAAkE,GAAGC,MAAM,CAACC,GAAP,CAAW,iCAAX,CAA3E;AAEP,OAAO,MAAMC,sBAAsB,GAAGN,eAAe,CAAC;AACpDO,EAAAA,IAAI,EAAE,wBAD8C;AAGpDC,EAAAA,KAAK,EAAE;AACLC,IAAAA,QAAQ,EAAEC,OADL;AAELC,IAAAA,EAAE,EAAEC,MAFC;AAGLC,IAAAA,MAAM,EAAEH,OAHH;AAILH,IAAAA,IAAI,EAAEK,MAJD;AAKLE,IAAAA,SAAS,EAAEF,MALN;AAMLG,IAAAA,QAAQ,EAAEH,MANL;AAOLI,IAAAA,QAAQ,EAAE;AACRC,MAAAA,IAAI,EAAEP,OADE;AAERQ,MAAAA,OAAO,EAAE;AAFD,KAPL;AAWLC,IAAAA,QAAQ,EAAET,OAXL;AAYLO,IAAAA,IAAI,EAAEL,MAZD;AAaLQ,IAAAA,UAAU,EAAE;AAbP,GAH6C;AAmBpDC,EAAAA,KAAK,EAAE;AACL,yBAAsBC,GAAD,IAAc;AAD9B,GAnB6C;;AAuBpDC,EAAAA,KAAK,CAAEf,KAAF,QAAoB;AAAA,QAAX;AAAEgB,MAAAA;AAAF,KAAW;AACvB,UAAMJ,UAAU,GAAGxB,eAAe,CAACY,KAAD,EAAQ,YAAR,CAAlC;AACA,UAAMiB,GAAG,GAAGxB,MAAM,EAAlB;AACA,UAAMU,EAAE,GAAGd,QAAQ,CAAC,MAAMW,KAAK,CAACG,EAAN,IAAa,6BAA4Bc,GAAI,EAApD,CAAnB;AACA,UAAMlB,IAAI,GAAGV,QAAQ,CAAC,MAAMW,KAAK,CAACD,IAAN,IAAcI,EAAE,CAACe,KAAxB,CAArB;AAEA5B,IAAAA,OAAO,CAACK,4BAAD,EAA+B;AACpCM,MAAAA,QAAQ,EAAEV,KAAK,CAACS,KAAD,EAAQ,UAAR,CADqB;AAEpCK,MAAAA,MAAM,EAAEd,KAAK,CAACS,KAAD,EAAQ,QAAR,CAFuB;AAGpCY,MAAAA,UAHoC;AAIpCJ,MAAAA,QAAQ,EAAEnB,QAAQ,CAAC,MAAM,CAAC,CAACW,KAAK,CAACQ,QAAR,IAAqBR,KAAK,CAACQ,QAAN,IAAkB,IAAlB,IAA0BW,KAAK,CAACC,OAAN,CAAcR,UAAU,CAACM,KAAzB,CAAtD,CAJkB;AAKpCnB,MAAAA,IALoC;AAMpCO,MAAAA,SAAS,EAAEf,KAAK,CAACS,KAAD,EAAQ,WAAR,CANoB;AAOpCO,MAAAA,QAAQ,EAAEhB,KAAK,CAACS,KAAD,EAAQ,UAAR,CAPqB;AAQpCW,MAAAA,QAAQ,EAAEpB,KAAK,CAACS,KAAD,EAAQ,UAAR,CARqB;AASpCS,MAAAA,IAAI,EAAElB,KAAK,CAACS,KAAD,EAAQ,MAAR;AATyB,KAA/B,CAAP;AAYAN,IAAAA,SAAS,CAAC,MAAM;AAAA;;AACd;AAAA,iBAEU,2BAFV;AAAA,4BAGuBM,KAAK,CAACS,IAAN,KAAe,OAAf,GAAyBN,EAAE,CAACe,KAA5B,GAAoCG,SAH3D;AAAA,gBAIWrB,KAAK,CAACS,IAAN,KAAe,OAAf,GAAyB,YAAzB,GAAwCY;AAJnD,UAMML,KANN,sCAMMA,KAAK,CAAEN,OANb,qBAMM,oBAAAM,KAAK,CANX;AASD,KAVQ,CAAT;AAYA,WAAO,EAAP;AACD;;AAtDmD,CAAD,CAA9C","sourcesContent":["// Styles\nimport './VSelectionControlGroup.sass'\n\n// Composables\nimport { useProxiedModel } from '@/composables/proxiedModel'\n\n// Utility\nimport { computed, provide, toRef } from 'vue'\nimport { defineComponent, getUid, useRender } from '@/util'\n\n// Types\nimport type { InjectionKey, PropType, Ref } from 'vue'\n\nexport interface VSelectionGroupContext {\n  disabled: Ref<boolean>\n  inline: Ref<boolean>\n  name: Ref<string | undefined>\n  modelValue: Ref<any>\n  multiple: Ref<boolean>\n  trueIcon: Ref<string | undefined>\n  falseIcon: Ref<string | undefined>\n  readonly: Ref<boolean>\n  type: Ref<string | undefined>\n}\n\nexport const VSelectionControlGroupSymbol: InjectionKey<VSelectionGroupContext> = Symbol.for('vuetify:selection-control-group')\n\nexport const VSelectionControlGroup = defineComponent({\n  name: 'VSelectionControlGroup',\n\n  props: {\n    disabled: Boolean,\n    id: String,\n    inline: Boolean,\n    name: String,\n    falseIcon: String,\n    trueIcon: String,\n    multiple: {\n      type: Boolean as PropType<boolean | null>,\n      default: null,\n    },\n    readonly: Boolean,\n    type: String,\n    modelValue: null,\n  },\n\n  emits: {\n    'update:modelValue': (val: any) => true,\n  },\n\n  setup (props, { slots }) {\n    const modelValue = useProxiedModel(props, 'modelValue')\n    const uid = getUid()\n    const id = computed(() => props.id || `v-selection-control-group-${uid}`)\n    const name = computed(() => props.name || id.value)\n\n    provide(VSelectionControlGroupSymbol, {\n      disabled: toRef(props, 'disabled'),\n      inline: toRef(props, 'inline'),\n      modelValue,\n      multiple: computed(() => !!props.multiple || (props.multiple == null && Array.isArray(modelValue.value))),\n      name,\n      falseIcon: toRef(props, 'falseIcon'),\n      trueIcon: toRef(props, 'trueIcon'),\n      readonly: toRef(props, 'readonly'),\n      type: toRef(props, 'type'),\n    })\n\n    useRender(() => {\n      return (\n        <div\n          class=\"v-selection-control-group\"\n          aria-labelled-by={ props.type === 'radio' ? id.value : undefined }\n          role={ props.type === 'radio' ? 'radiogroup' : undefined }\n        >\n          { slots?.default?.() }\n        </div>\n      )\n    })\n\n    return {}\n  },\n})\n\nexport type VSelectionControlGroup = InstanceType<typeof VSelectionControlGroup>\n"],"file":"VSelectionControlGroup.mjs"}