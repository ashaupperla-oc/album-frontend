{"version":3,"sources":["../../../src/components/VTabs/VTab.tsx"],"names":["VBtn","makeGroupItemProps","makeRouterProps","makeTagProps","makeThemeProps","useTextColor","computed","ref","defineComponent","pick","standardEasing","useRender","VTabsSymbol","VTab","name","props","fixed","Boolean","icon","String","prependIcon","appendIcon","stacked","title","ripple","type","default","color","sliderColor","hideSlider","direction","selectedClass","setup","slots","attrs","textColorClasses","sliderColorClasses","textColorStyles","sliderColorStyles","isHorizontal","isSelected","rootEl","sliderEl","updateSlider","value","prevEl","$el","parentElement","querySelector","nextEl","getComputedStyle","prevBox","getBoundingClientRect","nextBox","xy","XY","rightBottom","widthHeight","prevPos","nextPos","delta","origin","Math","sign","size","abs","scale","max","initialScale","sigma","animate","backgroundColor","transform","transformOrigin","Array","fill","duration","easing","btnProps","undefined"],"mappings":"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","sourcesContent":["// Styles\nimport './VTab.sass'\n\n// Components\nimport { VBtn } from '@/components/VBtn'\n\n// Composables\nimport { makeGroupItemProps } from '@/composables/group'\nimport { makeRouterProps } from '@/composables/router'\nimport { makeTagProps } from '@/composables/tag'\nimport { makeThemeProps } from '@/composables/theme'\nimport { useTextColor } from '@/composables/color'\n\n// Utilities\nimport { computed, ref } from 'vue'\nimport { defineComponent, pick, standardEasing, useRender } from '@/util'\nimport { VTabsSymbol } from './shared'\n\n// Types\nimport type { PropType } from 'vue'\n\nexport const VTab = defineComponent({\n  name: 'VTab',\n\n  props: {\n    fixed: Boolean,\n    icon: [Boolean, String],\n    prependIcon: String,\n    appendIcon: String,\n\n    stacked: Boolean,\n    title: String,\n\n    ripple: {\n      type: Boolean,\n      default: true,\n    },\n    color: String,\n    sliderColor: String,\n    hideSlider: Boolean,\n\n    direction: {\n      type: String as PropType<'horizontal' | 'vertical'>,\n      default: 'horizontal',\n    },\n\n    ...makeTagProps(),\n    ...makeRouterProps(),\n    ...makeGroupItemProps({\n      selectedClass: 'v-tab--selected',\n    }),\n    ...makeThemeProps(),\n  },\n\n  setup (props, { slots, attrs }) {\n    const { textColorClasses: sliderColorClasses, textColorStyles: sliderColorStyles } = useTextColor(props, 'sliderColor')\n    const isHorizontal = computed(() => props.direction === 'horizontal')\n    const isSelected = ref(false)\n\n    const rootEl = ref<VBtn>()\n    const sliderEl = ref<HTMLElement>()\n\n    function updateSlider ({ value }: { value: boolean }) {\n      isSelected.value = value\n\n      if (value) {\n        const prevEl: HTMLElement | undefined = rootEl.value?.$el.parentElement?.querySelector('.v-tab--selected .v-tab__slider')\n        const nextEl = sliderEl.value\n\n        if (!prevEl || !nextEl) return\n\n        const color = getComputedStyle(prevEl).color\n\n        const prevBox = prevEl.getBoundingClientRect()\n        const nextBox = nextEl.getBoundingClientRect()\n\n        const xy = isHorizontal.value ? 'x' : 'y'\n        const XY = isHorizontal.value ? 'X' : 'Y'\n        const rightBottom = isHorizontal.value ? 'right' : 'bottom'\n        const widthHeight = isHorizontal.value ? 'width' : 'height'\n\n        const prevPos = prevBox[xy]\n        const nextPos = nextBox[xy]\n        const delta = prevPos > nextPos\n          ? prevBox[rightBottom] - nextBox[rightBottom]\n          : prevBox[xy] - nextBox[xy]\n        const origin =\n          Math.sign(delta) > 0 ? (isHorizontal.value ? 'right' : 'bottom')\n          : Math.sign(delta) < 0 ? (isHorizontal.value ? 'left' : 'top')\n          : 'center'\n        const size = Math.abs(delta) + (Math.sign(delta) < 0 ? prevBox[widthHeight] : nextBox[widthHeight])\n        const scale = size / Math.max(prevBox[widthHeight], nextBox[widthHeight])\n        const initialScale = prevBox[widthHeight] / nextBox[widthHeight]\n\n        const sigma = 1.5\n        nextEl.animate({\n          backgroundColor: [color, ''],\n          transform: [\n            `translate${XY}(${delta}px) scale${XY}(${initialScale})`,\n            `translate${XY}(${delta / sigma}px) scale${XY}(${(scale - 1) / sigma + 1})`,\n            '',\n          ],\n          transformOrigin: Array(3).fill(origin),\n        }, {\n          duration: 225,\n          easing: standardEasing,\n        })\n      }\n    }\n\n    useRender(() => {\n      const [btnProps] = pick(props, [\n        'href',\n        'to',\n        'replace',\n        'icon',\n        'stacked',\n        'prependIcon',\n        'appendIcon',\n        'ripple',\n        'theme',\n        'disabled',\n        'selectedClass',\n        'value',\n        'color',\n      ])\n\n      return (\n        <VBtn\n          _as=\"VTab\"\n          symbol={ VTabsSymbol }\n          ref={ rootEl }\n          class={[\n            'v-tab',\n          ]}\n          tabindex={ isSelected.value ? 0 : -1 }\n          role=\"tab\"\n          aria-selected={ String(isSelected.value) }\n          block={ props.fixed }\n          maxWidth={ props.fixed ? 300 : undefined }\n          variant=\"text\"\n          rounded={ 0 }\n          { ...btnProps }\n          { ...attrs }\n          onGroup:selected={ updateSlider }\n        >\n          { slots.default ? slots.default() : props.title }\n          { !props.hideSlider && (\n            <div\n              ref={ sliderEl }\n              class={[\n                'v-tab__slider',\n                sliderColorClasses.value,\n              ]}\n              style={ sliderColorStyles.value }\n            />\n          ) }\n        </VBtn>\n      )\n    })\n\n    return {}\n  },\n})\n\nexport type VTab = InstanceType<typeof VTab>\n"],"file":"VTab.mjs"}