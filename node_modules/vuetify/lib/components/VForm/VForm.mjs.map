{"version":3,"sources":["../../../src/components/VForm/VForm.tsx"],"names":["createForm","makeFormProps","ref","defineComponent","useRender","useForwardRef","VForm","name","props","emits","val","submit","e","setup","slots","emit","form","formRef","onReset","preventDefault","reset","onSubmit","_e","ready","validate","then","bind","catch","finally","defaultPrevented","valid","value","default"],"mappings":";AAAA;SACSA,U,EAAYC,a,sCAErB;;AACA,SAASC,GAAT,QAAoB,KAApB;SACSC,e,EAAiBC,S;SACjBC,a,4CAET;;AAGA,OAAO,MAAMC,KAAK,GAAGH,eAAe,CAAC;AACnCI,EAAAA,IAAI,EAAE,OAD6B;AAGnCC,EAAAA,KAAK,EAAE,EACL,GAAGP,aAAa;AADX,GAH4B;AAOnCQ,EAAAA,KAAK,EAAE;AACL,yBAAsBC,GAAD,IAAyB,IADzC;AAELC,IAAAA,MAAM,EAAGC,CAAD,IAA2B;AAF9B,GAP4B;;AAYnCC,EAAAA,KAAK,CAAEL,KAAF,QAA0B;AAAA,QAAjB;AAAEM,MAAAA,KAAF;AAASC,MAAAA;AAAT,KAAiB;AAC7B,UAAMC,IAAI,GAAGhB,UAAU,CAACQ,KAAD,CAAvB;AACA,UAAMS,OAAO,GAAGf,GAAG,EAAnB;;AAEA,aAASgB,OAAT,CAAkBN,CAAlB,EAA4B;AAC1BA,MAAAA,CAAC,CAACO,cAAF;AACAH,MAAAA,IAAI,CAACI,KAAL;AACD;;AAED,aAASC,QAAT,CAAmBC,EAAnB,EAA8B;AAC5B,YAAMV,CAAC,GAAGU,EAAV;AAEA,YAAMC,KAAK,GAAGP,IAAI,CAACQ,QAAL,EAAd;AACAZ,MAAAA,CAAC,CAACa,IAAF,GAASF,KAAK,CAACE,IAAN,CAAWC,IAAX,CAAgBH,KAAhB,CAAT;AACAX,MAAAA,CAAC,CAACe,KAAF,GAAUJ,KAAK,CAACI,KAAN,CAAYD,IAAZ,CAAiBH,KAAjB,CAAV;AACAX,MAAAA,CAAC,CAACgB,OAAF,GAAYL,KAAK,CAACK,OAAN,CAAcF,IAAd,CAAmBH,KAAnB,CAAZ;AAEAR,MAAAA,IAAI,CAAC,QAAD,EAAWH,CAAX,CAAJ;;AAEA,UAAI,CAACA,CAAC,CAACiB,gBAAP,EAAyB;AACvBN,QAAAA,KAAK,CAACE,IAAN,CAAW,SAAe;AAAA,cAAd;AAAEK,YAAAA;AAAF,WAAc;;AACxB,cAAIA,KAAJ,EAAW;AAAA;;AACT,8BAAAb,OAAO,CAACc,KAAR,oCAAepB,MAAf;AACD;AACF,SAJD;AAKD;;AAEDC,MAAAA,CAAC,CAACO,cAAF;AACD;;AAEDf,IAAAA,SAAS,CAAC;AAAA;;AAAA;AAAA,eAEAa,OAFA;AAAA,iBAGA,QAHA;AAAA;AAAA,mBAKIC,OALJ;AAAA,oBAMKG;AANL,4BAQJP,KAAK,CAACkB,OARF,qBAQJ,oBAAAlB,KAAK,EAAWE,IAAX,CARD;AAAA,KAAD,CAAT;AAYA,WAAOX,aAAa,CAACW,IAAD,EAAOC,OAAP,CAApB;AACD;;AAvDkC,CAAD,CAA7B","sourcesContent":["// Composables\nimport { createForm, makeFormProps } from '@/composables/form'\n\n// Utilities\nimport { ref } from 'vue'\nimport { defineComponent, useRender } from '@/util'\nimport { useForwardRef } from '@/composables/forwardRef'\n\n// Types\nimport type { SubmitEventPromise } from '@/composables/form'\n\nexport const VForm = defineComponent({\n  name: 'VForm',\n\n  props: {\n    ...makeFormProps(),\n  },\n\n  emits: {\n    'update:modelValue': (val: boolean | null) => true,\n    submit: (e: SubmitEventPromise) => true,\n  },\n\n  setup (props, { slots, emit }) {\n    const form = createForm(props)\n    const formRef = ref<HTMLFormElement>()\n\n    function onReset (e: Event) {\n      e.preventDefault()\n      form.reset()\n    }\n\n    function onSubmit (_e: Event) {\n      const e = _e as SubmitEventPromise\n\n      const ready = form.validate()\n      e.then = ready.then.bind(ready)\n      e.catch = ready.catch.bind(ready)\n      e.finally = ready.finally.bind(ready)\n\n      emit('submit', e)\n\n      if (!e.defaultPrevented) {\n        ready.then(({ valid }) => {\n          if (valid) {\n            formRef.value?.submit()\n          }\n        })\n      }\n\n      e.preventDefault()\n    }\n\n    useRender(() => ((\n      <form\n        ref={ formRef }\n        class=\"v-form\"\n        novalidate\n        onReset={ onReset }\n        onSubmit={ onSubmit }\n      >\n        { slots.default?.(form) }\n      </form>\n    )))\n\n    return useForwardRef(form, formRef)\n  },\n})\n\nexport type VForm = InstanceType<typeof VForm>\n"],"file":"VForm.mjs"}