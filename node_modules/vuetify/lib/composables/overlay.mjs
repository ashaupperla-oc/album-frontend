// Utilities
import { computed, inject, provide, ref, watch } from 'vue';
import { getUid } from "../util/index.mjs"; // Types

export const VuetifyOverlayKey = Symbol.for('vuetify:overlay');
const ROOT_ZINDEX = 2000;
export function useOverlay(isActive) {
  const {
    zIndex,
    overlays
  } = inject(VuetifyOverlayKey, {
    zIndex: ref(ROOT_ZINDEX),
    overlays: ref([])
  });
  const id = getUid();
  watch(isActive, value => {
    if (value) {
      overlays.value.push(id);
    } else {
      overlays.value = overlays.value.filter(x => x !== id);
    }
  }, {
    immediate: true
  });
  provide(VuetifyOverlayKey, {
    zIndex,
    overlays
  });
  const overlayZIndex = computed(() => zIndex.value + overlays.value.indexOf(id) + 1);
  return {
    overlayZIndex
  };
}
//# sourceMappingURL=overlay.mjs.map