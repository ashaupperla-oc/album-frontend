{"version":3,"sources":["../../src/composables/overlay.ts"],"names":["computed","inject","provide","ref","watch","getUid","VuetifyOverlayKey","Symbol","for","ROOT_ZINDEX","useOverlay","isActive","zIndex","overlays","id","value","push","filter","x","immediate","overlayZIndex","indexOf"],"mappings":"AAAA;AACA,SAASA,QAAT,EAAmBC,MAAnB,EAA2BC,OAA3B,EAAoCC,GAApC,EAAyCC,KAAzC,QAAsD,KAAtD;SACSC,M,6BAET;;AAQA,OAAO,MAAMC,iBAA+C,GAAGC,MAAM,CAACC,GAAP,CAAW,iBAAX,CAAxD;AAEP,MAAMC,WAAW,GAAG,IAApB;AAEA,OAAO,SAASC,UAAT,CAAqBC,QAArB,EAAyD;AAC9D,QAAM;AAAEC,IAAAA,MAAF;AAAUC,IAAAA;AAAV,MAAuBZ,MAAM,CAACK,iBAAD,EAAoB;AAAEM,IAAAA,MAAM,EAAET,GAAG,CAACM,WAAD,CAAb;AAA4BI,IAAAA,QAAQ,EAAEV,GAAG,CAAC,EAAD;AAAzC,GAApB,CAAnC;AAEA,QAAMW,EAAE,GAAGT,MAAM,EAAjB;AAEAD,EAAAA,KAAK,CAACO,QAAD,EAAWI,KAAK,IAAI;AACvB,QAAIA,KAAJ,EAAW;AACTF,MAAAA,QAAQ,CAACE,KAAT,CAAeC,IAAf,CAAoBF,EAApB;AACD,KAFD,MAEO;AACLD,MAAAA,QAAQ,CAACE,KAAT,GAAiBF,QAAQ,CAACE,KAAT,CAAeE,MAAf,CAAsBC,CAAC,IAAIA,CAAC,KAAKJ,EAAjC,CAAjB;AACD;AACF,GANI,EAMF;AACDK,IAAAA,SAAS,EAAE;AADV,GANE,CAAL;AAUAjB,EAAAA,OAAO,CAACI,iBAAD,EAAoB;AAAEM,IAAAA,MAAF;AAAUC,IAAAA;AAAV,GAApB,CAAP;AAEA,QAAMO,aAAa,GAAGpB,QAAQ,CAAC,MAAMY,MAAM,CAACG,KAAP,GAAeF,QAAQ,CAACE,KAAT,CAAeM,OAAf,CAAuBP,EAAvB,CAAf,GAA4C,CAAnD,CAA9B;AAEA,SAAO;AAAEM,IAAAA;AAAF,GAAP;AACD","sourcesContent":["// Utilities\nimport { computed, inject, provide, ref, watch } from 'vue'\nimport { getUid } from '@/util'\n\n// Types\nimport type { InjectionKey, Ref } from 'vue'\n\ntype OverlayProvide = {\n  overlays: Ref<number[]>\n  zIndex: Ref<number>\n}\n\nexport const VuetifyOverlayKey: InjectionKey<OverlayProvide> = Symbol.for('vuetify:overlay')\n\nconst ROOT_ZINDEX = 2000\n\nexport function useOverlay (isActive: Ref<boolean | undefined>) {\n  const { zIndex, overlays } = inject(VuetifyOverlayKey, { zIndex: ref(ROOT_ZINDEX), overlays: ref([]) })\n\n  const id = getUid()\n\n  watch(isActive, value => {\n    if (value) {\n      overlays.value.push(id)\n    } else {\n      overlays.value = overlays.value.filter(x => x !== id)\n    }\n  }, {\n    immediate: true,\n  })\n\n  provide(VuetifyOverlayKey, { zIndex, overlays })\n\n  const overlayZIndex = computed(() => zIndex.value + overlays.value.indexOf(id) + 1)\n\n  return { overlayZIndex }\n}\n"],"file":"overlay.mjs"}